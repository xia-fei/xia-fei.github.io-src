{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/img/icon_wechat.png","path":"img/icon_wechat.png","modified":0,"renderable":0},{"_id":"source/img/me.jpg","path":"img/me.jpg","modified":0,"renderable":0},{"_id":"source/img/psu.jpg","path":"img/psu.jpg","modified":0,"renderable":0},{"_id":"source/img/article/tag.png","path":"img/article/tag.png","modified":0,"renderable":0},{"_id":"themes/huweihuang/source/css/archive.styl","path":"css/archive.styl","modified":0,"renderable":1},{"_id":"themes/huweihuang/source/css/beantech.min.css","path":"css/beantech.min.css","modified":0,"renderable":1},{"_id":"themes/huweihuang/source/css/beantech.css","path":"css/beantech.css","modified":0,"renderable":1},{"_id":"themes/huweihuang/source/css/donate.css","path":"css/donate.css","modified":0,"renderable":1},{"_id":"themes/huweihuang/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"themes/huweihuang/source/css/hux-blog.min.css","path":"css/hux-blog.min.css","modified":0,"renderable":1},{"_id":"themes/huweihuang/source/css/rocket.styl","path":"css/rocket.styl","modified":0,"renderable":1},{"_id":"themes/huweihuang/source/css/signature.styl","path":"css/signature.styl","modified":0,"renderable":1},{"_id":"themes/huweihuang/source/css/toc.styl","path":"css/toc.styl","modified":0,"renderable":1},{"_id":"themes/huweihuang/source/css/widget.styl","path":"css/widget.styl","modified":0,"renderable":1},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.eot","path":"fonts/glyphicons-halflings-regular.eot","modified":0,"renderable":1},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.woff2","path":"fonts/glyphicons-halflings-regular.woff2","modified":0,"renderable":1},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.woff","path":"fonts/glyphicons-halflings-regular.woff","modified":0,"renderable":1},{"_id":"themes/huweihuang/source/js/bootstrap.min.js","path":"js/bootstrap.min.js","modified":0,"renderable":1},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.ttf","path":"fonts/glyphicons-halflings-regular.ttf","modified":0,"renderable":1},{"_id":"themes/huweihuang/source/js/hux-blog.js","path":"js/hux-blog.js","modified":0,"renderable":1},{"_id":"themes/huweihuang/source/js/hux-blog.min.js","path":"js/hux-blog.min.js","modified":0,"renderable":1},{"_id":"themes/huweihuang/source/js/jquery.nav.js","path":"js/jquery.nav.js","modified":0,"renderable":1},{"_id":"themes/huweihuang/source/js/jquery.tagcloud.js","path":"js/jquery.tagcloud.js","modified":0,"renderable":1},{"_id":"themes/huweihuang/source/js/toc.js","path":"js/toc.js","modified":0,"renderable":1},{"_id":"themes/huweihuang/source/js/totop.js","path":"js/totop.js","modified":0,"renderable":1},{"_id":"source/img/header_img/about.jpg","path":"img/header_img/about.jpg","modified":0,"renderable":0},{"_id":"themes/huweihuang/source/css/bootstrap.min.css","path":"css/bootstrap.min.css","modified":0,"renderable":1},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.svg","path":"fonts/glyphicons-halflings-regular.svg","modified":0,"renderable":1},{"_id":"themes/huweihuang/source/js/bootstrap.js","path":"js/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/huweihuang/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"source/img/header_img/archive.jpg","path":"img/header_img/archive.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/archives-widget.jpg","path":"img/header_img/archives-widget.jpg","modified":0,"renderable":0},{"_id":"themes/huweihuang/source/css/bootstrap.css","path":"css/bootstrap.css","modified":0,"renderable":1},{"_id":"themes/huweihuang/source/css/images/rocket.png","path":"css/images/rocket.png","modified":0,"renderable":1},{"_id":"themes/huweihuang/source/css/images/ironman.png","path":"css/images/ironman.png","modified":0,"renderable":1},{"_id":"source/img/avatar/ironman.png","path":"img/avatar/ironman.png","modified":0,"renderable":0},{"_id":"source/img/signature/BeanTechSign-white.png","path":"img/signature/BeanTechSign-white.png","modified":0,"renderable":0},{"_id":"themes/huweihuang/source/js/jquery.js","path":"js/jquery.js","modified":0,"renderable":1},{"_id":"source/img/signature/BeanTechSign-black.png","path":"img/signature/BeanTechSign-black.png","modified":0,"renderable":0},{"_id":"source/img/article_header/article_bg.jpg","path":"img/article_header/article_bg.jpg","modified":0,"renderable":0},{"_id":"source/img/article/huweihuang_blog.png","path":"img/article/huweihuang_blog.png","modified":0,"renderable":0},{"_id":"source/img/header_img/home.jpg","path":"img/header_img/home.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/tag.png","path":"img/header_img/tag.png","modified":0,"renderable":0},{"_id":"source/img/article_header/article_header.png","path":"img/article_header/article_header.png","modified":0,"renderable":0},{"_id":"source/img/header_img/home-bg-o.png","path":"img/header_img/home-bg-o.png","modified":0,"renderable":0},{"_id":"source/img/header_img/home2.png","path":"img/header_img/home2.png","modified":0,"renderable":0},{"_id":"source/img/header_img/404.png","path":"img/header_img/404.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/404.md","hash":"8aa56af7bcd7cd23667cbf3eb5b5c9fa4533eb60","modified":1560738353741},{"_id":"source/CNAME","hash":"97ef4505ea3e18158e6cbe842a2cd60dd1ca47ed","modified":1560738353741},{"_id":"themes/huweihuang/_config.yml","hash":"e800e32847df32dacddb5202823a004557023bcd","modified":1560738353782},{"_id":"themes/huweihuang/LICENSE","hash":"2b209f06bebeb2a8c2b7e187e436f3e1e1fbc8a7","modified":1560738353782},{"_id":"source/_posts/JVM-ClassLoader.md","hash":"8349d84bc114ba1255ad5f4e9d3eba7e2db94410","modified":1560738353745},{"_id":"source/_posts/Links.md","hash":"79ad8242cc860b17ba3b16e331a91db87a184bd3","modified":1560738353745},{"_id":"source/_posts/LinuxPermission.md","hash":"924a51bb9f0b05b7ef44b91a1c44ab5b54b771cd","modified":1560738353745},{"_id":"source/_posts/Maven-Repository.md","hash":"d3b2fb711229be211553fa06caaf054a521f4026","modified":1560738353745},{"_id":"source/_posts/SpringMVCOutputStream.md","hash":"8cf086fda8c549e3d3e53b8eafe5a0e17185cd18","modified":1560738353745},{"_id":"source/_posts/TransactionalConcurrentIssue.md","hash":"f28636272de46571762e4fe8403ed139b2cb7fa4","modified":1560738353746},{"_id":"source/_posts/RocketMQ-Deploy.md","hash":"9a59fcf00581f423077b76607e6ec23449e01527","modified":1560738353745},{"_id":"source/_posts/ThreadPoolExecuter.md","hash":"c83f09834c8826fa2e1f8a8ac3dd6909456ae969","modified":1560738353746},{"_id":"source/_posts/Yum-package.md","hash":"ce85f017cbcf59c5048c333a3ec15b812673422d","modified":1560738353746},{"_id":"source/_posts/introduction.md","hash":"4058e38bd493cc260301141d21e5ae222ee214a7","modified":1560738353746},{"_id":"source/_posts/ko-spring-mvc.md","hash":"96ce23c3409fc51af977cb87be5e08e339e28e5e","modified":1560738353746},{"_id":"source/_posts/mybatis-log-sql.md","hash":"a337b2b4523819457876464116c32c9b36404b6b","modified":1560738353746},{"_id":"source/_posts/mongodb-deploy.md","hash":"afe3a87ad79f34e6a14c163453dd43a93b8b736c","modified":1560738353746},{"_id":"source/_posts/packageScan.md","hash":"f9732a85d449b7337d94eed484cec6b57704b2d1","modified":1560738353747},{"_id":"source/_posts/spring-mvc-vue.md","hash":"5ca701a8b669aa24930d59cff6790f0cbd2a6af3","modified":1560738353747},{"_id":"source/about/index.md","hash":"4529830f4bd9f6275d8cc468731966f87faf8ef7","modified":1560738353747},{"_id":"source/_drafts/test.md","hash":"bf960c5e5785aded79a340cf60532fcf30843658","modified":1560738353741},{"_id":"source/archive/index.md","hash":"40c6d6d8a40f8133e48eaf8111df4a361d6ac30d","modified":1560738353747},{"_id":"source/img/icon_wechat.png","hash":"4188058026609de06c6cac88b349a2da831a1783","modified":1560738353778},{"_id":"source/img/me.jpg","hash":"44e3d53bf1c0cfe1ecb9d43ab732c9deabac371c","modified":1560738353778},{"_id":"source/img/psu.jpg","hash":"b82344ac50abd52ee3312c0681323645e800e021","modified":1560738353778},{"_id":"source/tags/index.md","hash":"f6ad1039c242795de5cd7d81781148f8c5298c28","modified":1560738353782},{"_id":"themes/huweihuang/languages_to_be_added/de.yml","hash":"424a9c1e6ab69334d7873f6574da02ca960aa572","modified":1560738353783},{"_id":"themes/huweihuang/languages_to_be_added/default.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1560738353783},{"_id":"themes/huweihuang/languages_to_be_added/es.yml","hash":"cb4eeca0ed3768a77e0cd216300f2b2549628b1b","modified":1560738353783},{"_id":"themes/huweihuang/languages_to_be_added/en.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1560738353783},{"_id":"themes/huweihuang/languages_to_be_added/no.yml","hash":"8ca475a3b4f8efe6603030f0013aae39668230e1","modified":1560738353783},{"_id":"themes/huweihuang/languages_to_be_added/pl.yml","hash":"de7eb5850ae65ba7638e907c805fea90617a988c","modified":1560738353783},{"_id":"themes/huweihuang/languages_to_be_added/ru.yml","hash":"42df7afeb7a35dc46d272b7f4fb880a9d9ebcaa5","modified":1560738353783},{"_id":"themes/huweihuang/languages_to_be_added/zh-CN.yml","hash":"7bfcb0b8e97d7e5edcfca8ab26d55d9da2573c1c","modified":1560738353783},{"_id":"themes/huweihuang/languages_to_be_added/zh-TW.yml","hash":"9acac6cc4f8002c3fa53ff69fb8cf66c915bd016","modified":1560738353784},{"_id":"themes/huweihuang/layout/404.ejs","hash":"40de38bd399f6f4aef0d6c63c7b13b02d74f1c56","modified":1560738353784},{"_id":"themes/huweihuang/layout/about.ejs","hash":"edcf8fa3bf7093c974d418ffef42ac89c19af128","modified":1560738353786},{"_id":"themes/huweihuang/layout/archive.ejs","hash":"72a150c8dff0031a9107d12eaa7c2e6c6ce950d2","modified":1560738353786},{"_id":"themes/huweihuang/layout/keynote.ejs","hash":"f3e41b50d90db9467573762a839ba6d6b82ff788","modified":1560738523044},{"_id":"themes/huweihuang/layout/layout.ejs","hash":"521f9e7cdf80e413b8c76a0d161a44ec5eb12a94","modified":1560738511956},{"_id":"themes/huweihuang/layout/index.ejs","hash":"dc8a6eaa00d1e7c33a40979afe0953ed5d7b512e","modified":1560738353786},{"_id":"themes/huweihuang/layout/post.ejs","hash":"970203c430a89f4f386d111eae6afebefed4f247","modified":1560738353787},{"_id":"themes/huweihuang/layout/page.ejs","hash":"9827ab6838efda3b31cccc60c231abd3494dd06a","modified":1560738353787},{"_id":"themes/huweihuang/layout/tags.ejs","hash":"2c72eb2e89130658aa068d80d27b561b509c5dcd","modified":1560738353787},{"_id":"source/img/article/tag.png","hash":"c8632d64d9471009098b84f70273e63037a4e7b8","modified":1560738353749},{"_id":"themes/huweihuang/layout/_partial/footer.ejs","hash":"69f878c1effe2f2e415b3c13b42cfbf982b7b4f4","modified":1560738353784},{"_id":"themes/huweihuang/layout/_partial/header.ejs","hash":"3bd09df76e0622d76d186b020393fcab361e6c97","modified":1560738353784},{"_id":"themes/huweihuang/layout/_partial/head.ejs","hash":"ae18163bfd8d812264c77dff152903c1b8c983e4","modified":1560738353784},{"_id":"themes/huweihuang/layout/_partial/nav.ejs","hash":"4c905166c960852e9b9a3c9d5c680091e37b481f","modified":1560738353785},{"_id":"themes/huweihuang/layout/_partial/pagination.ejs","hash":"557d6bb069a1d48af49ae912994653f44b32a570","modified":1560738353785},{"_id":"themes/huweihuang/layout/_partial/sidebar.ejs","hash":"2e4e528a555917b2a267da4db2440bcc4a7a65ab","modified":1560738353785},{"_id":"themes/huweihuang/layout/_partial/toc.ejs","hash":"40e11b303df113c64a5ca35b79dd53c824010c09","modified":1560738353785},{"_id":"themes/huweihuang/layout/_widget/archive.ejs","hash":"7594929d472806ca4c64d9906d9903a96de111a0","modified":1560738353785},{"_id":"themes/huweihuang/layout/_widget/category.ejs","hash":"1cf485def07dc06e870dc9613767c6c614bcf428","modified":1560738353785},{"_id":"themes/huweihuang/layout/_widget/featured-tags.ejs","hash":"0c9ce1942f1943dc8891a9302a922ef1ffe300c5","modified":1560738353785},{"_id":"themes/huweihuang/layout/_widget/friends-blog.ejs","hash":"734d3775017aedac185028924baf890a71a74548","modified":1560738353786},{"_id":"themes/huweihuang/layout/_widget/recent-posts.ejs","hash":"e08ab8ba60e31638006acf27f066b989a0a3c433","modified":1560738353786},{"_id":"themes/huweihuang/layout/_widget/short-about.ejs","hash":"315de02246f07c747c32495e107ad7b19cb3ff54","modified":1560738353786},{"_id":"themes/huweihuang/source/css/archive.styl","hash":"715bcbd085eb95ec26c9805c11c374919cde971c","modified":1560738353787},{"_id":"themes/huweihuang/source/css/beantech.min.css","hash":"05a06230b1a9eca0b30cece54a397008cb77dc50","modified":1560738353788},{"_id":"themes/huweihuang/source/css/beantech.css","hash":"4c361354fd8e9851923fb21a620bc079380ebcd8","modified":1560738353788},{"_id":"themes/huweihuang/source/css/donate.css","hash":"f65ac8363d8d215adb896158e7b45165db259a47","modified":1560738353789},{"_id":"themes/huweihuang/source/css/highlight.styl","hash":"e842080e6d580f0f70a7df71fbde3c4e49463c19","modified":1560738353790},{"_id":"themes/huweihuang/source/css/hux-blog.min.css","hash":"1baef04de262aeb7023d835429b49a805ac4ab40","modified":1560738353790},{"_id":"themes/huweihuang/source/css/rocket.styl","hash":"e15c51c8566ecd943112e57592888dd318b6fa6a","modified":1560738353790},{"_id":"themes/huweihuang/source/css/signature.styl","hash":"88159b31c59d59c01a0b534af57242662a2a3969","modified":1560738353790},{"_id":"themes/huweihuang/source/css/toc.styl","hash":"631e97f634d30f53314e2fec8bdde267c1c49f4c","modified":1560738353791},{"_id":"themes/huweihuang/source/css/widget.styl","hash":"7a9f735f5ef323dc2950fbd9d76daa16c9a0f1a9","modified":1560738353791},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1560738353791},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1560738353793},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1560738353793},{"_id":"themes/huweihuang/source/js/bootstrap.min.js","hash":"b3f2ef9f985e7906c9360756b73cd64bf7733647","modified":1560738353793},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1560738353792},{"_id":"themes/huweihuang/source/js/hux-blog.js","hash":"4b4d3c557405d04c3087d36c13e2834fe05c0f73","modified":1560738353794},{"_id":"themes/huweihuang/source/js/hux-blog.min.js","hash":"1563e7f70550ac6b30803d6f449719b853200e35","modified":1560738353794},{"_id":"themes/huweihuang/source/js/jquery.nav.js","hash":"ef2160a456176a4d09cc0b95d52b27dfbbadf2d8","modified":1560738353796},{"_id":"themes/huweihuang/source/js/jquery.tagcloud.js","hash":"4e5fd0b07f3bd935f2e603710447e039e3677211","modified":1560738353796},{"_id":"themes/huweihuang/source/js/toc.js","hash":"41e52551731854224c249d53010c1bae5aa92ffa","modified":1560738353796},{"_id":"themes/huweihuang/source/js/totop.js","hash":"c05360f6fc699ac12e794b1764b4a952713a3017","modified":1560738353796},{"_id":"source/img/header_img/about.jpg","hash":"62a9a76854503c327990cc8d10de293ab6e9588f","modified":1560738353761},{"_id":"themes/huweihuang/source/css/bootstrap.min.css","hash":"fec7b176a4b9a67c0eb5d184f57b84297efc23aa","modified":1560738353789},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1560738353792},{"_id":"themes/huweihuang/source/js/bootstrap.js","hash":"f8752e9ae24daec0a0baffd7819122f8c6fd9103","modified":1560738353793},{"_id":"themes/huweihuang/source/js/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1560738353796},{"_id":"source/img/header_img/archive.jpg","hash":"990f6f9dd0ecb5348bfcc47305553d58c0d8f326","modified":1560738353763},{"_id":"source/img/header_img/archives-widget.jpg","hash":"68f7d525269a94287e0ad18713ae232fb59dcf71","modified":1560738353764},{"_id":"themes/huweihuang/source/css/bootstrap.css","hash":"41c54bf695145ae0b4d9020a1da308ceb05dcaf3","modified":1560738353789},{"_id":"themes/huweihuang/source/css/images/rocket.png","hash":"6dee0406955aa9b7a261161d30f2538a671e806b","modified":1560738353790},{"_id":"themes/huweihuang/source/css/images/ironman.png","hash":"2f0db0ab15d466c4065d9f6102fdf829726d9e3f","modified":1560738353790},{"_id":"source/img/avatar/ironman.png","hash":"7d6a06b4b544ab146c3b3e8474edc33f14ac6e4d","modified":1560738353755},{"_id":"source/img/signature/BeanTechSign-white.png","hash":"34289ed41cf9ddac2d56be46fbb1515b7d5913cd","modified":1560738353782},{"_id":"themes/huweihuang/source/js/jquery.js","hash":"1852661bd11a09ca9b9cb63d1aa6ff390fffaf4e","modified":1560738353795},{"_id":"source/img/signature/BeanTechSign-black.png","hash":"94b7102e819fd6ee082d3fb0166f4de7458c22ff","modified":1560738353780},{"_id":"source/img/article_header/article_bg.jpg","hash":"6af63305c923899017e727b5ca968a2703bc08cf","modified":1560738353750},{"_id":"source/img/article/huweihuang_blog.png","hash":"392cf8b33be6c752dd908e027fa3346a6ecd58ab","modified":1560738353749},{"_id":"source/img/header_img/home.jpg","hash":"8f1c440427a4aa86b623503a926c027e2e10cd66","modified":1560738353771},{"_id":"source/img/header_img/tag.png","hash":"e83cd7b04ff85bcbc9bd3ebf5e57a55166e82568","modified":1560738353778},{"_id":"source/img/article_header/article_header.png","hash":"d9fa12f1e40924a0db57761d09d52dce450b4f7b","modified":1560738353753},{"_id":"source/_drafts/test/Demo.png","hash":"d9fa12f1e40924a0db57761d09d52dce450b4f7b","modified":1560738353744},{"_id":"source/img/header_img/home-bg-o.png","hash":"134ece4cb4c49c7ca1403a5afe7f46d0e2f9ecbb","modified":1560738353768},{"_id":"source/img/header_img/home2.png","hash":"da6a3d5ca787bdc25e69655abd879b4f821aeb30","modified":1560738353775},{"_id":"source/img/header_img/404.png","hash":"6bf9c224543ec54e250309db89cbdf46e0c4b5ba","modified":1560738353760},{"_id":"public/post-sitemap.xml","hash":"f4f8a726f88ebde2f3a6f7d5272b2bf176df930d","modified":1560738762338},{"_id":"public/page-sitemap.xml","hash":"058903cb68d42a9ba66b12d1744b59214fff9849","modified":1560738762436},{"_id":"public/sitemap.xsl","hash":"4321fa69dc1b8811d32b7a1478e5603e038cea1a","modified":1560738762465},{"_id":"public/tag-sitemap.xml","hash":"fdbb3a48f14955311dbae16ab20e7bd99e0ef078","modified":1560738762469},{"_id":"public/sitemap.xml","hash":"d716b4a2c7da72393181c8a9fd3ba5e675a81ef9","modified":1560738762469},{"_id":"public/404.html","hash":"7ebbed20f6e73691bbb2556a4d6a94f86b41efc0","modified":1560738762476},{"_id":"public/tags/index.html","hash":"c68c1dfb6d2cfef5d3d979422849770a206eaf28","modified":1560738762476},{"_id":"public/article/spring-mvc-vue/index.html","hash":"6a9cd90395e621a1e3829102ca179a9768afd594","modified":1560738762476},{"_id":"public/article/LinuxPermission/index.html","hash":"a4cd25d2cf52fbde34e159da2f79c8812bdb8b64","modified":1560738762477},{"_id":"public/article/ko-spring-mvc/index.html","hash":"9d0f87b5f143191600b4f9b92db7e697f0d9505b","modified":1560738762477},{"_id":"public/article/packageScan/index.html","hash":"1adb601a41934cf4eaca31872841a7e37f31cb66","modified":1560738762477},{"_id":"public/article/Yum-package/index.html","hash":"2c5e05b556feeae4304205410df330552c88cb21","modified":1560738762477},{"_id":"public/article/mongodb-deploy/index.html","hash":"006d2c3d1e8b094b3144fa13b5669dce39fc2aff","modified":1560738762477},{"_id":"public/article/JVM-ClassLoader/index.html","hash":"5682a55c97f9da920870c4f2b7180665f36ba519","modified":1560738762477},{"_id":"public/article/introduction/index.html","hash":"afc941dfe027d41770e15a9ef8df37b7cbc889cb","modified":1560738762477},{"_id":"public/article/RocketMQ-Deploy/index.html","hash":"08169c1e3c2777389d72fd207dc3f04e432fab20","modified":1560738762477},{"_id":"public/article/mybatis-log-sql/index.html","hash":"ab26fb2ddf5e05becaff9e6b73701d6362ee8169","modified":1560738762478},{"_id":"public/article/TransactionalConcurrentIssue/index.html","hash":"84b110fb63b2507c7e8b1f3b2125b06d18826509","modified":1560738762478},{"_id":"public/article/Links/index.html","hash":"f7b27775f2aeb6c29d8c53da09ac4561c2418375","modified":1560738762478},{"_id":"public/article/Maven-Repository/index.html","hash":"608d58e8cea118862c98c46e61771271c0e0721d","modified":1560738762478},{"_id":"public/article/SpringMVCOutputStream/index.html","hash":"16bc86eb8d7473de48ff3605841cfb43d7e7e200","modified":1560738762478},{"_id":"public/article/ThreadPoolExecuter/index.html","hash":"2c92931689913d941b60fcbe55d423534819edb6","modified":1560738762478},{"_id":"public/archive/index.html","hash":"009f2acf2f143f8a07c460cfa79be747235752bf","modified":1560738762478},{"_id":"public/about/index.html","hash":"7f1f6b4ccd345f302fa8f6ed62f22b3532eb65ff","modified":1560738762478},{"_id":"public/index.html","hash":"9bf773ca8099c8906f8652bbaa196419c8cf0db2","modified":1560738762478},{"_id":"public/archives/2/index.html","hash":"dbbd28d1cfa5423e041588572dac75ea4e1b17b2","modified":1560738762478},{"_id":"public/archives/index.html","hash":"22f8ac7eb57db2be17f72b684fabed8574bc423b","modified":1560738762478},{"_id":"public/archives/archives/2/index.html","hash":"1bd2543a9699c60ed89a3ca3f76fa4b02290b382","modified":1560738762479},{"_id":"public/archives/2018/index.html","hash":"cdb1948c73fb873b1c7975133d136a4f0b63b189","modified":1560738762479},{"_id":"public/archives/2018/archives/2/index.html","hash":"aba2892d60bfe37a8bef14052fe32015b4cd0621","modified":1560738762479},{"_id":"public/archives/2018/06/index.html","hash":"c1d67bce751ab7c7192dfe9a1c27053bf1a5b438","modified":1560738762479},{"_id":"public/archives/2018/07/index.html","hash":"6946b09d1da641655793c191859b8166060a897a","modified":1560738762479},{"_id":"public/archives/2018/09/index.html","hash":"5bca04b8ee9de628cdc3fb989be916dbee7409f5","modified":1560738762479},{"_id":"public/archives/2018/10/index.html","hash":"5ed2e459996a323c57e29c1ffdcaa0f99ff7f634","modified":1560738762479},{"_id":"public/archives/2018/12/index.html","hash":"0de3bc83e0ac5264898bafe54f30466193cd6a28","modified":1560738762479},{"_id":"public/archives/2019/index.html","hash":"3610843d6878ba8663bbd0acadf8777e53c87c1d","modified":1560738762479},{"_id":"public/archives/2019/01/index.html","hash":"1ee3903a184c47d92190c622915e0ab2ad7b550a","modified":1560738762479},{"_id":"public/archives/2019/02/index.html","hash":"9d2e57bb92a9bdec53a373988efd701df0f61a24","modified":1560738762479},{"_id":"public/tags/jvm/index.html","hash":"a5619abcb453c49d896b69bb35d662e7d76bb201","modified":1560738762479},{"_id":"public/tags/Bookmark/index.html","hash":"c55d59de631271c1a05ca46be6da9ef46c6e1787","modified":1560738762479},{"_id":"public/tags/linux/index.html","hash":"8c678a8ff23561801bb5baeb4b727bddd93a0f2d","modified":1560738762479},{"_id":"public/tags/maven/index.html","hash":"08bb1cb877ec1b6064a463657f91e61960f41593","modified":1560738762480},{"_id":"public/tags/bug/index.html","hash":"90dfdf2decf23395f9f7c563270a5d90068d7f7c","modified":1560738762480},{"_id":"public/tags/Spring/index.html","hash":"313db94e22316f723ede724e40d143865a91ec7c","modified":1560738762480},{"_id":"public/tags/mq/index.html","hash":"b8cc79ed20c8330ca0d33ea1ae3cc50923f3ef17","modified":1560738762480},{"_id":"public/tags/Thread/index.html","hash":"716cf9a492ac71261a0a9f9190f95ece20b501bd","modified":1560738762480},{"_id":"public/tags/Liunx/index.html","hash":"4a5d21115caed8f1275cb1a94d01769c2802c948","modified":1560738762480},{"_id":"public/tags/spring/index.html","hash":"4d83d83300a1e55923a45caf9e7d5e134ae523f7","modified":1560738762480},{"_id":"public/tags/Mybatis/index.html","hash":"21fee7b1c777274c549723b2183075d47f2dcdb8","modified":1560738762480},{"_id":"public/tags/mongo/index.html","hash":"e4c03150a0aeb17436255494d768752bc1e0779d","modified":1560738762480},{"_id":"public/tags/java/index.html","hash":"03cc2a05b707ffe12fdf455f05d2e04e170a28d7","modified":1560738762480},{"_id":"public/CNAME","hash":"97ef4505ea3e18158e6cbe842a2cd60dd1ca47ed","modified":1560738762486},{"_id":"public/img/icon_wechat.png","hash":"4188058026609de06c6cac88b349a2da831a1783","modified":1560738762486},{"_id":"public/img/me.jpg","hash":"44e3d53bf1c0cfe1ecb9d43ab732c9deabac371c","modified":1560738762486},{"_id":"public/img/psu.jpg","hash":"b82344ac50abd52ee3312c0681323645e800e021","modified":1560738762486},{"_id":"public/img/article/tag.png","hash":"c8632d64d9471009098b84f70273e63037a4e7b8","modified":1560738762486},{"_id":"public/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1560738762487},{"_id":"public/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1560738762487},{"_id":"public/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1560738762487},{"_id":"public/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1560738762487},{"_id":"public/css/images/rocket.png","hash":"6dee0406955aa9b7a261161d30f2538a671e806b","modified":1560738762487},{"_id":"public/css/images/ironman.png","hash":"2f0db0ab15d466c4065d9f6102fdf829726d9e3f","modified":1560738762487},{"_id":"public/img/header_img/about.jpg","hash":"62a9a76854503c327990cc8d10de293ab6e9588f","modified":1560738762620},{"_id":"public/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1560738762622},{"_id":"public/css/archive.css","hash":"8db895ebaeff19ac145c961abcfd5d4a8d67a8ea","modified":1560738762629},{"_id":"public/css/donate.css","hash":"f65ac8363d8d215adb896158e7b45165db259a47","modified":1560738762629},{"_id":"public/css/signature.css","hash":"820fa4743cea34a61808cd8f7de528605c32d7e3","modified":1560738762629},{"_id":"public/css/highlight.css","hash":"c58b4569c086e477a00dcbf5a95a166fe5fecfb0","modified":1560738762629},{"_id":"public/css/rocket.css","hash":"9456fd92f729e09d6de8cda70f95d78e0d789c70","modified":1560738762629},{"_id":"public/css/toc.css","hash":"f756b9e1b2208d2e5b0f3d2ac5e4fea3b7da0e10","modified":1560738762629},{"_id":"public/css/widget.css","hash":"da95ad3f1938f24d20f1fa77d7a38f0c392b5ec8","modified":1560738762629},{"_id":"public/js/jquery.nav.js","hash":"ef2160a456176a4d09cc0b95d52b27dfbbadf2d8","modified":1560738762629},{"_id":"public/js/hux-blog.min.js","hash":"1563e7f70550ac6b30803d6f449719b853200e35","modified":1560738762629},{"_id":"public/js/hux-blog.js","hash":"4b4d3c557405d04c3087d36c13e2834fe05c0f73","modified":1560738762629},{"_id":"public/js/jquery.tagcloud.js","hash":"4e5fd0b07f3bd935f2e603710447e039e3677211","modified":1560738762629},{"_id":"public/js/toc.js","hash":"41e52551731854224c249d53010c1bae5aa92ffa","modified":1560738762630},{"_id":"public/js/totop.js","hash":"c05360f6fc699ac12e794b1764b4a952713a3017","modified":1560738762630},{"_id":"public/css/beantech.min.css","hash":"05a06230b1a9eca0b30cece54a397008cb77dc50","modified":1560738762630},{"_id":"public/css/beantech.css","hash":"4c361354fd8e9851923fb21a620bc079380ebcd8","modified":1560738762630},{"_id":"public/css/hux-blog.min.css","hash":"1baef04de262aeb7023d835429b49a805ac4ab40","modified":1560738762630},{"_id":"public/js/bootstrap.min.js","hash":"b3f2ef9f985e7906c9360756b73cd64bf7733647","modified":1560738762630},{"_id":"public/css/bootstrap.min.css","hash":"fec7b176a4b9a67c0eb5d184f57b84297efc23aa","modified":1560738762630},{"_id":"public/js/bootstrap.js","hash":"f8752e9ae24daec0a0baffd7819122f8c6fd9103","modified":1560738762630},{"_id":"public/js/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1560738762630},{"_id":"public/css/bootstrap.css","hash":"41c54bf695145ae0b4d9020a1da308ceb05dcaf3","modified":1560738762630},{"_id":"public/js/jquery.js","hash":"1852661bd11a09ca9b9cb63d1aa6ff390fffaf4e","modified":1560738762630},{"_id":"public/img/header_img/archives-widget.jpg","hash":"68f7d525269a94287e0ad18713ae232fb59dcf71","modified":1560738762630},{"_id":"public/img/header_img/archive.jpg","hash":"990f6f9dd0ecb5348bfcc47305553d58c0d8f326","modified":1560738762635},{"_id":"public/img/signature/BeanTechSign-white.png","hash":"34289ed41cf9ddac2d56be46fbb1515b7d5913cd","modified":1560738762635},{"_id":"public/img/signature/BeanTechSign-black.png","hash":"94b7102e819fd6ee082d3fb0166f4de7458c22ff","modified":1560738762637},{"_id":"public/img/article_header/article_bg.jpg","hash":"6af63305c923899017e727b5ca968a2703bc08cf","modified":1560738762637},{"_id":"public/img/avatar/ironman.png","hash":"7d6a06b4b544ab146c3b3e8474edc33f14ac6e4d","modified":1560738762641},{"_id":"public/img/article/huweihuang_blog.png","hash":"392cf8b33be6c752dd908e027fa3346a6ecd58ab","modified":1560738762653},{"_id":"public/img/header_img/home.jpg","hash":"8f1c440427a4aa86b623503a926c027e2e10cd66","modified":1560738762659},{"_id":"public/img/header_img/tag.png","hash":"e83cd7b04ff85bcbc9bd3ebf5e57a55166e82568","modified":1560738762671},{"_id":"public/img/article_header/article_header.png","hash":"d9fa12f1e40924a0db57761d09d52dce450b4f7b","modified":1560738762677},{"_id":"public/article/test/Demo.png","hash":"d9fa12f1e40924a0db57761d09d52dce450b4f7b","modified":1560738762677},{"_id":"public/img/header_img/home-bg-o.png","hash":"134ece4cb4c49c7ca1403a5afe7f46d0e2f9ecbb","modified":1560738762682},{"_id":"public/img/header_img/home2.png","hash":"da6a3d5ca787bdc25e69655abd879b4f821aeb30","modified":1560738762683},{"_id":"public/img/header_img/404.png","hash":"6bf9c224543ec54e250309db89cbdf46e0c4b5ba","modified":1560738762686}],"Category":[],"Data":[],"Page":[{"layout":"404","description":"你来到了没有知识的荒原","header-img":"/img/header_img/404.png","_content":"","source":"404.md","raw":"---\nlayout: 404\ndescription: \"你来到了没有知识的荒原\"\nheader-img: \"/img/header_img/404.png\"\n---\n","date":"2019-06-17T02:25:53.741Z","updated":"2019-06-17T02:25:53.741Z","path":"404.html","title":"","comments":1,"_id":"cjwzrk80100005gwva8u4iwlv","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"tags","title":"Tags","description":"Hey, this is Tags.","header-img":"/img/header_img/tag.png","_content":"","source":"tags/index.md","raw":"---\nlayout: \"tags\"\ntitle: \"Tags\"\ndescription: \"Hey, this is Tags.\"\nheader-img: \"/img/header_img/tag.png\"\n---\n","date":"2019-06-17T02:25:53.782Z","updated":"2019-06-17T02:25:53.782Z","path":"tags/index.html","comments":1,"_id":"cjwzrk80t00025gwverjxdr8o","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"archive","title":"Archives","header-img":"/img/header_img/archive.jpg","comments":0,"date":"2017-09-20T12:49:56.000Z","description":"Hey, this is archives","_content":"","source":"archive/index.md","raw":"---\nlayout: \"archive\"\ntitle: \"Archives\"\nheader-img: \"/img/header_img/archive.jpg\"\ncomments: false\ndate: 2017-09-20 20:49:56\ndescription: \"Hey, this is archives\"\n---\n","updated":"2019-06-17T02:25:53.747Z","path":"archive/index.html","_id":"cjwzrk80v00045gwvwy7r941o","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"about","title":"About","date":"2017-10-03T02:48:33.000Z","description":"走在成为极客的路上","header-img":"/img/header_img/about.jpg","aplayer":true,"fixed":false,"_content":"\n### 一句话\n\n>Just do it !    (翻译：我只是个搞 IT的！哭笑脸)\n\n### 关于我\n\n>一个莫名其妙的，喜欢敲代码，喜欢研究技术的，表面上高冷、不苟言笑的，\n>\n>偶尔又嬉皮笑脸，偶尔又特立独行的，双重性格的技术爱好者！\n\n### 兴趣方向\n\n> Spring Cloud,Spring Boot相关生态技术研究。\n> http协议的思想\n> TCP网络通讯\n### 小工具网站分享\n\n > 图床: https://image.xia-fei.com\n >\n > mysql日志转sql: https://sql.xia-fei.com\n >\n > sql建表语句转java对象: https://sql.xia-fei.com\n >\n > 网络记事本: https://note.xia-fei.com  (https://note.xia-fei.com/可随意输入)     \n >\n\n### 联系我\n\n>Email: xiafei.dev@gmail.com\n\n","source":"about/index.md","raw":"---\nlayout: \"about\"\ntitle: \"About\"\ndate: 2017-10-03 10:48:33\ndescription: \"走在成为极客的路上\"\nheader-img: \"/img/header_img/about.jpg\"\naplayer: true\nfixed: false\n---\n\n### 一句话\n\n>Just do it !    (翻译：我只是个搞 IT的！哭笑脸)\n\n### 关于我\n\n>一个莫名其妙的，喜欢敲代码，喜欢研究技术的，表面上高冷、不苟言笑的，\n>\n>偶尔又嬉皮笑脸，偶尔又特立独行的，双重性格的技术爱好者！\n\n### 兴趣方向\n\n> Spring Cloud,Spring Boot相关生态技术研究。\n> http协议的思想\n> TCP网络通讯\n### 小工具网站分享\n\n > 图床: https://image.xia-fei.com\n >\n > mysql日志转sql: https://sql.xia-fei.com\n >\n > sql建表语句转java对象: https://sql.xia-fei.com\n >\n > 网络记事本: https://note.xia-fei.com  (https://note.xia-fei.com/可随意输入)     \n >\n\n### 联系我\n\n>Email: xiafei.dev@gmail.com\n\n","updated":"2019-06-17T02:25:53.747Z","path":"about/index.html","comments":1,"_id":"cjwzrk80y00075gwvv8yx1ajd","content":"<h3 id=\"一句话\">一句话</h3>\n<blockquote>\n<p>Just do it !    (翻译：我只是个搞 IT的！哭笑脸)</p>\n</blockquote>\n<h3 id=\"关于我\">关于我</h3>\n<blockquote>\n<p>一个莫名其妙的，喜欢敲代码，喜欢研究技术的，表面上高冷、不苟言笑的，</p>\n<p>偶尔又嬉皮笑脸，偶尔又特立独行的，双重性格的技术爱好者！</p>\n</blockquote>\n<h3 id=\"兴趣方向\">兴趣方向</h3>\n<blockquote>\n<p>Spring Cloud,Spring Boot相关生态技术研究。<br>\nhttp协议的思想<br>\nTCP网络通讯</p>\n</blockquote>\n<h3 id=\"小工具网站分享\">小工具网站分享</h3>\n<blockquote>\n<p>图床: <a href=\"https://image.xia-fei.com\" target=\"_blank\" rel=\"noopener\">https://image.xia-fei.com</a></p>\n<p>mysql日志转sql: <a href=\"https://sql.xia-fei.com\" target=\"_blank\" rel=\"noopener\">https://sql.xia-fei.com</a></p>\n<p>sql建表语句转java对象: <a href=\"https://sql.xia-fei.com\" target=\"_blank\" rel=\"noopener\">https://sql.xia-fei.com</a></p>\n<p>网络记事本: <a href=\"https://note.xia-fei.com\" target=\"_blank\" rel=\"noopener\">https://note.xia-fei.com</a>  (<a href=\"https://note.xia-fei.com/%E5%8F%AF%E9%9A%8F%E6%84%8F%E8%BE%93%E5%85%A5\" target=\"_blank\" rel=\"noopener\">https://note.xia-fei.com/可随意输入</a>)</p>\n</blockquote>\n<h3 id=\"联系我\">联系我</h3>\n<blockquote>\n<p>Email: <a href=\"mailto:xiafei.dev@gmail.com\" target=\"_blank\" rel=\"noopener\">xiafei.dev@gmail.com</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h3>一句话</h3>\n<blockquote>\n<p>Just do it !    (翻译：我只是个搞 IT的！哭笑脸)</p>\n</blockquote>\n<h3>关于我</h3>\n<blockquote>\n<p>一个莫名其妙的，喜欢敲代码，喜欢研究技术的，表面上高冷、不苟言笑的，</p>\n<p>偶尔又嬉皮笑脸，偶尔又特立独行的，双重性格的技术爱好者！</p>\n</blockquote>\n<h3>兴趣方向</h3>\n<blockquote>\n<p>Spring Cloud,Spring Boot相关生态技术研究。<br>\nhttp协议的思想<br>\nTCP网络通讯</p>\n</blockquote>\n<h3>小工具网站分享</h3>\n<blockquote>\n<p>图床: <a href=\"https://image.xia-fei.com\" target=\"_blank\" rel=\"noopener\">https://image.xia-fei.com</a></p>\n<p>mysql日志转sql: <a href=\"https://sql.xia-fei.com\" target=\"_blank\" rel=\"noopener\">https://sql.xia-fei.com</a></p>\n<p>sql建表语句转java对象: <a href=\"https://sql.xia-fei.com\" target=\"_blank\" rel=\"noopener\">https://sql.xia-fei.com</a></p>\n<p>网络记事本: <a href=\"https://note.xia-fei.com\" target=\"_blank\" rel=\"noopener\">https://note.xia-fei.com</a>  (<a href=\"https://note.xia-fei.com/%E5%8F%AF%E9%9A%8F%E6%84%8F%E8%BE%93%E5%85%A5\" target=\"_blank\" rel=\"noopener\">https://note.xia-fei.com/可随意输入</a>)</p>\n</blockquote>\n<h3>联系我</h3>\n<blockquote>\n<p>Email: <a href=\"mailto:xiafei.dev@gmail.com\" target=\"_blank\" rel=\"noopener\">xiafei.dev@gmail.com</a></p>\n</blockquote>\n"}],"Post":[{"title":"JVM类加载器使用","date":"2018-12-14T11:58:15.000Z","_content":">Java类加载器算是一个老生常谈的问题\n\n什么是类加载器？\n这就是类加载器\n把class文件的byte[] 加载成Class对象，加载到JVM里面\n<!-- more -->\n```\nclass MyClassLoader extends ClassLoader {\n    @Override\n    protected Class<?> findClass(String name) throws ClassNotFoundException {\n        try {\n            byte[] classBytes = Files.readAllBytes(Paths.get(ClassLoaderDevelop.class.getResource(\"/A.class\").toURI()));\n            return defineClass(name, classBytes, 0, classBytes.length);\n        } catch (IOException | URISyntaxException e) {\n            e.printStackTrace();\n            return null;\n        }\n\n    }\n}\n```\n\n为什么要弄这么都类加载器，还有层级关系，而不一股脑都加载到JVM里呢\n1.定义一个层级就有优先级了，可以先加载啥，后加载啥，防止例如java.lang.String 根加载器的类，被第三方jar包冲掉\n2.按需加载，需要的再加载，体现了java语言的动态特点\n\n\n梳理结构\n\n#### BootstrapClassLoader  \n##### 加载路径：%JAVA_HOME%\\lib\n`System.out.println(System.getProperty(\"sun.boot.class.path\"));`  \n底层C++编写，不属于java类,根本没有对应的java类名\n根类加载器，也叫引导类加载器、启动类加载器。  \n主要加载rt.jar charsets.jar  \n就是jdk自带的类\n\n#### sun.misc.Launcher$ExtClassLoader\n##### 加载路径：%JAVA_HOME%\\lib\\ext\n`System.out.println(System.getProperty(\"java.ext.dirs\"));`  \n扩展类加载器\n\n#### sun.misc.Launcher$AppClassLoader\n##### 加载路径:%CLASS_PATH%\n`System.out.println(System.getProperty(\"java.class.path\"));`  \n应用类加载器\n\n### 双亲委派\n简单说，ClassLoader是一个抽象类  \n1.提供了一个`loadClass()`方法  \n2.有一个`parent`字段  \n作用：就是加载类的时候，先自下往上搜索一边。\n都没有，再用自身这个类加载器去加载。\n\n```java\nprotected Class<?> loadClass(String name, boolean resolve)\n        throws ClassNotFoundException\n    {\n        //进行类加载操作时首先要加锁，避免并发加载\n        synchronized (getClassLoadingLock(name)) {\n            //首先判断指定类是否已经被加载过\n            Class<?> c = findLoadedClass(name);\n            if (c == null) {\n                long t0 = System.nanoTime();\n                try {\n                    if (parent != null) {\n                        //如果当前类没有被加载且父类加载器不为null，则请求父类加载器进行加载操作\n                        c = parent.loadClass(name, false);\n                    } else {\n                       //如果当前类没有被加载且父类加载器为null，则请求根类加载器进行加载操作\n                        c = findBootstrapClassOrNull(name);\n                    }\n                } catch (ClassNotFoundException e) {\n                }\n\n                if (c == null) {\n                    long t1 = System.nanoTime();\n                    //如果父类加载器加载失败，则由当前类加载器进行加载，\n                    c = findClass(name);\n\n                    //进行一些统计操作\n                    sun.misc.PerfCounter.getParentDelegationTime().addTime(t1 - t0);\n                    sun.misc.PerfCounter.getFindClassTime().addElapsedTimeFrom(t1);\n                    sun.misc.PerfCounter.getFindClasses().increment();\n                }\n            }\n            //初始化该类\n            if (resolve) {\n                resolveClass(c);\n            }\n            return c;\n        }\n    }\n```\n1.如果要实现自己的类加载器且不破坏双亲委派模型，只需要继承ClassLoader类并重写findClass方法。  \n2.如果要实现自己的类加载器且破坏双亲委派模型，则需要继承ClassLoader类并重写loadClass，findClass方法。  \n\n#### 上下文类加载器\n```java\n//加载驱动程序\nClass.forName(\"com.mysql.jdbc.Driver\");\n//连接数据库\nConnection conn = DriverManager.getConnection(url, user, password);\n```\n这里面第1行按前面里理解 肯定是应用加载器\n第二行`DriverManager`是数据java基础类库 由跟加载器加载\n那么在DriverManager如何获取到应用加载器呢？\n```java\nThread.currentThread().getContextClassLoader();\n```\n","source":"_posts/JVM-ClassLoader.md","raw":"---\ntitle: JVM类加载器使用\ndate: 2018-12-14 19:58:15\ntags: jvm\n---\n>Java类加载器算是一个老生常谈的问题\n\n什么是类加载器？\n这就是类加载器\n把class文件的byte[] 加载成Class对象，加载到JVM里面\n<!-- more -->\n```\nclass MyClassLoader extends ClassLoader {\n    @Override\n    protected Class<?> findClass(String name) throws ClassNotFoundException {\n        try {\n            byte[] classBytes = Files.readAllBytes(Paths.get(ClassLoaderDevelop.class.getResource(\"/A.class\").toURI()));\n            return defineClass(name, classBytes, 0, classBytes.length);\n        } catch (IOException | URISyntaxException e) {\n            e.printStackTrace();\n            return null;\n        }\n\n    }\n}\n```\n\n为什么要弄这么都类加载器，还有层级关系，而不一股脑都加载到JVM里呢\n1.定义一个层级就有优先级了，可以先加载啥，后加载啥，防止例如java.lang.String 根加载器的类，被第三方jar包冲掉\n2.按需加载，需要的再加载，体现了java语言的动态特点\n\n\n梳理结构\n\n#### BootstrapClassLoader  \n##### 加载路径：%JAVA_HOME%\\lib\n`System.out.println(System.getProperty(\"sun.boot.class.path\"));`  \n底层C++编写，不属于java类,根本没有对应的java类名\n根类加载器，也叫引导类加载器、启动类加载器。  \n主要加载rt.jar charsets.jar  \n就是jdk自带的类\n\n#### sun.misc.Launcher$ExtClassLoader\n##### 加载路径：%JAVA_HOME%\\lib\\ext\n`System.out.println(System.getProperty(\"java.ext.dirs\"));`  \n扩展类加载器\n\n#### sun.misc.Launcher$AppClassLoader\n##### 加载路径:%CLASS_PATH%\n`System.out.println(System.getProperty(\"java.class.path\"));`  \n应用类加载器\n\n### 双亲委派\n简单说，ClassLoader是一个抽象类  \n1.提供了一个`loadClass()`方法  \n2.有一个`parent`字段  \n作用：就是加载类的时候，先自下往上搜索一边。\n都没有，再用自身这个类加载器去加载。\n\n```java\nprotected Class<?> loadClass(String name, boolean resolve)\n        throws ClassNotFoundException\n    {\n        //进行类加载操作时首先要加锁，避免并发加载\n        synchronized (getClassLoadingLock(name)) {\n            //首先判断指定类是否已经被加载过\n            Class<?> c = findLoadedClass(name);\n            if (c == null) {\n                long t0 = System.nanoTime();\n                try {\n                    if (parent != null) {\n                        //如果当前类没有被加载且父类加载器不为null，则请求父类加载器进行加载操作\n                        c = parent.loadClass(name, false);\n                    } else {\n                       //如果当前类没有被加载且父类加载器为null，则请求根类加载器进行加载操作\n                        c = findBootstrapClassOrNull(name);\n                    }\n                } catch (ClassNotFoundException e) {\n                }\n\n                if (c == null) {\n                    long t1 = System.nanoTime();\n                    //如果父类加载器加载失败，则由当前类加载器进行加载，\n                    c = findClass(name);\n\n                    //进行一些统计操作\n                    sun.misc.PerfCounter.getParentDelegationTime().addTime(t1 - t0);\n                    sun.misc.PerfCounter.getFindClassTime().addElapsedTimeFrom(t1);\n                    sun.misc.PerfCounter.getFindClasses().increment();\n                }\n            }\n            //初始化该类\n            if (resolve) {\n                resolveClass(c);\n            }\n            return c;\n        }\n    }\n```\n1.如果要实现自己的类加载器且不破坏双亲委派模型，只需要继承ClassLoader类并重写findClass方法。  \n2.如果要实现自己的类加载器且破坏双亲委派模型，则需要继承ClassLoader类并重写loadClass，findClass方法。  \n\n#### 上下文类加载器\n```java\n//加载驱动程序\nClass.forName(\"com.mysql.jdbc.Driver\");\n//连接数据库\nConnection conn = DriverManager.getConnection(url, user, password);\n```\n这里面第1行按前面里理解 肯定是应用加载器\n第二行`DriverManager`是数据java基础类库 由跟加载器加载\n那么在DriverManager如何获取到应用加载器呢？\n```java\nThread.currentThread().getContextClassLoader();\n```\n","slug":"JVM-ClassLoader","published":1,"updated":"2019-06-17T02:25:53.745Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwzrk80q00015gwv9aafl1ph","content":"<blockquote>\n<p>Java类加载器算是一个老生常谈的问题</p>\n</blockquote>\n<p>什么是类加载器？<br>\n这就是类加载器<br>\n把class文件的byte[] 加载成Class对象，加载到JVM里面</p>\n<a id=\"more\"></a>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class MyClassLoader extends ClassLoader &#123;</span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    protected Class&lt;?&gt; findClass(String name) throws ClassNotFoundException &#123;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            byte[] classBytes = Files.readAllBytes(Paths.get(ClassLoaderDevelop.class.getResource(&quot;/A.class&quot;).toURI()));</span><br><span class=\"line\">            return defineClass(name, classBytes, 0, classBytes.length);</span><br><span class=\"line\">        &#125; catch (IOException | URISyntaxException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            return null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>为什么要弄这么都类加载器，还有层级关系，而不一股脑都加载到JVM里呢<br>\n1.定义一个层级就有优先级了，可以先加载啥，后加载啥，防止例如java.lang.String 根加载器的类，被第三方jar包冲掉<br>\n2.按需加载，需要的再加载，体现了java语言的动态特点</p>\n<p>梳理结构</p>\n<h4 id=\"bootstrapclassloader\">BootstrapClassLoader</h4>\n<h5 id=\"加载路径java_homelib\">加载路径：%JAVA_HOME%\\lib</h5>\n<p><code>System.out.println(System.getProperty(&quot;sun.boot.class.path&quot;));</code><br>\n底层C++编写，不属于java类,根本没有对应的java类名<br>\n根类加载器，也叫引导类加载器、启动类加载器。<br>\n主要加载rt.jar charsets.jar<br>\n就是jdk自带的类</p>\n<h4 id=\"sunmisclauncherextclassloader\">sun.misc.Launcher$ExtClassLoader</h4>\n<h5 id=\"加载路径java_homelibext\">加载路径：%JAVA_HOME%\\lib\\ext</h5>\n<p><code>System.out.println(System.getProperty(&quot;java.ext.dirs&quot;));</code><br>\n扩展类加载器</p>\n<h4 id=\"sunmisclauncherappclassloader\">sun.misc.Launcher$AppClassLoader</h4>\n<h5 id=\"加载路径class_path\">加载路径:%CLASS_PATH%</h5>\n<p><code>System.out.println(System.getProperty(&quot;java.class.path&quot;));</code><br>\n应用类加载器</p>\n<h3 id=\"双亲委派\">双亲委派</h3>\n<p>简单说，ClassLoader是一个抽象类<br>\n1.提供了一个<code>loadClass()</code>方法<br>\n2.有一个<code>parent</code>字段<br>\n作用：就是加载类的时候，先自下往上搜索一边。<br>\n都没有，再用自身这个类加载器去加载。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> Class&lt;?&gt; loadClass(String name, <span class=\"keyword\">boolean</span> resolve)</span><br><span class=\"line\">        <span class=\"keyword\">throws</span> ClassNotFoundException</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//进行类加载操作时首先要加锁，避免并发加载</span></span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (getClassLoadingLock(name)) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//首先判断指定类是否已经被加载过</span></span><br><span class=\"line\">            Class&lt;?&gt; c = findLoadedClass(name);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (c == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">long</span> t0 = System.nanoTime();</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (parent != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                        <span class=\"comment\">//如果当前类没有被加载且父类加载器不为null，则请求父类加载器进行加载操作</span></span><br><span class=\"line\">                        c = parent.loadClass(name, <span class=\"keyword\">false</span>);</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                       <span class=\"comment\">//如果当前类没有被加载且父类加载器为null，则请求根类加载器进行加载操作</span></span><br><span class=\"line\">                        c = findBootstrapClassOrNull(name);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (c == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">long</span> t1 = System.nanoTime();</span><br><span class=\"line\">                    <span class=\"comment\">//如果父类加载器加载失败，则由当前类加载器进行加载，</span></span><br><span class=\"line\">                    c = findClass(name);</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">//进行一些统计操作</span></span><br><span class=\"line\">                    sun.misc.PerfCounter.getParentDelegationTime().addTime(t1 - t0);</span><br><span class=\"line\">                    sun.misc.PerfCounter.getFindClassTime().addElapsedTimeFrom(t1);</span><br><span class=\"line\">                    sun.misc.PerfCounter.getFindClasses().increment();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//初始化该类</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (resolve) &#123;</span><br><span class=\"line\">                resolveClass(c);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> c;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>1.如果要实现自己的类加载器且不破坏双亲委派模型，只需要继承ClassLoader类并重写findClass方法。<br>\n2.如果要实现自己的类加载器且破坏双亲委派模型，则需要继承ClassLoader类并重写loadClass，findClass方法。</p>\n<h4 id=\"上下文类加载器\">上下文类加载器</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//加载驱动程序</span></span><br><span class=\"line\">Class.forName(<span class=\"string\">\"com.mysql.jdbc.Driver\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//连接数据库</span></span><br><span class=\"line\">Connection conn = DriverManager.getConnection(url, user, password);</span><br></pre></td></tr></table></figure>\n<p>这里面第1行按前面里理解 肯定是应用加载器<br>\n第二行<code>DriverManager</code>是数据java基础类库 由跟加载器加载<br>\n那么在DriverManager如何获取到应用加载器呢？</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Thread.currentThread().getContextClassLoader();</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>Java类加载器算是一个老生常谈的问题</p>\n</blockquote>\n<p>什么是类加载器？<br>\n这就是类加载器<br>\n把class文件的byte[] 加载成Class对象，加载到JVM里面</p>","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class MyClassLoader extends ClassLoader &#123;</span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    protected Class&lt;?&gt; findClass(String name) throws ClassNotFoundException &#123;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            byte[] classBytes = Files.readAllBytes(Paths.get(ClassLoaderDevelop.class.getResource(&quot;/A.class&quot;).toURI()));</span><br><span class=\"line\">            return defineClass(name, classBytes, 0, classBytes.length);</span><br><span class=\"line\">        &#125; catch (IOException | URISyntaxException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            return null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>为什么要弄这么都类加载器，还有层级关系，而不一股脑都加载到JVM里呢<br>\n1.定义一个层级就有优先级了，可以先加载啥，后加载啥，防止例如java.lang.String 根加载器的类，被第三方jar包冲掉<br>\n2.按需加载，需要的再加载，体现了java语言的动态特点</p>\n<p>梳理结构</p>\n<h4>BootstrapClassLoader</h4>\n<h5>加载路径：%JAVA_HOME%\\lib</h5>\n<p><code>System.out.println(System.getProperty(&quot;sun.boot.class.path&quot;));</code><br>\n底层C++编写，不属于java类,根本没有对应的java类名<br>\n根类加载器，也叫引导类加载器、启动类加载器。<br>\n主要加载rt.jar charsets.jar<br>\n就是jdk自带的类</p>\n<h4>sun.misc.Launcher$ExtClassLoader</h4>\n<h5>加载路径：%JAVA_HOME%\\lib\\ext</h5>\n<p><code>System.out.println(System.getProperty(&quot;java.ext.dirs&quot;));</code><br>\n扩展类加载器</p>\n<h4>sun.misc.Launcher$AppClassLoader</h4>\n<h5>加载路径:%CLASS_PATH%</h5>\n<p><code>System.out.println(System.getProperty(&quot;java.class.path&quot;));</code><br>\n应用类加载器</p>\n<h3>双亲委派</h3>\n<p>简单说，ClassLoader是一个抽象类<br>\n1.提供了一个<code>loadClass()</code>方法<br>\n2.有一个<code>parent</code>字段<br>\n作用：就是加载类的时候，先自下往上搜索一边。<br>\n都没有，再用自身这个类加载器去加载。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">protected</span> Class&lt;?&gt; loadClass(String name, <span class=\"keyword\">boolean</span> resolve)</span><br><span class=\"line\">        <span class=\"keyword\">throws</span> ClassNotFoundException</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//进行类加载操作时首先要加锁，避免并发加载</span></span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (getClassLoadingLock(name)) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//首先判断指定类是否已经被加载过</span></span><br><span class=\"line\">            Class&lt;?&gt; c = findLoadedClass(name);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (c == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">long</span> t0 = System.nanoTime();</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (parent != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                        <span class=\"comment\">//如果当前类没有被加载且父类加载器不为null，则请求父类加载器进行加载操作</span></span><br><span class=\"line\">                        c = parent.loadClass(name, <span class=\"keyword\">false</span>);</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                       <span class=\"comment\">//如果当前类没有被加载且父类加载器为null，则请求根类加载器进行加载操作</span></span><br><span class=\"line\">                        c = findBootstrapClassOrNull(name);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (c == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">long</span> t1 = System.nanoTime();</span><br><span class=\"line\">                    <span class=\"comment\">//如果父类加载器加载失败，则由当前类加载器进行加载，</span></span><br><span class=\"line\">                    c = findClass(name);</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">//进行一些统计操作</span></span><br><span class=\"line\">                    sun.misc.PerfCounter.getParentDelegationTime().addTime(t1 - t0);</span><br><span class=\"line\">                    sun.misc.PerfCounter.getFindClassTime().addElapsedTimeFrom(t1);</span><br><span class=\"line\">                    sun.misc.PerfCounter.getFindClasses().increment();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//初始化该类</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (resolve) &#123;</span><br><span class=\"line\">                resolveClass(c);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> c;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>1.如果要实现自己的类加载器且不破坏双亲委派模型，只需要继承ClassLoader类并重写findClass方法。<br>\n2.如果要实现自己的类加载器且破坏双亲委派模型，则需要继承ClassLoader类并重写loadClass，findClass方法。</p>\n<h4>上下文类加载器</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//加载驱动程序</span></span><br><span class=\"line\">Class.forName(<span class=\"string\">\"com.mysql.jdbc.Driver\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//连接数据库</span></span><br><span class=\"line\">Connection conn = DriverManager.getConnection(url, user, password);</span><br></pre></td></tr></table></figure>\n<p>这里面第1行按前面里理解 肯定是应用加载器<br>\n第二行<code>DriverManager</code>是数据java基础类库 由跟加载器加载<br>\n那么在DriverManager如何获取到应用加载器呢？</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Thread.currentThread().getContextClassLoader();</span><br></pre></td></tr></table></figure>"},{"title":"平时阅读的文章分享","date":"2018-06-25T07:15:19.000Z","_content":"## 分布式架构 \n1. [基于Spring Boot、Spring Cloud、Docker的微服务系统架构实践](https://blog.csdn.net/rickiyeat/article/details/60792925)\n2. [CAP理论与MongoDB一致性、可用性的一些思考](http://www.cnblogs.com/xybaby/p/6871764.html)\n\n## HTTP\n1. [彻底弄懂 HTTP 缓存机制](https://www.tuicool.com/articles/zUZnUre)\n2. [数字证书原理（ssl,https）](https://blog.csdn.net/u013424496/article/details/51161370)\n3. [HTTPS 原理详解](https://baijiahao.baidu.com/s?id=1570143475599137&wfr=spider&for=pc)\n<!-- more -->\n\n## java\n1. [Java性能优化之JVM GC](https://zhuanlan.zhihu.com/p/25539690)\n2. [浮点数（谁偷了你的精度？）](https://www.kancloud.cn/kancloud/codepuzzle/45902)\n\n## Liunx\n1. [SSH原理与运用-远程操作与端口转发](http://www.ruanyifeng.com/blog/2011/12/ssh_port_forwarding.html)\n2. [Linux 的启动流程](http://www.ruanyifeng.com/blog/2013/08/linux_boot_process.html)\n\n\n## NoSQL 中间件\n1. [elasticsearch之基本查询](https://segmentfault.com/a/1190000004428116)\n","source":"_posts/Links.md","raw":"---\ntitle: 平时阅读的文章分享\ndate: 2018-06-25 15:15:19\ntags: Bookmark\n---\n## 分布式架构 \n1. [基于Spring Boot、Spring Cloud、Docker的微服务系统架构实践](https://blog.csdn.net/rickiyeat/article/details/60792925)\n2. [CAP理论与MongoDB一致性、可用性的一些思考](http://www.cnblogs.com/xybaby/p/6871764.html)\n\n## HTTP\n1. [彻底弄懂 HTTP 缓存机制](https://www.tuicool.com/articles/zUZnUre)\n2. [数字证书原理（ssl,https）](https://blog.csdn.net/u013424496/article/details/51161370)\n3. [HTTPS 原理详解](https://baijiahao.baidu.com/s?id=1570143475599137&wfr=spider&for=pc)\n<!-- more -->\n\n## java\n1. [Java性能优化之JVM GC](https://zhuanlan.zhihu.com/p/25539690)\n2. [浮点数（谁偷了你的精度？）](https://www.kancloud.cn/kancloud/codepuzzle/45902)\n\n## Liunx\n1. [SSH原理与运用-远程操作与端口转发](http://www.ruanyifeng.com/blog/2011/12/ssh_port_forwarding.html)\n2. [Linux 的启动流程](http://www.ruanyifeng.com/blog/2013/08/linux_boot_process.html)\n\n\n## NoSQL 中间件\n1. [elasticsearch之基本查询](https://segmentfault.com/a/1190000004428116)\n","slug":"Links","published":1,"updated":"2019-06-17T02:25:53.745Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwzrk80u00035gwvcltewbnm","content":"<h2 id=\"分布式架构\">分布式架构</h2>\n<ol>\n<li><a href=\"https://blog.csdn.net/rickiyeat/article/details/60792925\" target=\"_blank\" rel=\"noopener\">基于Spring Boot、Spring Cloud、Docker的微服务系统架构实践</a></li>\n<li><a href=\"http://www.cnblogs.com/xybaby/p/6871764.html\" target=\"_blank\" rel=\"noopener\">CAP理论与MongoDB一致性、可用性的一些思考</a></li>\n</ol>\n<h2 id=\"http\">HTTP</h2>\n<ol>\n<li><a href=\"https://www.tuicool.com/articles/zUZnUre\" target=\"_blank\" rel=\"noopener\">彻底弄懂 HTTP 缓存机制</a></li>\n<li><a href=\"https://blog.csdn.net/u013424496/article/details/51161370\" target=\"_blank\" rel=\"noopener\">数字证书原理（ssl,https）</a></li>\n<li><a href=\"https://baijiahao.baidu.com/s?id=1570143475599137&amp;wfr=spider&amp;for=pc\" target=\"_blank\" rel=\"noopener\">HTTPS 原理详解</a></li>\n</ol>\n<a id=\"more\"></a>\n<h2 id=\"java\">java</h2>\n<ol>\n<li><a href=\"https://zhuanlan.zhihu.com/p/25539690\" target=\"_blank\" rel=\"noopener\">Java性能优化之JVM GC</a></li>\n<li><a href=\"https://www.kancloud.cn/kancloud/codepuzzle/45902\" target=\"_blank\" rel=\"noopener\">浮点数（谁偷了你的精度？）</a></li>\n</ol>\n<h2 id=\"liunx\">Liunx</h2>\n<ol>\n<li><a href=\"http://www.ruanyifeng.com/blog/2011/12/ssh_port_forwarding.html\" target=\"_blank\" rel=\"noopener\">SSH原理与运用-远程操作与端口转发</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2013/08/linux_boot_process.html\" target=\"_blank\" rel=\"noopener\">Linux 的启动流程</a></li>\n</ol>\n<h2 id=\"nosql-中间件\">NoSQL 中间件</h2>\n<ol>\n<li><a href=\"https://segmentfault.com/a/1190000004428116\" target=\"_blank\" rel=\"noopener\">elasticsearch之基本查询</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"<h2>分布式架构</h2>\n<ol>\n<li><a href=\"https://blog.csdn.net/rickiyeat/article/details/60792925\" target=\"_blank\" rel=\"noopener\">基于Spring Boot、Spring Cloud、Docker的微服务系统架构实践</a></li>\n<li><a href=\"http://www.cnblogs.com/xybaby/p/6871764.html\" target=\"_blank\" rel=\"noopener\">CAP理论与MongoDB一致性、可用性的一些思考</a></li>\n</ol>\n<h2>HTTP</h2>\n<ol>\n<li><a href=\"https://www.tuicool.com/articles/zUZnUre\" target=\"_blank\" rel=\"noopener\">彻底弄懂 HTTP 缓存机制</a></li>\n<li><a href=\"https://blog.csdn.net/u013424496/article/details/51161370\" target=\"_blank\" rel=\"noopener\">数字证书原理（ssl,https）</a></li>\n<li><a href=\"https://baijiahao.baidu.com/s?id=1570143475599137&amp;wfr=spider&amp;for=pc\" target=\"_blank\" rel=\"noopener\">HTTPS 原理详解</a></li>\n</ol>","more":"<h2>java</h2>\n<ol>\n<li><a href=\"https://zhuanlan.zhihu.com/p/25539690\" target=\"_blank\" rel=\"noopener\">Java性能优化之JVM GC</a></li>\n<li><a href=\"https://www.kancloud.cn/kancloud/codepuzzle/45902\" target=\"_blank\" rel=\"noopener\">浮点数（谁偷了你的精度？）</a></li>\n</ol>\n<h2>Liunx</h2>\n<ol>\n<li><a href=\"http://www.ruanyifeng.com/blog/2011/12/ssh_port_forwarding.html\" target=\"_blank\" rel=\"noopener\">SSH原理与运用-远程操作与端口转发</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2013/08/linux_boot_process.html\" target=\"_blank\" rel=\"noopener\">Linux 的启动流程</a></li>\n</ol>\n<h2>NoSQL 中间件</h2>\n<ol>\n<li><a href=\"https://segmentfault.com/a/1190000004428116\" target=\"_blank\" rel=\"noopener\">elasticsearch之基本查询</a></li>\n</ol>"},{"title":"Linux目录读写执行权限分析","date":"2019-01-30T02:45:47.000Z","_content":"\n\n对目录设置权限 是指控制目录里面的文件  \n```bash\n[xkz@10_29_1_54 ~]$ chmod 000 test\n[xkz@10_29_1_54 ~]$ ls -l\ntotal 4\nd--------- 2 xkz xkz 4096 Jan 30 10:47 test\n[xkz@10_29_1_54 ~]$ ls -l test\nls: cannot open directory test: Permission denied\n```\n\n单执行单写单读\n```bash\n[xkz@10_29_1_54 ~]$ chmod 111 test\n[xkz@10_29_1_54 ~]$ ls -l\ntotal 4\nd--x--x--x 2 xkz xkz 4096 Jan 30 10:47 test\n[xkz@10_29_1_54 ~]$ ls -l test\nls: cannot open directory test: Permission denied\n\n[xkz@10_29_1_54 ~]$ chmod 222 test\n[xkz@10_29_1_54 ~]$ ls -l\ntotal 4\nd-w--w--w- 2 xkz xkz 4096 Jan 30 10:47 test\n[xkz@10_29_1_54 ~]$ ls -l test\nls: cannot open directory test: Permission denied\n\n[xkz@10_29_1_54 ~]$ chmod 444 test\n[xkz@10_29_1_54 ~]$ ls -l\ntotal 4\ndr--r--r-- 2 xkz xkz 4096 Jan 30 10:47 test\n[xkz@10_29_1_54 ~]$ ls -l test\nls: cannot access test/f1: Permission denied\ntotal 0\n-????????? ? ? ? ?            ? f1\n```\n\n里面文件有权限，文件夹只有执行权限 可读\n```bash\n[xkz@10_29_1_54 ~]$ chmod 777 test/f1 \n[xkz@10_29_1_54 ~]$ chmod 111 test\n[xkz@10_29_1_54 ~]$ ls -l test\nls: cannot open directory test: Permission denied\n\n[xkz@10_29_1_54 ~]$ cat test/f1\nhello\n```\n\n\n需要 读和执行权限`5` 同时才算 我们理解的有权限\n```bash\n读+写\n[xkz@10_29_1_54 ~]$ chmod 666 test\n[xkz@10_29_1_54 ~]$ ls -l\ntotal 4\ndrw-rw-rw- 2 xkz xkz 4096 Jan 30 10:47 test\n[xkz@10_29_1_54 ~]$ cat test/f1\ncat: test/f1: Permission deniedc\n读+执行\n[xkz@10_29_1_54 ~]$ chmod 555 test\n[xkz@10_29_1_54 ~]$ ls -l\ntotal 4\ndr-xr-xr-x 2 xkz xkz 4096 Jan 30 10:47 test\n[xkz@10_29_1_54 ~]$ ls -l test\ntotal 4\n-rw-rw-r-- 1 xkz xkz 6 Jan 30 10:47 f1\n[xkz@10_29_1_54 ~]$ cat test/f1 \nhello\n```\n","source":"_posts/LinuxPermission.md","raw":"---\ntitle: Linux目录读写执行权限分析\ndate: 2019-01-30 10:45:47\ntags: linux\n---\n\n\n对目录设置权限 是指控制目录里面的文件  \n```bash\n[xkz@10_29_1_54 ~]$ chmod 000 test\n[xkz@10_29_1_54 ~]$ ls -l\ntotal 4\nd--------- 2 xkz xkz 4096 Jan 30 10:47 test\n[xkz@10_29_1_54 ~]$ ls -l test\nls: cannot open directory test: Permission denied\n```\n\n单执行单写单读\n```bash\n[xkz@10_29_1_54 ~]$ chmod 111 test\n[xkz@10_29_1_54 ~]$ ls -l\ntotal 4\nd--x--x--x 2 xkz xkz 4096 Jan 30 10:47 test\n[xkz@10_29_1_54 ~]$ ls -l test\nls: cannot open directory test: Permission denied\n\n[xkz@10_29_1_54 ~]$ chmod 222 test\n[xkz@10_29_1_54 ~]$ ls -l\ntotal 4\nd-w--w--w- 2 xkz xkz 4096 Jan 30 10:47 test\n[xkz@10_29_1_54 ~]$ ls -l test\nls: cannot open directory test: Permission denied\n\n[xkz@10_29_1_54 ~]$ chmod 444 test\n[xkz@10_29_1_54 ~]$ ls -l\ntotal 4\ndr--r--r-- 2 xkz xkz 4096 Jan 30 10:47 test\n[xkz@10_29_1_54 ~]$ ls -l test\nls: cannot access test/f1: Permission denied\ntotal 0\n-????????? ? ? ? ?            ? f1\n```\n\n里面文件有权限，文件夹只有执行权限 可读\n```bash\n[xkz@10_29_1_54 ~]$ chmod 777 test/f1 \n[xkz@10_29_1_54 ~]$ chmod 111 test\n[xkz@10_29_1_54 ~]$ ls -l test\nls: cannot open directory test: Permission denied\n\n[xkz@10_29_1_54 ~]$ cat test/f1\nhello\n```\n\n\n需要 读和执行权限`5` 同时才算 我们理解的有权限\n```bash\n读+写\n[xkz@10_29_1_54 ~]$ chmod 666 test\n[xkz@10_29_1_54 ~]$ ls -l\ntotal 4\ndrw-rw-rw- 2 xkz xkz 4096 Jan 30 10:47 test\n[xkz@10_29_1_54 ~]$ cat test/f1\ncat: test/f1: Permission deniedc\n读+执行\n[xkz@10_29_1_54 ~]$ chmod 555 test\n[xkz@10_29_1_54 ~]$ ls -l\ntotal 4\ndr-xr-xr-x 2 xkz xkz 4096 Jan 30 10:47 test\n[xkz@10_29_1_54 ~]$ ls -l test\ntotal 4\n-rw-rw-r-- 1 xkz xkz 6 Jan 30 10:47 f1\n[xkz@10_29_1_54 ~]$ cat test/f1 \nhello\n```\n","slug":"LinuxPermission","published":1,"updated":"2019-06-17T02:25:53.745Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwzrk80x00065gwvuma0wdrp","content":"<p>对目录设置权限 是指控制目录里面的文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[xkz@10_29_1_54 ~]$ chmod 000 <span class=\"built_in\">test</span></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ ls -l</span><br><span class=\"line\">total 4</span><br><span class=\"line\">d--------- 2 xkz xkz 4096 Jan 30 10:47 <span class=\"built_in\">test</span></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ ls -l <span class=\"built_in\">test</span></span><br><span class=\"line\">ls: cannot open directory <span class=\"built_in\">test</span>: Permission denied</span><br></pre></td></tr></table></figure>\n<p>单执行单写单读</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[xkz@10_29_1_54 ~]$ chmod 111 <span class=\"built_in\">test</span></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ ls -l</span><br><span class=\"line\">total 4</span><br><span class=\"line\">d--x--x--x 2 xkz xkz 4096 Jan 30 10:47 <span class=\"built_in\">test</span></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ ls -l <span class=\"built_in\">test</span></span><br><span class=\"line\">ls: cannot open directory <span class=\"built_in\">test</span>: Permission denied</span><br><span class=\"line\"></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ chmod 222 <span class=\"built_in\">test</span></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ ls -l</span><br><span class=\"line\">total 4</span><br><span class=\"line\">d-w--w--w- 2 xkz xkz 4096 Jan 30 10:47 <span class=\"built_in\">test</span></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ ls -l <span class=\"built_in\">test</span></span><br><span class=\"line\">ls: cannot open directory <span class=\"built_in\">test</span>: Permission denied</span><br><span class=\"line\"></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ chmod 444 <span class=\"built_in\">test</span></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ ls -l</span><br><span class=\"line\">total 4</span><br><span class=\"line\">dr--r--r-- 2 xkz xkz 4096 Jan 30 10:47 <span class=\"built_in\">test</span></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ ls -l <span class=\"built_in\">test</span></span><br><span class=\"line\">ls: cannot access <span class=\"built_in\">test</span>/f1: Permission denied</span><br><span class=\"line\">total 0</span><br><span class=\"line\">-????????? ? ? ? ?            ? f1</span><br></pre></td></tr></table></figure>\n<p>里面文件有权限，文件夹只有执行权限 可读</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[xkz@10_29_1_54 ~]$ chmod 777 <span class=\"built_in\">test</span>/f1 </span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ chmod 111 <span class=\"built_in\">test</span></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ ls -l <span class=\"built_in\">test</span></span><br><span class=\"line\">ls: cannot open directory <span class=\"built_in\">test</span>: Permission denied</span><br><span class=\"line\"></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ cat <span class=\"built_in\">test</span>/f1</span><br><span class=\"line\">hello</span><br></pre></td></tr></table></figure>\n<p>需要 读和执行权限<code>5</code> 同时才算 我们理解的有权限</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">读+写</span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ chmod 666 <span class=\"built_in\">test</span></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ ls -l</span><br><span class=\"line\">total 4</span><br><span class=\"line\">drw-rw-rw- 2 xkz xkz 4096 Jan 30 10:47 <span class=\"built_in\">test</span></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ cat <span class=\"built_in\">test</span>/f1</span><br><span class=\"line\">cat: <span class=\"built_in\">test</span>/f1: Permission deniedc</span><br><span class=\"line\">读+执行</span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ chmod 555 <span class=\"built_in\">test</span></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ ls -l</span><br><span class=\"line\">total 4</span><br><span class=\"line\">dr-xr-xr-x 2 xkz xkz 4096 Jan 30 10:47 <span class=\"built_in\">test</span></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ ls -l <span class=\"built_in\">test</span></span><br><span class=\"line\">total 4</span><br><span class=\"line\">-rw-rw-r-- 1 xkz xkz 6 Jan 30 10:47 f1</span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ cat <span class=\"built_in\">test</span>/f1 </span><br><span class=\"line\">hello</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>对目录设置权限 是指控制目录里面的文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[xkz@10_29_1_54 ~]$ chmod 000 <span class=\"built_in\">test</span></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ ls -l</span><br><span class=\"line\">total 4</span><br><span class=\"line\">d--------- 2 xkz xkz 4096 Jan 30 10:47 <span class=\"built_in\">test</span></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ ls -l <span class=\"built_in\">test</span></span><br><span class=\"line\">ls: cannot open directory <span class=\"built_in\">test</span>: Permission denied</span><br></pre></td></tr></table></figure>\n<p>单执行单写单读</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[xkz@10_29_1_54 ~]$ chmod 111 <span class=\"built_in\">test</span></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ ls -l</span><br><span class=\"line\">total 4</span><br><span class=\"line\">d--x--x--x 2 xkz xkz 4096 Jan 30 10:47 <span class=\"built_in\">test</span></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ ls -l <span class=\"built_in\">test</span></span><br><span class=\"line\">ls: cannot open directory <span class=\"built_in\">test</span>: Permission denied</span><br><span class=\"line\"></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ chmod 222 <span class=\"built_in\">test</span></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ ls -l</span><br><span class=\"line\">total 4</span><br><span class=\"line\">d-w--w--w- 2 xkz xkz 4096 Jan 30 10:47 <span class=\"built_in\">test</span></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ ls -l <span class=\"built_in\">test</span></span><br><span class=\"line\">ls: cannot open directory <span class=\"built_in\">test</span>: Permission denied</span><br><span class=\"line\"></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ chmod 444 <span class=\"built_in\">test</span></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ ls -l</span><br><span class=\"line\">total 4</span><br><span class=\"line\">dr--r--r-- 2 xkz xkz 4096 Jan 30 10:47 <span class=\"built_in\">test</span></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ ls -l <span class=\"built_in\">test</span></span><br><span class=\"line\">ls: cannot access <span class=\"built_in\">test</span>/f1: Permission denied</span><br><span class=\"line\">total 0</span><br><span class=\"line\">-????????? ? ? ? ?            ? f1</span><br></pre></td></tr></table></figure>\n<p>里面文件有权限，文件夹只有执行权限 可读</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[xkz@10_29_1_54 ~]$ chmod 777 <span class=\"built_in\">test</span>/f1 </span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ chmod 111 <span class=\"built_in\">test</span></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ ls -l <span class=\"built_in\">test</span></span><br><span class=\"line\">ls: cannot open directory <span class=\"built_in\">test</span>: Permission denied</span><br><span class=\"line\"></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ cat <span class=\"built_in\">test</span>/f1</span><br><span class=\"line\">hello</span><br></pre></td></tr></table></figure>\n<p>需要 读和执行权限<code>5</code> 同时才算 我们理解的有权限</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">读+写</span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ chmod 666 <span class=\"built_in\">test</span></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ ls -l</span><br><span class=\"line\">total 4</span><br><span class=\"line\">drw-rw-rw- 2 xkz xkz 4096 Jan 30 10:47 <span class=\"built_in\">test</span></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ cat <span class=\"built_in\">test</span>/f1</span><br><span class=\"line\">cat: <span class=\"built_in\">test</span>/f1: Permission deniedc</span><br><span class=\"line\">读+执行</span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ chmod 555 <span class=\"built_in\">test</span></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ ls -l</span><br><span class=\"line\">total 4</span><br><span class=\"line\">dr-xr-xr-x 2 xkz xkz 4096 Jan 30 10:47 <span class=\"built_in\">test</span></span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ ls -l <span class=\"built_in\">test</span></span><br><span class=\"line\">total 4</span><br><span class=\"line\">-rw-rw-r-- 1 xkz xkz 6 Jan 30 10:47 f1</span><br><span class=\"line\">[xkz@10_29_1_54 ~]$ cat <span class=\"built_in\">test</span>/f1 </span><br><span class=\"line\">hello</span><br></pre></td></tr></table></figure>\n"},{"title":"maven仓库的研究","date":"2018-06-23T10:19:57.000Z","_content":"经常有时候下载特别慢。于是乎仔细看了下maven的仓库配置,发现\n##### maven 仓库地址有如下配置:  \n<!-- more -->\n**pom.xml**\n``` xml\n<pluginRepositories>\n    <pluginRepository>\n      <id>spring-snapshots</id>\n      <name>Spring Snapshots</name>\n      <url>https://repo.spring.io/snapshot</url>\n      <snapshots>\n        <enabled>true</enabled>\n      </snapshots>\n    </pluginRepository>\n<pluginRepositories>    \n\n<repositories>\n    <repository>\n      <id>spring-snapshots</id>\n      <name>Spring Snapshots</name>\n      <url>https://repo.spring.io/snapshot</url>\n      <snapshots>\n        <enabled>true</enabled>\n      </snapshots>\n    </repository>\n</repositories>\n```\n**settings.xml**\n``` xml\n<mirror>\n    <id>CN</id>\n    <name>OSChina Central</name>\n    <url>http://maven.oschina.net/content/groups/public/</url>\n    <mirrorOf>central</mirrorOf>\n</mirror>\n<profile>\n     <id>dev</id>\n     <repositories>\n         <repository>\n             <id>nexus-public</id>\n             <name>Public Repositories</name>\n             <url>http://192.168.2.126:8081/nexus/content/groups/public/</url>\n         </repository>\n    </repositories>\n     <pluginRepositories>\n         <pluginRepository>\n             <id>public</id>\n             <name>Public Repositories</name>\n             <url>http://192.168.2.126:8081/nexus/content/groups/public/</url>\n         </pluginRepository>\n     </pluginRepositories>\n     <activeProfiles>\n        <activeProfile>dev</activeProfile>\n    </activeProfiles>\n</profile>   \n```\n首先我们有几个问题：\n1. 这么多配仓库的地方,配置的是什么仓库?\n2. 多个仓库使用哪一个,优先级是什么?\n\n第一个问题\n 配的仓库其实就两种  \n`<repositories>` 就一般的远程仓库  \n`<pluginRepositories>` 这个是下载插件的仓库    \n私服和第三方远程仓库都是 远程仓库  只不过私服会缓存下来，方便第二次下载jar包局域网更快\n\n第二个优先级\n1. 按照`settings.xml` 的`<repositories>` 里的顺序从上往下\n2. `pom.xml` 的`<repositories>` 优先级是最低的  \n也就是说你先 使用指定的仓库 直接配置到`<repositories>` 第一个最快捷，更合理的方式是使用`<activeProfiles>`来切换吧\n\n分享一个国内非常快的aliyun maven仓库,大家可以试试效果\n```xml\n<repository>\n      <id>alibaba-nexus</id>\n      <name>alibaba maven nexus</name>\n      <url>http://maven.aliyun.com/nexus/content/groups/public/</url>\n      <releases>\n        <enabled>true</enabled>\n      </releases>\n      <snapshots>\n        <enabled>false</enabled>\n      </snapshots>\n    </repository>\n```\n\n\n\n**仓库分类**\n1. 本地仓库 \n2. 远程仓库\n    1.  中央仓库\n    2.  私服\n    3.  其它公共仓库  \n\n\n\n\n\n**本地仓库** 就是本地文件夹配置在`settings.xml`里的 `<localRepositoryD:\\maven_new_repository</localRepository`\n\n**中央仓库** 只得就是maven刚安装好后的maven中央仓库`<url>http://repo.maven.apache.org/maven2</url>`  \n\n**远程仓库** 通过`<repositories>  <repository>` 配置的就是远程仓库\n\n**私服** 这是一种特殊的远程仓库,简单来讲就是为了缓存 其它远程仓库的请求\n1. 减少重复请求造成的外网带宽消耗\n2. 有些构件无法从外部仓库获得的时候，我们可以把这些构件部署到内部仓库(私服)中，供内部maven项目使用\n3. 降低中央仓库的负荷：maven中央仓库被请求的数量是巨大的，配置私服也可以大大降低中央仓库的压力\n**插件仓库** `<pluginRepository>` 这个是配置插件的下载仓库\n学习下**repositories**配置\n``` xml\n<repositories>  \n        <repository>  \n            <id>jboss</id>  \n            <name>JBoss Repository</name>  \n            <url>http://repository.jboss.com/maven2/</url>  \n            <releases>  \n                <updatePolicy>daily</updatePolicy><!-- never,always,interval n -->  \n                <enabled>true</enabled>  \n                <checksumPolicy>warn</checksumPolicy><!-- fail,ignore -->  \n            </releases>  \n            <snapshots>  \n                <enabled>false</enabled>  \n            </snapshots>  \n            <layout>default</layout>  \n        </repository>  \n    </repositories>  \n```\n`<updatePolicy>`元素：表示更新的频率，值有：never, always,interval,daily, daily 为默认值\n`<checksumPolicy>`元素：表示maven检查和检验文件的策略，warn为默认值\n远程仓库的认证配置在  \n``` xml\n <server>  \n       <id>same with repository id in pom</id>  \n       <username>username</username>  \n       <password>pwd</password>  \n </server>  \n```\n**注：这里的id必须与POM中需要认证的repository元素的Id一致。**\n\n**如何将生成的项目部署到远程仓库**\n完成这项工作，也需要在POM中进行配置，这里有新引入了一个元素：`<distributionManagement>`\ndistributionManagement包含了2个子元素：`repository`和`snapshotRepository`, 前者表示发布版本构件的仓库，后者表示快照版本的仓库\n这两个元素都需要配置 id(该远程仓库的唯一标识)，name，url(表示该仓库的地址)\n向远程仓库中部署构件，需要进行认证。配置同上\n\n\n\n##### maven到底是如何从仓库中解析构件的呢？\n1. 依赖范围是system的时候->**本地文件系统**\n2. 尝试直接从**本地仓库**寻找构件，如果发现相应构件，则解析成功\n3. 在**本地仓库**不存在相应的构件情况下，如果依赖的版本是显示的发布版本构件，则**遍历所有的远程仓库**","source":"_posts/Maven-Repository.md","raw":"---\ntitle: maven仓库的研究\ndate: 2018-06-23 18:19:57\ntags: maven\n---\n经常有时候下载特别慢。于是乎仔细看了下maven的仓库配置,发现\n##### maven 仓库地址有如下配置:  \n<!-- more -->\n**pom.xml**\n``` xml\n<pluginRepositories>\n    <pluginRepository>\n      <id>spring-snapshots</id>\n      <name>Spring Snapshots</name>\n      <url>https://repo.spring.io/snapshot</url>\n      <snapshots>\n        <enabled>true</enabled>\n      </snapshots>\n    </pluginRepository>\n<pluginRepositories>    \n\n<repositories>\n    <repository>\n      <id>spring-snapshots</id>\n      <name>Spring Snapshots</name>\n      <url>https://repo.spring.io/snapshot</url>\n      <snapshots>\n        <enabled>true</enabled>\n      </snapshots>\n    </repository>\n</repositories>\n```\n**settings.xml**\n``` xml\n<mirror>\n    <id>CN</id>\n    <name>OSChina Central</name>\n    <url>http://maven.oschina.net/content/groups/public/</url>\n    <mirrorOf>central</mirrorOf>\n</mirror>\n<profile>\n     <id>dev</id>\n     <repositories>\n         <repository>\n             <id>nexus-public</id>\n             <name>Public Repositories</name>\n             <url>http://192.168.2.126:8081/nexus/content/groups/public/</url>\n         </repository>\n    </repositories>\n     <pluginRepositories>\n         <pluginRepository>\n             <id>public</id>\n             <name>Public Repositories</name>\n             <url>http://192.168.2.126:8081/nexus/content/groups/public/</url>\n         </pluginRepository>\n     </pluginRepositories>\n     <activeProfiles>\n        <activeProfile>dev</activeProfile>\n    </activeProfiles>\n</profile>   \n```\n首先我们有几个问题：\n1. 这么多配仓库的地方,配置的是什么仓库?\n2. 多个仓库使用哪一个,优先级是什么?\n\n第一个问题\n 配的仓库其实就两种  \n`<repositories>` 就一般的远程仓库  \n`<pluginRepositories>` 这个是下载插件的仓库    \n私服和第三方远程仓库都是 远程仓库  只不过私服会缓存下来，方便第二次下载jar包局域网更快\n\n第二个优先级\n1. 按照`settings.xml` 的`<repositories>` 里的顺序从上往下\n2. `pom.xml` 的`<repositories>` 优先级是最低的  \n也就是说你先 使用指定的仓库 直接配置到`<repositories>` 第一个最快捷，更合理的方式是使用`<activeProfiles>`来切换吧\n\n分享一个国内非常快的aliyun maven仓库,大家可以试试效果\n```xml\n<repository>\n      <id>alibaba-nexus</id>\n      <name>alibaba maven nexus</name>\n      <url>http://maven.aliyun.com/nexus/content/groups/public/</url>\n      <releases>\n        <enabled>true</enabled>\n      </releases>\n      <snapshots>\n        <enabled>false</enabled>\n      </snapshots>\n    </repository>\n```\n\n\n\n**仓库分类**\n1. 本地仓库 \n2. 远程仓库\n    1.  中央仓库\n    2.  私服\n    3.  其它公共仓库  \n\n\n\n\n\n**本地仓库** 就是本地文件夹配置在`settings.xml`里的 `<localRepositoryD:\\maven_new_repository</localRepository`\n\n**中央仓库** 只得就是maven刚安装好后的maven中央仓库`<url>http://repo.maven.apache.org/maven2</url>`  \n\n**远程仓库** 通过`<repositories>  <repository>` 配置的就是远程仓库\n\n**私服** 这是一种特殊的远程仓库,简单来讲就是为了缓存 其它远程仓库的请求\n1. 减少重复请求造成的外网带宽消耗\n2. 有些构件无法从外部仓库获得的时候，我们可以把这些构件部署到内部仓库(私服)中，供内部maven项目使用\n3. 降低中央仓库的负荷：maven中央仓库被请求的数量是巨大的，配置私服也可以大大降低中央仓库的压力\n**插件仓库** `<pluginRepository>` 这个是配置插件的下载仓库\n学习下**repositories**配置\n``` xml\n<repositories>  \n        <repository>  \n            <id>jboss</id>  \n            <name>JBoss Repository</name>  \n            <url>http://repository.jboss.com/maven2/</url>  \n            <releases>  \n                <updatePolicy>daily</updatePolicy><!-- never,always,interval n -->  \n                <enabled>true</enabled>  \n                <checksumPolicy>warn</checksumPolicy><!-- fail,ignore -->  \n            </releases>  \n            <snapshots>  \n                <enabled>false</enabled>  \n            </snapshots>  \n            <layout>default</layout>  \n        </repository>  \n    </repositories>  \n```\n`<updatePolicy>`元素：表示更新的频率，值有：never, always,interval,daily, daily 为默认值\n`<checksumPolicy>`元素：表示maven检查和检验文件的策略，warn为默认值\n远程仓库的认证配置在  \n``` xml\n <server>  \n       <id>same with repository id in pom</id>  \n       <username>username</username>  \n       <password>pwd</password>  \n </server>  \n```\n**注：这里的id必须与POM中需要认证的repository元素的Id一致。**\n\n**如何将生成的项目部署到远程仓库**\n完成这项工作，也需要在POM中进行配置，这里有新引入了一个元素：`<distributionManagement>`\ndistributionManagement包含了2个子元素：`repository`和`snapshotRepository`, 前者表示发布版本构件的仓库，后者表示快照版本的仓库\n这两个元素都需要配置 id(该远程仓库的唯一标识)，name，url(表示该仓库的地址)\n向远程仓库中部署构件，需要进行认证。配置同上\n\n\n\n##### maven到底是如何从仓库中解析构件的呢？\n1. 依赖范围是system的时候->**本地文件系统**\n2. 尝试直接从**本地仓库**寻找构件，如果发现相应构件，则解析成功\n3. 在**本地仓库**不存在相应的构件情况下，如果依赖的版本是显示的发布版本构件，则**遍历所有的远程仓库**","slug":"Maven-Repository","published":1,"updated":"2019-06-17T02:25:53.745Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwzrk80z00085gwv7dlx0zx8","content":"<p>经常有时候下载特别慢。于是乎仔细看了下maven的仓库配置,发现</p>\n<h5 id=\"maven-仓库地址有如下配置\">maven 仓库地址有如下配置:</h5>\n<a id=\"more\"></a>\n<p><strong>pom.xml</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">pluginRepositories</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">pluginRepository</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>spring-snapshots<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Spring Snapshots<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>https://repo.spring.io/snapshot<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">enabled</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">enabled</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">pluginRepository</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">pluginRepositories</span>&gt;</span>    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">repositories</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>spring-snapshots<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Spring Snapshots<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>https://repo.spring.io/snapshot<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">enabled</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">enabled</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">repositories</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>settings.xml</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>CN<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>OSChina Central<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://maven.oschina.net/content/groups/public/<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mirrorOf</span>&gt;</span>central<span class=\"tag\">&lt;/<span class=\"name\">mirrorOf</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">profile</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>dev<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">repositories</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>nexus-public<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Public Repositories<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://192.168.2.126:8081/nexus/content/groups/public/<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;/<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">repositories</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">pluginRepositories</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">pluginRepository</span>&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>public<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Public Repositories<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://192.168.2.126:8081/nexus/content/groups/public/<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;/<span class=\"name\">pluginRepository</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">pluginRepositories</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">activeProfiles</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">activeProfile</span>&gt;</span>dev<span class=\"tag\">&lt;/<span class=\"name\">activeProfile</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">activeProfiles</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">profile</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>首先我们有几个问题：</p>\n<ol>\n<li>这么多配仓库的地方,配置的是什么仓库?</li>\n<li>多个仓库使用哪一个,优先级是什么?</li>\n</ol>\n<p>第一个问题<br>\n配的仓库其实就两种<br>\n<code>&lt;repositories&gt;</code> 就一般的远程仓库<br>\n<code>&lt;pluginRepositories&gt;</code> 这个是下载插件的仓库<br>\n私服和第三方远程仓库都是 远程仓库  只不过私服会缓存下来，方便第二次下载jar包局域网更快</p>\n<p>第二个优先级</p>\n<ol>\n<li>按照<code>settings.xml</code> 的<code>&lt;repositories&gt;</code> 里的顺序从上往下</li>\n<li><code>pom.xml</code> 的<code>&lt;repositories&gt;</code> 优先级是最低的<br>\n也就是说你先 使用指定的仓库 直接配置到<code>&lt;repositories&gt;</code> 第一个最快捷，更合理的方式是使用<code>&lt;activeProfiles&gt;</code>来切换吧</li>\n</ol>\n<p>分享一个国内非常快的aliyun maven仓库,大家可以试试效果</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>alibaba-nexus<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>alibaba maven nexus<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">releases</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">enabled</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">enabled</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">releases</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">enabled</span>&gt;</span>false<span class=\"tag\">&lt;/<span class=\"name\">enabled</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">repository</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>仓库分类</strong></p>\n<ol>\n<li>本地仓库</li>\n<li>远程仓库\n<ol>\n<li>中央仓库</li>\n<li>私服</li>\n<li>其它公共仓库</li>\n</ol>\n</li>\n</ol>\n<p><strong>本地仓库</strong> 就是本地文件夹配置在<code>settings.xml</code>里的 <code>&lt;localRepositoryD:\\maven_new_repository&lt;/localRepository</code></p>\n<p><strong>中央仓库</strong> 只得就是maven刚安装好后的maven中央仓库<code>&lt;url&gt;http://repo.maven.apache.org/maven2&lt;/url&gt;</code></p>\n<p><strong>远程仓库</strong> 通过<code>&lt;repositories&gt; &lt;repository&gt;</code> 配置的就是远程仓库</p>\n<p><strong>私服</strong> 这是一种特殊的远程仓库,简单来讲就是为了缓存 其它远程仓库的请求</p>\n<ol>\n<li>减少重复请求造成的外网带宽消耗</li>\n<li>有些构件无法从外部仓库获得的时候，我们可以把这些构件部署到内部仓库(私服)中，供内部maven项目使用</li>\n<li>降低中央仓库的负荷：maven中央仓库被请求的数量是巨大的，配置私服也可以大大降低中央仓库的压力<br>\n<strong>插件仓库</strong> <code>&lt;pluginRepository&gt;</code> 这个是配置插件的下载仓库<br>\n学习下<strong>repositories</strong>配置</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">repositories</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">repository</span>&gt;</span>  </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>jboss<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span>  </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>JBoss Repository<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://repository.jboss.com/maven2/<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span>  </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">releases</span>&gt;</span>  </span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">updatePolicy</span>&gt;</span>daily<span class=\"tag\">&lt;/<span class=\"name\">updatePolicy</span>&gt;</span><span class=\"comment\">&lt;!-- never,always,interval n --&gt;</span>  </span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">enabled</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">enabled</span>&gt;</span>  </span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">checksumPolicy</span>&gt;</span>warn<span class=\"tag\">&lt;/<span class=\"name\">checksumPolicy</span>&gt;</span><span class=\"comment\">&lt;!-- fail,ignore --&gt;</span>  </span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">releases</span>&gt;</span>  </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">snapshots</span>&gt;</span>  </span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">enabled</span>&gt;</span>false<span class=\"tag\">&lt;/<span class=\"name\">enabled</span>&gt;</span>  </span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">snapshots</span>&gt;</span>  </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">layout</span>&gt;</span>default<span class=\"tag\">&lt;/<span class=\"name\">layout</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">repository</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">repositories</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>&lt;updatePolicy&gt;</code>元素：表示更新的频率，值有：never, always,interval,daily, daily 为默认值<br>\n<code>&lt;checksumPolicy&gt;</code>元素：表示maven检查和检验文件的策略，warn为默认值<br>\n远程仓库的认证配置在</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">server</span>&gt;</span>  </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>same with repository id in pom<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span>  </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">username</span>&gt;</span>username<span class=\"tag\">&lt;/<span class=\"name\">username</span>&gt;</span>  </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">password</span>&gt;</span>pwd<span class=\"tag\">&lt;/<span class=\"name\">password</span>&gt;</span>  </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">server</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>注：这里的id必须与POM中需要认证的repository元素的Id一致。</strong></p>\n<p><strong>如何将生成的项目部署到远程仓库</strong><br>\n完成这项工作，也需要在POM中进行配置，这里有新引入了一个元素：<code>&lt;distributionManagement&gt;</code><br>\ndistributionManagement包含了2个子元素：<code>repository</code>和<code>snapshotRepository</code>, 前者表示发布版本构件的仓库，后者表示快照版本的仓库<br>\n这两个元素都需要配置 id(该远程仓库的唯一标识)，name，url(表示该仓库的地址)<br>\n向远程仓库中部署构件，需要进行认证。配置同上</p>\n<h5 id=\"maven到底是如何从仓库中解析构件的呢\">maven到底是如何从仓库中解析构件的呢？</h5>\n<ol>\n<li>依赖范围是system的时候-&gt;<strong>本地文件系统</strong></li>\n<li>尝试直接从<strong>本地仓库</strong>寻找构件，如果发现相应构件，则解析成功</li>\n<li>在<strong>本地仓库</strong>不存在相应的构件情况下，如果依赖的版本是显示的发布版本构件，则<strong>遍历所有的远程仓库</strong></li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>经常有时候下载特别慢。于是乎仔细看了下maven的仓库配置,发现</p>\n<h5>maven 仓库地址有如下配置:</h5>","more":"<p><strong>pom.xml</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">pluginRepositories</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">pluginRepository</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>spring-snapshots<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Spring Snapshots<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>https://repo.spring.io/snapshot<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">enabled</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">enabled</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">pluginRepository</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">pluginRepositories</span>&gt;</span>    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">repositories</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>spring-snapshots<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Spring Snapshots<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>https://repo.spring.io/snapshot<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">enabled</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">enabled</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">repositories</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>settings.xml</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>CN<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>OSChina Central<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://maven.oschina.net/content/groups/public/<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mirrorOf</span>&gt;</span>central<span class=\"tag\">&lt;/<span class=\"name\">mirrorOf</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">profile</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>dev<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">repositories</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>nexus-public<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Public Repositories<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://192.168.2.126:8081/nexus/content/groups/public/<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;/<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">repositories</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">pluginRepositories</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">pluginRepository</span>&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>public<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Public Repositories<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://192.168.2.126:8081/nexus/content/groups/public/<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">         <span class=\"tag\">&lt;/<span class=\"name\">pluginRepository</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">pluginRepositories</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">activeProfiles</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">activeProfile</span>&gt;</span>dev<span class=\"tag\">&lt;/<span class=\"name\">activeProfile</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">activeProfiles</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">profile</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>首先我们有几个问题：</p>\n<ol>\n<li>这么多配仓库的地方,配置的是什么仓库?</li>\n<li>多个仓库使用哪一个,优先级是什么?</li>\n</ol>\n<p>第一个问题<br>\n配的仓库其实就两种<br>\n<code>&lt;repositories&gt;</code> 就一般的远程仓库<br>\n<code>&lt;pluginRepositories&gt;</code> 这个是下载插件的仓库<br>\n私服和第三方远程仓库都是 远程仓库  只不过私服会缓存下来，方便第二次下载jar包局域网更快</p>\n<p>第二个优先级</p>\n<ol>\n<li>按照<code>settings.xml</code> 的<code>&lt;repositories&gt;</code> 里的顺序从上往下</li>\n<li><code>pom.xml</code> 的<code>&lt;repositories&gt;</code> 优先级是最低的<br>\n也就是说你先 使用指定的仓库 直接配置到<code>&lt;repositories&gt;</code> 第一个最快捷，更合理的方式是使用<code>&lt;activeProfiles&gt;</code>来切换吧</li>\n</ol>\n<p>分享一个国内非常快的aliyun maven仓库,大家可以试试效果</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">repository</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>alibaba-nexus<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>alibaba maven nexus<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">releases</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">enabled</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">enabled</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">releases</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">enabled</span>&gt;</span>false<span class=\"tag\">&lt;/<span class=\"name\">enabled</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">snapshots</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">repository</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>仓库分类</strong></p>\n<ol>\n<li>本地仓库</li>\n<li>远程仓库\n<ol>\n<li>中央仓库</li>\n<li>私服</li>\n<li>其它公共仓库</li>\n</ol>\n</li>\n</ol>\n<p><strong>本地仓库</strong> 就是本地文件夹配置在<code>settings.xml</code>里的 <code>&lt;localRepositoryD:\\maven_new_repository&lt;/localRepository</code></p>\n<p><strong>中央仓库</strong> 只得就是maven刚安装好后的maven中央仓库<code>&lt;url&gt;http://repo.maven.apache.org/maven2&lt;/url&gt;</code></p>\n<p><strong>远程仓库</strong> 通过<code>&lt;repositories&gt; &lt;repository&gt;</code> 配置的就是远程仓库</p>\n<p><strong>私服</strong> 这是一种特殊的远程仓库,简单来讲就是为了缓存 其它远程仓库的请求</p>\n<ol>\n<li>减少重复请求造成的外网带宽消耗</li>\n<li>有些构件无法从外部仓库获得的时候，我们可以把这些构件部署到内部仓库(私服)中，供内部maven项目使用</li>\n<li>降低中央仓库的负荷：maven中央仓库被请求的数量是巨大的，配置私服也可以大大降低中央仓库的压力<br>\n<strong>插件仓库</strong> <code>&lt;pluginRepository&gt;</code> 这个是配置插件的下载仓库<br>\n学习下<strong>repositories</strong>配置</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">repositories</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">repository</span>&gt;</span>  </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>jboss<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span>  </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>JBoss Repository<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://repository.jboss.com/maven2/<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span>  </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">releases</span>&gt;</span>  </span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">updatePolicy</span>&gt;</span>daily<span class=\"tag\">&lt;/<span class=\"name\">updatePolicy</span>&gt;</span><span class=\"comment\">&lt;!-- never,always,interval n --&gt;</span>  </span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">enabled</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">enabled</span>&gt;</span>  </span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">checksumPolicy</span>&gt;</span>warn<span class=\"tag\">&lt;/<span class=\"name\">checksumPolicy</span>&gt;</span><span class=\"comment\">&lt;!-- fail,ignore --&gt;</span>  </span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">releases</span>&gt;</span>  </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">snapshots</span>&gt;</span>  </span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">enabled</span>&gt;</span>false<span class=\"tag\">&lt;/<span class=\"name\">enabled</span>&gt;</span>  </span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">snapshots</span>&gt;</span>  </span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">layout</span>&gt;</span>default<span class=\"tag\">&lt;/<span class=\"name\">layout</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">repository</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">repositories</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>&lt;updatePolicy&gt;</code>元素：表示更新的频率，值有：never, always,interval,daily, daily 为默认值<br>\n<code>&lt;checksumPolicy&gt;</code>元素：表示maven检查和检验文件的策略，warn为默认值<br>\n远程仓库的认证配置在</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">server</span>&gt;</span>  </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>same with repository id in pom<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span>  </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">username</span>&gt;</span>username<span class=\"tag\">&lt;/<span class=\"name\">username</span>&gt;</span>  </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">password</span>&gt;</span>pwd<span class=\"tag\">&lt;/<span class=\"name\">password</span>&gt;</span>  </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">server</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>注：这里的id必须与POM中需要认证的repository元素的Id一致。</strong></p>\n<p><strong>如何将生成的项目部署到远程仓库</strong><br>\n完成这项工作，也需要在POM中进行配置，这里有新引入了一个元素：<code>&lt;distributionManagement&gt;</code><br>\ndistributionManagement包含了2个子元素：<code>repository</code>和<code>snapshotRepository</code>, 前者表示发布版本构件的仓库，后者表示快照版本的仓库<br>\n这两个元素都需要配置 id(该远程仓库的唯一标识)，name，url(表示该仓库的地址)<br>\n向远程仓库中部署构件，需要进行认证。配置同上</p>\n<h5>maven到底是如何从仓库中解析构件的呢？</h5>\n<ol>\n<li>依赖范围是system的时候-&gt;<strong>本地文件系统</strong></li>\n<li>尝试直接从<strong>本地仓库</strong>寻找构件，如果发现相应构件，则解析成功</li>\n<li>在<strong>本地仓库</strong>不存在相应的构件情况下，如果依赖的版本是显示的发布版本构件，则<strong>遍历所有的远程仓库</strong></li>\n</ol>"},{"title":"记一次线上事务并发问题","date":"2018-07-07T13:00:29.000Z","_content":"\n今天一同事线上遇到一个问题，程序不明原因的进入了死循环。最后通过一步步分析代码的线程运行情况，定位出是事务产生的并发问题\n<!-- more -->\n\n##### 我们看下代码入口。\n```java\n    @Transactional\n\tpublic Result<Boolean> execute(Map<String, String> currentRow, Map<String, String> contextInfo) {\n        ...\n         synchronized (this) {\n              userVipCardDO.setCardNo(userVipCardService.getVipCardNo(contextInfo.get(\"storeId\")));\n         }             \n\t}\n```\n>此方法可能多线程运行\n\n\n#### 第2个方法代码    \n```java\nprivate int getVipCardNo(String storeId) {\n        //获取数据库当前值\n        SerialNumberDO serialNumberDO = serialNumberDao.getByKey(Long.parseLong(storeId), SerialBusiType.HY.getCode());\n        if (serialNumberDO == null) {\n            ...\n            return 1;\n        }\n        //查出数据库当前值\n        long counter = serialNumberDO.getCounter();\n        SerialNumberDO updateDO = new SerialNumberDO();\n        ...\n        updateDO.setCounter(counter);\n        int i = serialNumberDao.increase(updateDO);\n        if(i == 0){\n            return getVipCardNo(storeId);\n        }else {\n            return counter;\n        }\n    }\n```\n>相当于一个乐观锁 compare And Set  \n>此处呢,由于外面synchronized单线程运行  \n>这是一个递归调用  \n\n#### 第3个dao层sql\n```xml\n <update id=\"increase\" parameterType=\"SerialNumberDO\">\n        update sh_serial_number\n        set counter = counter+1\n        where store_id = #{storeId}\n        and busi_type = #{busiType}\n        and counter = #{counter}\n</update>\n```\n>乐观锁sql  \n\n问题出在哪呢。  \n\n1. 第一断代码，当时所有线程进来读到的值都是**8**  \n2. `@Transactional` 默认事务隔离级别`Repeatable read` 可重复读  \n    1. 这就意味着第一步多个线程进来后。读到的值，其它事务进行修改提交之后。它还是读的当 时进来的这个值**8**。   \n1. 第一个线程读到**8** 当时数据库确实是**8** 所以修改成  **9**  修改成功  \n1. 第一个之后的线程呢 。  \n    1. 当时进来时开启事务数据库里是**8**\n    1. synchronized等待\n    1. 等第一个修改成功之后进去select\n    1. 由于事务隔离级别`Repeatable read`的原因，虽然数据库里改成了**9**,它这里仍然读到是**8**\n    1. 然后`update .... and counter=#{counter}` 比较的时候呢，却是**比较数据库真实的值**，所有 `8=9`一直不成功\n    1. 一直重试递归调用 进入了死循环\n    \n##### 问题找到了，那么最简单的解决方案就是`@Transactional(isolation = Isolation.READ_COMMITTED)` 将隔离级别降低一级。读取已提交的   \n最后分下这个代码\n\n1. 如果不加`synchronized`其实也会出问题。只是出的几率小一点。    \n1. 为了其它service方法使用默认隔离级别，调用`getVipCardNo` 不出类似问题。我觉得应该利用事务传播行为，\n将`getVipCardNo`开启一个新的事务，再将隔离级别设置成读取已提交的","source":"_posts/TransactionalConcurrentIssue.md","raw":"---\ntitle: 记一次线上事务并发问题\ndate: 2018-07-07 21:00:29\ntags: bug\n---\n\n今天一同事线上遇到一个问题，程序不明原因的进入了死循环。最后通过一步步分析代码的线程运行情况，定位出是事务产生的并发问题\n<!-- more -->\n\n##### 我们看下代码入口。\n```java\n    @Transactional\n\tpublic Result<Boolean> execute(Map<String, String> currentRow, Map<String, String> contextInfo) {\n        ...\n         synchronized (this) {\n              userVipCardDO.setCardNo(userVipCardService.getVipCardNo(contextInfo.get(\"storeId\")));\n         }             \n\t}\n```\n>此方法可能多线程运行\n\n\n#### 第2个方法代码    \n```java\nprivate int getVipCardNo(String storeId) {\n        //获取数据库当前值\n        SerialNumberDO serialNumberDO = serialNumberDao.getByKey(Long.parseLong(storeId), SerialBusiType.HY.getCode());\n        if (serialNumberDO == null) {\n            ...\n            return 1;\n        }\n        //查出数据库当前值\n        long counter = serialNumberDO.getCounter();\n        SerialNumberDO updateDO = new SerialNumberDO();\n        ...\n        updateDO.setCounter(counter);\n        int i = serialNumberDao.increase(updateDO);\n        if(i == 0){\n            return getVipCardNo(storeId);\n        }else {\n            return counter;\n        }\n    }\n```\n>相当于一个乐观锁 compare And Set  \n>此处呢,由于外面synchronized单线程运行  \n>这是一个递归调用  \n\n#### 第3个dao层sql\n```xml\n <update id=\"increase\" parameterType=\"SerialNumberDO\">\n        update sh_serial_number\n        set counter = counter+1\n        where store_id = #{storeId}\n        and busi_type = #{busiType}\n        and counter = #{counter}\n</update>\n```\n>乐观锁sql  \n\n问题出在哪呢。  \n\n1. 第一断代码，当时所有线程进来读到的值都是**8**  \n2. `@Transactional` 默认事务隔离级别`Repeatable read` 可重复读  \n    1. 这就意味着第一步多个线程进来后。读到的值，其它事务进行修改提交之后。它还是读的当 时进来的这个值**8**。   \n1. 第一个线程读到**8** 当时数据库确实是**8** 所以修改成  **9**  修改成功  \n1. 第一个之后的线程呢 。  \n    1. 当时进来时开启事务数据库里是**8**\n    1. synchronized等待\n    1. 等第一个修改成功之后进去select\n    1. 由于事务隔离级别`Repeatable read`的原因，虽然数据库里改成了**9**,它这里仍然读到是**8**\n    1. 然后`update .... and counter=#{counter}` 比较的时候呢，却是**比较数据库真实的值**，所有 `8=9`一直不成功\n    1. 一直重试递归调用 进入了死循环\n    \n##### 问题找到了，那么最简单的解决方案就是`@Transactional(isolation = Isolation.READ_COMMITTED)` 将隔离级别降低一级。读取已提交的   \n最后分下这个代码\n\n1. 如果不加`synchronized`其实也会出问题。只是出的几率小一点。    \n1. 为了其它service方法使用默认隔离级别，调用`getVipCardNo` 不出类似问题。我觉得应该利用事务传播行为，\n将`getVipCardNo`开启一个新的事务，再将隔离级别设置成读取已提交的","slug":"TransactionalConcurrentIssue","published":1,"updated":"2019-06-17T02:25:53.746Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwzrk81200095gwvtyr5zcx1","content":"<p>今天一同事线上遇到一个问题，程序不明原因的进入了死循环。最后通过一步步分析代码的线程运行情况，定位出是事务产生的并发问题</p>\n<a id=\"more\"></a>\n<h5 id=\"我们看下代码入口\">我们看下代码入口。</h5>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"meta\">@Transactional</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Result&lt;Boolean&gt; <span class=\"title\">execute</span><span class=\"params\">(Map&lt;String, String&gt; currentRow, Map&lt;String, String&gt; contextInfo)</span> </span>&#123;</span><br><span class=\"line\">       ...</span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (<span class=\"keyword\">this</span>) &#123;</span><br><span class=\"line\">             userVipCardDO.setCardNo(userVipCardService.getVipCardNo(contextInfo.get(<span class=\"string\">\"storeId\"</span>)));</span><br><span class=\"line\">        &#125;             </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>此方法可能多线程运行</p>\n</blockquote>\n<h4 id=\"第2个方法代码\">第2个方法代码</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">getVipCardNo</span><span class=\"params\">(String storeId)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//获取数据库当前值</span></span><br><span class=\"line\">        SerialNumberDO serialNumberDO = serialNumberDao.getByKey(Long.parseLong(storeId), SerialBusiType.HY.getCode());</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (serialNumberDO == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            ...</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//查出数据库当前值</span></span><br><span class=\"line\">        <span class=\"keyword\">long</span> counter = serialNumberDO.getCounter();</span><br><span class=\"line\">        SerialNumberDO updateDO = <span class=\"keyword\">new</span> SerialNumberDO();</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        updateDO.setCounter(counter);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> i = serialNumberDao.increase(updateDO);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> getVipCardNo(storeId);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> counter;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>相当于一个乐观锁 compare And Set<br>\n此处呢,由于外面synchronized单线程运行<br>\n这是一个递归调用</p>\n</blockquote>\n<h4 id=\"第3个dao层sql\">第3个dao层sql</h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">update</span> <span class=\"attr\">id</span>=<span class=\"string\">\"increase\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"SerialNumberDO\"</span>&gt;</span></span><br><span class=\"line\">        update sh_serial_number</span><br><span class=\"line\">        set counter = counter+1</span><br><span class=\"line\">        where store_id = #&#123;storeId&#125;</span><br><span class=\"line\">        and busi_type = #&#123;busiType&#125;</span><br><span class=\"line\">        and counter = #&#123;counter&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">update</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>乐观锁sql</p>\n</blockquote>\n<p>问题出在哪呢。</p>\n<ol>\n<li>第一断代码，当时所有线程进来读到的值都是<strong>8</strong></li>\n<li><code>@Transactional</code> 默认事务隔离级别<code>Repeatable read</code> 可重复读\n<ol>\n<li>这就意味着第一步多个线程进来后。读到的值，其它事务进行修改提交之后。它还是读的当 时进来的这个值<strong>8</strong>。</li>\n</ol>\n</li>\n<li>第一个线程读到<strong>8</strong> 当时数据库确实是<strong>8</strong> 所以修改成  <strong>9</strong>  修改成功</li>\n<li>第一个之后的线程呢 。\n<ol>\n<li>当时进来时开启事务数据库里是<strong>8</strong></li>\n<li>synchronized等待</li>\n<li>等第一个修改成功之后进去select</li>\n<li>由于事务隔离级别<code>Repeatable read</code>的原因，虽然数据库里改成了<strong>9</strong>,它这里仍然读到是<strong>8</strong></li>\n<li>然后<code>update .... and counter=#{counter}</code> 比较的时候呢，却是<strong>比较数据库真实的值</strong>，所有 <code>8=9</code>一直不成功</li>\n<li>一直重试递归调用 进入了死循环</li>\n</ol>\n</li>\n</ol>\n<h5 id=\"问题找到了那么最简单的解决方案就是transactionalisolation-isolationread_committed-将隔离级别降低一级-读取已提交的\">问题找到了，那么最简单的解决方案就是<code>@Transactional(isolation = Isolation.READ_COMMITTED)</code> 将隔离级别降低一级。读取已提交的</h5>\n<p>最后分下这个代码</p>\n<ol>\n<li>如果不加<code>synchronized</code>其实也会出问题。只是出的几率小一点。</li>\n<li>为了其它service方法使用默认隔离级别，调用<code>getVipCardNo</code> 不出类似问题。我觉得应该利用事务传播行为，<br>\n将<code>getVipCardNo</code>开启一个新的事务，再将隔离级别设置成读取已提交的</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>今天一同事线上遇到一个问题，程序不明原因的进入了死循环。最后通过一步步分析代码的线程运行情况，定位出是事务产生的并发问题</p>","more":"<h5>我们看下代码入口。</h5>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"meta\">@Transactional</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Result&lt;Boolean&gt; <span class=\"title\">execute</span><span class=\"params\">(Map&lt;String, String&gt; currentRow, Map&lt;String, String&gt; contextInfo)</span> </span>&#123;</span><br><span class=\"line\">       ...</span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (<span class=\"keyword\">this</span>) &#123;</span><br><span class=\"line\">             userVipCardDO.setCardNo(userVipCardService.getVipCardNo(contextInfo.get(<span class=\"string\">\"storeId\"</span>)));</span><br><span class=\"line\">        &#125;             </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>此方法可能多线程运行</p>\n</blockquote>\n<h4>第2个方法代码</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">getVipCardNo</span><span class=\"params\">(String storeId)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//获取数据库当前值</span></span><br><span class=\"line\">        SerialNumberDO serialNumberDO = serialNumberDao.getByKey(Long.parseLong(storeId), SerialBusiType.HY.getCode());</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (serialNumberDO == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            ...</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//查出数据库当前值</span></span><br><span class=\"line\">        <span class=\"keyword\">long</span> counter = serialNumberDO.getCounter();</span><br><span class=\"line\">        SerialNumberDO updateDO = <span class=\"keyword\">new</span> SerialNumberDO();</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        updateDO.setCounter(counter);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> i = serialNumberDao.increase(updateDO);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> getVipCardNo(storeId);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> counter;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>相当于一个乐观锁 compare And Set<br>\n此处呢,由于外面synchronized单线程运行<br>\n这是一个递归调用</p>\n</blockquote>\n<h4>第3个dao层sql</h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">update</span> <span class=\"attr\">id</span>=<span class=\"string\">\"increase\"</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">\"SerialNumberDO\"</span>&gt;</span></span><br><span class=\"line\">        update sh_serial_number</span><br><span class=\"line\">        set counter = counter+1</span><br><span class=\"line\">        where store_id = #&#123;storeId&#125;</span><br><span class=\"line\">        and busi_type = #&#123;busiType&#125;</span><br><span class=\"line\">        and counter = #&#123;counter&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">update</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>乐观锁sql</p>\n</blockquote>\n<p>问题出在哪呢。</p>\n<ol>\n<li>第一断代码，当时所有线程进来读到的值都是<strong>8</strong></li>\n<li><code>@Transactional</code> 默认事务隔离级别<code>Repeatable read</code> 可重复读\n<ol>\n<li>这就意味着第一步多个线程进来后。读到的值，其它事务进行修改提交之后。它还是读的当 时进来的这个值<strong>8</strong>。</li>\n</ol>\n</li>\n<li>第一个线程读到<strong>8</strong> 当时数据库确实是<strong>8</strong> 所以修改成  <strong>9</strong>  修改成功</li>\n<li>第一个之后的线程呢 。\n<ol>\n<li>当时进来时开启事务数据库里是<strong>8</strong></li>\n<li>synchronized等待</li>\n<li>等第一个修改成功之后进去select</li>\n<li>由于事务隔离级别<code>Repeatable read</code>的原因，虽然数据库里改成了<strong>9</strong>,它这里仍然读到是<strong>8</strong></li>\n<li>然后<code>update .... and counter=#{counter}</code> 比较的时候呢，却是<strong>比较数据库真实的值</strong>，所有 <code>8=9</code>一直不成功</li>\n<li>一直重试递归调用 进入了死循环</li>\n</ol>\n</li>\n</ol>\n<h5>问题找到了，那么最简单的解决方案就是<code>@Transactional(isolation = Isolation.READ_COMMITTED)</code> 将隔离级别降低一级。读取已提交的</h5>\n<p>最后分下这个代码</p>\n<ol>\n<li>如果不加<code>synchronized</code>其实也会出问题。只是出的几率小一点。</li>\n<li>为了其它service方法使用默认隔离级别，调用<code>getVipCardNo</code> 不出类似问题。我觉得应该利用事务传播行为，<br>\n将<code>getVipCardNo</code>开启一个新的事务，再将隔离级别设置成读取已提交的</li>\n</ol>"},{"title":"SpringMVC优雅的返回文件流","date":"2018-06-13T07:28:28.000Z","_content":"springMVC下载文件方法很多，大致看了下，觉得下面这种方法最正规，最符合官网文档介绍。\n代码主要有两部分组成  \n`StreamingResponseBody` 用来异步下载文件，不占用tomcat工作住线程  \n`ResponseEntity` 用来设置头信息,定义下载的文件名称\n<!-- more -->\n\n``` java\n  @RequestMapping(\"/downloadCategoryExcel\")\n    public ResponseEntity<StreamingResponseBody> downloadCategoryExcel(final String param) {\n        StreamingResponseBody streamingResponseBody = new StreamingResponseBody() {\n            @Override\n            public void writeTo(OutputStream outputStream) throws IOException {\n                String categoryCode = JSON.parseObject(param).getString(\"categoryCode\");\n                Workbook workbook = excelCreateService.createCategoryTemplate(categoryCode);\n                workbook.write(outputStream);\n            }\n        };\n        ResponseEntity.BodyBuilder bodyBuilder=ResponseEntity.ok();\n        bodyBuilder.contentType(MediaType.parseMediaType(\"application/vnd.ms-excel\"));\n        bodyBuilder.header(\"Content-Disposition\", \"attachment;filename=1.xlsx\");\n        bodyBuilder.body(streamingResponseBody);\n        return bodyBuilder.build();\n    }\n```\n\n\n[springMVC官网介绍](https://docs.spring.io/spring/docs/4.3.12.RELEASE/spring-framework-reference/htmlsingle/#mvc-ann-async-output-stream)\n里面有有段话\n>Note that `StreamingResponseBody` can also be used as the body in a `ResponseEntity` in order to customize the status and headers of the response.","source":"_posts/SpringMVCOutputStream.md","raw":"---\ntitle: SpringMVC优雅的返回文件流\ndate: 2018-06-13 15:28:28\ntags: Spring\n---\nspringMVC下载文件方法很多，大致看了下，觉得下面这种方法最正规，最符合官网文档介绍。\n代码主要有两部分组成  \n`StreamingResponseBody` 用来异步下载文件，不占用tomcat工作住线程  \n`ResponseEntity` 用来设置头信息,定义下载的文件名称\n<!-- more -->\n\n``` java\n  @RequestMapping(\"/downloadCategoryExcel\")\n    public ResponseEntity<StreamingResponseBody> downloadCategoryExcel(final String param) {\n        StreamingResponseBody streamingResponseBody = new StreamingResponseBody() {\n            @Override\n            public void writeTo(OutputStream outputStream) throws IOException {\n                String categoryCode = JSON.parseObject(param).getString(\"categoryCode\");\n                Workbook workbook = excelCreateService.createCategoryTemplate(categoryCode);\n                workbook.write(outputStream);\n            }\n        };\n        ResponseEntity.BodyBuilder bodyBuilder=ResponseEntity.ok();\n        bodyBuilder.contentType(MediaType.parseMediaType(\"application/vnd.ms-excel\"));\n        bodyBuilder.header(\"Content-Disposition\", \"attachment;filename=1.xlsx\");\n        bodyBuilder.body(streamingResponseBody);\n        return bodyBuilder.build();\n    }\n```\n\n\n[springMVC官网介绍](https://docs.spring.io/spring/docs/4.3.12.RELEASE/spring-framework-reference/htmlsingle/#mvc-ann-async-output-stream)\n里面有有段话\n>Note that `StreamingResponseBody` can also be used as the body in a `ResponseEntity` in order to customize the status and headers of the response.","slug":"SpringMVCOutputStream","published":1,"updated":"2019-06-17T02:25:53.745Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwzrk814000c5gwvj72jqouf","content":"<p>springMVC下载文件方法很多，大致看了下，觉得下面这种方法最正规，最符合官网文档介绍。<br>\n代码主要有两部分组成<br>\n<code>StreamingResponseBody</code> 用来异步下载文件，不占用tomcat工作住线程<br>\n<code>ResponseEntity</code> 用来设置头信息,定义下载的文件名称</p>\n<a id=\"more\"></a>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/downloadCategoryExcel\"</span>)</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> ResponseEntity&lt;StreamingResponseBody&gt; <span class=\"title\">downloadCategoryExcel</span><span class=\"params\">(<span class=\"keyword\">final</span> String param)</span> </span>&#123;</span><br><span class=\"line\">      StreamingResponseBody streamingResponseBody = <span class=\"keyword\">new</span> StreamingResponseBody() &#123;</span><br><span class=\"line\">          <span class=\"meta\">@Override</span></span><br><span class=\"line\">          <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">writeTo</span><span class=\"params\">(OutputStream outputStream)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">              String categoryCode = JSON.parseObject(param).getString(<span class=\"string\">\"categoryCode\"</span>);</span><br><span class=\"line\">              Workbook workbook = excelCreateService.createCategoryTemplate(categoryCode);</span><br><span class=\"line\">              workbook.write(outputStream);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      ResponseEntity.BodyBuilder bodyBuilder=ResponseEntity.ok();</span><br><span class=\"line\">      bodyBuilder.contentType(MediaType.parseMediaType(<span class=\"string\">\"application/vnd.ms-excel\"</span>));</span><br><span class=\"line\">      bodyBuilder.header(<span class=\"string\">\"Content-Disposition\"</span>, <span class=\"string\">\"attachment;filename=1.xlsx\"</span>);</span><br><span class=\"line\">      bodyBuilder.body(streamingResponseBody);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> bodyBuilder.build();</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://docs.spring.io/spring/docs/4.3.12.RELEASE/spring-framework-reference/htmlsingle/#mvc-ann-async-output-stream\" target=\"_blank\" rel=\"noopener\">springMVC官网介绍</a><br>\n里面有有段话</p>\n<blockquote>\n<p>Note that <code>StreamingResponseBody</code> can also be used as the body in a <code>ResponseEntity</code> in order to customize the status and headers of the response.</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>springMVC下载文件方法很多，大致看了下，觉得下面这种方法最正规，最符合官网文档介绍。<br>\n代码主要有两部分组成<br>\n<code>StreamingResponseBody</code> 用来异步下载文件，不占用tomcat工作住线程<br>\n<code>ResponseEntity</code> 用来设置头信息,定义下载的文件名称</p>","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/downloadCategoryExcel\"</span>)</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> ResponseEntity&lt;StreamingResponseBody&gt; <span class=\"title\">downloadCategoryExcel</span><span class=\"params\">(<span class=\"keyword\">final</span> String param)</span> </span>&#123;</span><br><span class=\"line\">      StreamingResponseBody streamingResponseBody = <span class=\"keyword\">new</span> StreamingResponseBody() &#123;</span><br><span class=\"line\">          <span class=\"meta\">@Override</span></span><br><span class=\"line\">          <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">writeTo</span><span class=\"params\">(OutputStream outputStream)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">              String categoryCode = JSON.parseObject(param).getString(<span class=\"string\">\"categoryCode\"</span>);</span><br><span class=\"line\">              Workbook workbook = excelCreateService.createCategoryTemplate(categoryCode);</span><br><span class=\"line\">              workbook.write(outputStream);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      ResponseEntity.BodyBuilder bodyBuilder=ResponseEntity.ok();</span><br><span class=\"line\">      bodyBuilder.contentType(MediaType.parseMediaType(<span class=\"string\">\"application/vnd.ms-excel\"</span>));</span><br><span class=\"line\">      bodyBuilder.header(<span class=\"string\">\"Content-Disposition\"</span>, <span class=\"string\">\"attachment;filename=1.xlsx\"</span>);</span><br><span class=\"line\">      bodyBuilder.body(streamingResponseBody);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> bodyBuilder.build();</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://docs.spring.io/spring/docs/4.3.12.RELEASE/spring-framework-reference/htmlsingle/#mvc-ann-async-output-stream\" target=\"_blank\" rel=\"noopener\">springMVC官网介绍</a><br>\n里面有有段话</p>\n<blockquote>\n<p>Note that <code>StreamingResponseBody</code> can also be used as the body in a <code>ResponseEntity</code> in order to customize the status and headers of the response.</p>\n</blockquote>"},{"title":"RocketMQ多主部署情况分析","date":"2018-09-29T01:57:18.000Z","_content":"验证rocketMQ两主部署\n\n准备工作两台服务器\nA nameserver broker1\nB broker2 \n<!-- more -->\n配置文件 集群名称一致,brokerId=0 相当于(主),brokerName不一致\n```\nbrokerClusterName=DefaultCluster\nbrokerName=broker-a\nbrokerId=0\n```\n\nnameserver启动\n``` shell\n[admin@172_30_229_146 bin]$ nohup sh mqnameserver &\n```\n两台主broker启动\n``` shell\n[admin@172_30_229_146 bin]$ nohup sh mqbroker -c ../conf/2m-noslave/broker-b.properties  -n localhost:9876 &\n[admin@172_30_223_202 bin]$ nohup sh mqbroker -c ../conf/2m-noslave/broker-b.properties -n 172.30.229.146:9876 &\n```\n\n\n1.看下 broker 和nameserver部署情况\n``` shell\n[admin@172_30_229_146 bin]$ ./mqadmin clusterList -n localhost:9876\n#Cluster Name     #Broker Name            #BID  #Addr                  #Version                #InTPS(LOAD)       #OutTPS(LOAD) #PCWait(ms) #Hour #SPACE\nDefaultCluster    broker-a                0     172.30.229.146:10911   V4_3_0                   0.00(0,0ms)         0.00(0,0ms)          0 427206.54 -1.0000\nDefaultCluster    broker-b                0     172.30.223.202:10911   V4_3_0                   0.00(0,0ms)         0.00(0,0ms)          0 427206.54 -1.0000\n\n```\n可知两台 broker 同一个集群都是主\n\n创建topic 这里是关键` -c DefaultCluster`\n``` shell\n[admin@172_30_229_146 bin]$ ./mqadmin updateTopic  -c DefaultCluster -t xiafei -n localhost:9876\ncreate topic to 172.30.229.146:10911 success.\ncreate topic to 172.30.223.202:10911 success.\nTopicConfig [topicName=xiafei, readQueueNums=8, writeQueueNums=8, perm=RW-, topicFilterType=SINGLE_TAG, topicSysFlag=0, order=false][admin@172_30_229_146 bin]$ \n\n```\n\n\n### 客户端发消息测试\n发第一条\n```shell\n[admin@172_30_229_146 bin]$ ./mqadmin topicStatus -t xiafei -n localhost:9876\n#Broker Name                      #QID  #Min Offset           #Max Offset             #Last Updated\nbroker-a                          0     0                     0                       \nbroker-a                          1     0                     0                       \nbroker-a                          2     0                     0                       \nbroker-a                          3     0                     0                       \nbroker-a                          4     0                     0                       \nbroker-a                          5     0                     0                       \nbroker-a                          6     0                     0                       \nbroker-a                          7     0                     0                       \nbroker-b                          0     0                     0                       \nbroker-b                          1     0                     0                       \nbroker-b                          2     0                     0                       \nbroker-b                          3     0                     0                       \nbroker-b                          4     0                     0                       \nbroker-b                          5     0                     0                       \nbroker-b                          6     0                     1                       2018-09-26 14:50:45,747\nbroker-b                          7     0                     0                       \n```\n发第二条\n``` shell\n[admin@172_30_229_146 bin]$ ./mqadmin topicStatus -t xiafei -n localhost:9876\n#Broker Name                      #QID  #Min Offset           #Max Offset             #Last Updated\nbroker-a                          0     0                     0                       \nbroker-a                          1     0                     0                       \nbroker-a                          2     0                     0                       \nbroker-a                          3     0                     0                       \nbroker-a                          4     0                     0                       \nbroker-a                          5     0                     0                       \nbroker-a                          6     0                     1                       2018-09-26 14:51:13,122\nbroker-a                          7     0                     0                       \nbroker-b                          0     0                     0                       \nbroker-b                          1     0                     0                       \nbroker-b                          2     0                     0                       \nbroker-b                          3     0                     0                       \nbroker-b                          4     0                     0                       \nbroker-b                          5     0                     0                       \nbroker-b                          6     0                     1                       2018-09-26 14:50:45,747\nbroker-b                          7     0                     0                       \n\n```\n\n#### 结论:\n多主部署时,相当于分片.\n消息会均衡的分散在个台broker上\n至于 `多从` 情况就是从主上复制嘛!\n然后选择同步或者异步复制\n\n>由此可以部署上与kafka不一样的地方.就是在主从部署时,RocketMQ这个主服务器,不能同时作为主服务器或者从服务器.\n>kafka是将各个topic的队列分散存在各个机器上.每个机器上队列可以是主,亦可以是从.比较灵活","source":"_posts/RocketMQ-Deploy.md","raw":"---\ntitle: RocketMQ多主部署情况分析\ndate: 2018-09-29 09:57:18\ntags: mq\n---\n验证rocketMQ两主部署\n\n准备工作两台服务器\nA nameserver broker1\nB broker2 \n<!-- more -->\n配置文件 集群名称一致,brokerId=0 相当于(主),brokerName不一致\n```\nbrokerClusterName=DefaultCluster\nbrokerName=broker-a\nbrokerId=0\n```\n\nnameserver启动\n``` shell\n[admin@172_30_229_146 bin]$ nohup sh mqnameserver &\n```\n两台主broker启动\n``` shell\n[admin@172_30_229_146 bin]$ nohup sh mqbroker -c ../conf/2m-noslave/broker-b.properties  -n localhost:9876 &\n[admin@172_30_223_202 bin]$ nohup sh mqbroker -c ../conf/2m-noslave/broker-b.properties -n 172.30.229.146:9876 &\n```\n\n\n1.看下 broker 和nameserver部署情况\n``` shell\n[admin@172_30_229_146 bin]$ ./mqadmin clusterList -n localhost:9876\n#Cluster Name     #Broker Name            #BID  #Addr                  #Version                #InTPS(LOAD)       #OutTPS(LOAD) #PCWait(ms) #Hour #SPACE\nDefaultCluster    broker-a                0     172.30.229.146:10911   V4_3_0                   0.00(0,0ms)         0.00(0,0ms)          0 427206.54 -1.0000\nDefaultCluster    broker-b                0     172.30.223.202:10911   V4_3_0                   0.00(0,0ms)         0.00(0,0ms)          0 427206.54 -1.0000\n\n```\n可知两台 broker 同一个集群都是主\n\n创建topic 这里是关键` -c DefaultCluster`\n``` shell\n[admin@172_30_229_146 bin]$ ./mqadmin updateTopic  -c DefaultCluster -t xiafei -n localhost:9876\ncreate topic to 172.30.229.146:10911 success.\ncreate topic to 172.30.223.202:10911 success.\nTopicConfig [topicName=xiafei, readQueueNums=8, writeQueueNums=8, perm=RW-, topicFilterType=SINGLE_TAG, topicSysFlag=0, order=false][admin@172_30_229_146 bin]$ \n\n```\n\n\n### 客户端发消息测试\n发第一条\n```shell\n[admin@172_30_229_146 bin]$ ./mqadmin topicStatus -t xiafei -n localhost:9876\n#Broker Name                      #QID  #Min Offset           #Max Offset             #Last Updated\nbroker-a                          0     0                     0                       \nbroker-a                          1     0                     0                       \nbroker-a                          2     0                     0                       \nbroker-a                          3     0                     0                       \nbroker-a                          4     0                     0                       \nbroker-a                          5     0                     0                       \nbroker-a                          6     0                     0                       \nbroker-a                          7     0                     0                       \nbroker-b                          0     0                     0                       \nbroker-b                          1     0                     0                       \nbroker-b                          2     0                     0                       \nbroker-b                          3     0                     0                       \nbroker-b                          4     0                     0                       \nbroker-b                          5     0                     0                       \nbroker-b                          6     0                     1                       2018-09-26 14:50:45,747\nbroker-b                          7     0                     0                       \n```\n发第二条\n``` shell\n[admin@172_30_229_146 bin]$ ./mqadmin topicStatus -t xiafei -n localhost:9876\n#Broker Name                      #QID  #Min Offset           #Max Offset             #Last Updated\nbroker-a                          0     0                     0                       \nbroker-a                          1     0                     0                       \nbroker-a                          2     0                     0                       \nbroker-a                          3     0                     0                       \nbroker-a                          4     0                     0                       \nbroker-a                          5     0                     0                       \nbroker-a                          6     0                     1                       2018-09-26 14:51:13,122\nbroker-a                          7     0                     0                       \nbroker-b                          0     0                     0                       \nbroker-b                          1     0                     0                       \nbroker-b                          2     0                     0                       \nbroker-b                          3     0                     0                       \nbroker-b                          4     0                     0                       \nbroker-b                          5     0                     0                       \nbroker-b                          6     0                     1                       2018-09-26 14:50:45,747\nbroker-b                          7     0                     0                       \n\n```\n\n#### 结论:\n多主部署时,相当于分片.\n消息会均衡的分散在个台broker上\n至于 `多从` 情况就是从主上复制嘛!\n然后选择同步或者异步复制\n\n>由此可以部署上与kafka不一样的地方.就是在主从部署时,RocketMQ这个主服务器,不能同时作为主服务器或者从服务器.\n>kafka是将各个topic的队列分散存在各个机器上.每个机器上队列可以是主,亦可以是从.比较灵活","slug":"RocketMQ-Deploy","published":1,"updated":"2019-06-17T02:25:53.745Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwzrk817000d5gwv9h4xxvom","content":"<p>验证rocketMQ两主部署</p>\n<p>准备工作两台服务器<br>\nA nameserver broker1<br>\nB broker2</p>\n<a id=\"more\"></a>\n<p>配置文件 集群名称一致,brokerId=0 相当于(主),brokerName不一致</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brokerClusterName=DefaultCluster</span><br><span class=\"line\">brokerName=broker-a</span><br><span class=\"line\">brokerId=0</span><br></pre></td></tr></table></figure>\n<p>nameserver启动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[admin@172_30_229_146 bin]$ nohup sh mqnameserver &amp;</span><br></pre></td></tr></table></figure>\n<p>两台主broker启动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[admin@172_30_229_146 bin]$ nohup sh mqbroker -c ../conf/2m-noslave/broker-b.properties  -n localhost:9876 &amp;</span><br><span class=\"line\">[admin@172_30_223_202 bin]$ nohup sh mqbroker -c ../conf/2m-noslave/broker-b.properties -n 172.30.229.146:9876 &amp;</span><br></pre></td></tr></table></figure>\n<p>1.看下 broker 和nameserver部署情况</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[admin@172_30_229_146 bin]$ ./mqadmin clusterList -n localhost:9876</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">Cluster Name     <span class=\"comment\">#Broker Name            #BID  #Addr                  #Version                #InTPS(LOAD)       #OutTPS(LOAD) #PCWait(ms) #Hour #SPACE</span></span></span><br><span class=\"line\">DefaultCluster    broker-a                0     172.30.229.146:10911   V4_3_0                   0.00(0,0ms)         0.00(0,0ms)          0 427206.54 -1.0000</span><br><span class=\"line\">DefaultCluster    broker-b                0     172.30.223.202:10911   V4_3_0                   0.00(0,0ms)         0.00(0,0ms)          0 427206.54 -1.0000</span><br></pre></td></tr></table></figure>\n<p>可知两台 broker 同一个集群都是主</p>\n<p>创建topic 这里是关键<code>-c DefaultCluster</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[admin@172_30_229_146 bin]$ ./mqadmin updateTopic  -c DefaultCluster -t xiafei -n localhost:9876</span><br><span class=\"line\">create topic to 172.30.229.146:10911 success.</span><br><span class=\"line\">create topic to 172.30.223.202:10911 success.</span><br><span class=\"line\">TopicConfig [topicName=xiafei, readQueueNums=8, writeQueueNums=8, perm=RW-, topicFilterType=SINGLE_TAG, topicSysFlag=0, order=false][admin@172_30_229_146 bin]$</span><br></pre></td></tr></table></figure>\n<h3 id=\"客户端发消息测试\">客户端发消息测试</h3>\n<p>发第一条</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[admin@172_30_229_146 bin]$ ./mqadmin topicStatus -t xiafei -n localhost:9876</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">Broker Name                      <span class=\"comment\">#QID  #Min Offset           #Max Offset             #Last Updated</span></span></span><br><span class=\"line\">broker-a                          0     0                     0                       </span><br><span class=\"line\">broker-a                          1     0                     0                       </span><br><span class=\"line\">broker-a                          2     0                     0                       </span><br><span class=\"line\">broker-a                          3     0                     0                       </span><br><span class=\"line\">broker-a                          4     0                     0                       </span><br><span class=\"line\">broker-a                          5     0                     0                       </span><br><span class=\"line\">broker-a                          6     0                     0                       </span><br><span class=\"line\">broker-a                          7     0                     0                       </span><br><span class=\"line\">broker-b                          0     0                     0                       </span><br><span class=\"line\">broker-b                          1     0                     0                       </span><br><span class=\"line\">broker-b                          2     0                     0                       </span><br><span class=\"line\">broker-b                          3     0                     0                       </span><br><span class=\"line\">broker-b                          4     0                     0                       </span><br><span class=\"line\">broker-b                          5     0                     0                       </span><br><span class=\"line\">broker-b                          6     0                     1                       2018-09-26 14:50:45,747</span><br><span class=\"line\">broker-b                          7     0                     0</span><br></pre></td></tr></table></figure>\n<p>发第二条</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[admin@172_30_229_146 bin]$ ./mqadmin topicStatus -t xiafei -n localhost:9876</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">Broker Name                      <span class=\"comment\">#QID  #Min Offset           #Max Offset             #Last Updated</span></span></span><br><span class=\"line\">broker-a                          0     0                     0                       </span><br><span class=\"line\">broker-a                          1     0                     0                       </span><br><span class=\"line\">broker-a                          2     0                     0                       </span><br><span class=\"line\">broker-a                          3     0                     0                       </span><br><span class=\"line\">broker-a                          4     0                     0                       </span><br><span class=\"line\">broker-a                          5     0                     0                       </span><br><span class=\"line\">broker-a                          6     0                     1                       2018-09-26 14:51:13,122</span><br><span class=\"line\">broker-a                          7     0                     0                       </span><br><span class=\"line\">broker-b                          0     0                     0                       </span><br><span class=\"line\">broker-b                          1     0                     0                       </span><br><span class=\"line\">broker-b                          2     0                     0                       </span><br><span class=\"line\">broker-b                          3     0                     0                       </span><br><span class=\"line\">broker-b                          4     0                     0                       </span><br><span class=\"line\">broker-b                          5     0                     0                       </span><br><span class=\"line\">broker-b                          6     0                     1                       2018-09-26 14:50:45,747</span><br><span class=\"line\">broker-b                          7     0                     0</span><br></pre></td></tr></table></figure>\n<h4 id=\"结论\">结论:</h4>\n<p>多主部署时,相当于分片.<br>\n消息会均衡的分散在个台broker上<br>\n至于 <code>多从</code> 情况就是从主上复制嘛!<br>\n然后选择同步或者异步复制</p>\n<blockquote>\n<p>由此可以部署上与kafka不一样的地方.就是在主从部署时,RocketMQ这个主服务器,不能同时作为主服务器或者从服务器.<br>\nkafka是将各个topic的队列分散存在各个机器上.每个机器上队列可以是主,亦可以是从.比较灵活</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>验证rocketMQ两主部署</p>\n<p>准备工作两台服务器<br>\nA nameserver broker1<br>\nB broker2</p>","more":"<p>配置文件 集群名称一致,brokerId=0 相当于(主),brokerName不一致</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brokerClusterName=DefaultCluster</span><br><span class=\"line\">brokerName=broker-a</span><br><span class=\"line\">brokerId=0</span><br></pre></td></tr></table></figure>\n<p>nameserver启动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[admin@172_30_229_146 bin]$ nohup sh mqnameserver &amp;</span><br></pre></td></tr></table></figure>\n<p>两台主broker启动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[admin@172_30_229_146 bin]$ nohup sh mqbroker -c ../conf/2m-noslave/broker-b.properties  -n localhost:9876 &amp;</span><br><span class=\"line\">[admin@172_30_223_202 bin]$ nohup sh mqbroker -c ../conf/2m-noslave/broker-b.properties -n 172.30.229.146:9876 &amp;</span><br></pre></td></tr></table></figure>\n<p>1.看下 broker 和nameserver部署情况</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[admin@172_30_229_146 bin]$ ./mqadmin clusterList -n localhost:9876</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">Cluster Name     <span class=\"comment\">#Broker Name            #BID  #Addr                  #Version                #InTPS(LOAD)       #OutTPS(LOAD) #PCWait(ms) #Hour #SPACE</span></span></span><br><span class=\"line\">DefaultCluster    broker-a                0     172.30.229.146:10911   V4_3_0                   0.00(0,0ms)         0.00(0,0ms)          0 427206.54 -1.0000</span><br><span class=\"line\">DefaultCluster    broker-b                0     172.30.223.202:10911   V4_3_0                   0.00(0,0ms)         0.00(0,0ms)          0 427206.54 -1.0000</span><br></pre></td></tr></table></figure>\n<p>可知两台 broker 同一个集群都是主</p>\n<p>创建topic 这里是关键<code>-c DefaultCluster</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[admin@172_30_229_146 bin]$ ./mqadmin updateTopic  -c DefaultCluster -t xiafei -n localhost:9876</span><br><span class=\"line\">create topic to 172.30.229.146:10911 success.</span><br><span class=\"line\">create topic to 172.30.223.202:10911 success.</span><br><span class=\"line\">TopicConfig [topicName=xiafei, readQueueNums=8, writeQueueNums=8, perm=RW-, topicFilterType=SINGLE_TAG, topicSysFlag=0, order=false][admin@172_30_229_146 bin]$</span><br></pre></td></tr></table></figure>\n<h3>客户端发消息测试</h3>\n<p>发第一条</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[admin@172_30_229_146 bin]$ ./mqadmin topicStatus -t xiafei -n localhost:9876</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">Broker Name                      <span class=\"comment\">#QID  #Min Offset           #Max Offset             #Last Updated</span></span></span><br><span class=\"line\">broker-a                          0     0                     0                       </span><br><span class=\"line\">broker-a                          1     0                     0                       </span><br><span class=\"line\">broker-a                          2     0                     0                       </span><br><span class=\"line\">broker-a                          3     0                     0                       </span><br><span class=\"line\">broker-a                          4     0                     0                       </span><br><span class=\"line\">broker-a                          5     0                     0                       </span><br><span class=\"line\">broker-a                          6     0                     0                       </span><br><span class=\"line\">broker-a                          7     0                     0                       </span><br><span class=\"line\">broker-b                          0     0                     0                       </span><br><span class=\"line\">broker-b                          1     0                     0                       </span><br><span class=\"line\">broker-b                          2     0                     0                       </span><br><span class=\"line\">broker-b                          3     0                     0                       </span><br><span class=\"line\">broker-b                          4     0                     0                       </span><br><span class=\"line\">broker-b                          5     0                     0                       </span><br><span class=\"line\">broker-b                          6     0                     1                       2018-09-26 14:50:45,747</span><br><span class=\"line\">broker-b                          7     0                     0</span><br></pre></td></tr></table></figure>\n<p>发第二条</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[admin@172_30_229_146 bin]$ ./mqadmin topicStatus -t xiafei -n localhost:9876</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">Broker Name                      <span class=\"comment\">#QID  #Min Offset           #Max Offset             #Last Updated</span></span></span><br><span class=\"line\">broker-a                          0     0                     0                       </span><br><span class=\"line\">broker-a                          1     0                     0                       </span><br><span class=\"line\">broker-a                          2     0                     0                       </span><br><span class=\"line\">broker-a                          3     0                     0                       </span><br><span class=\"line\">broker-a                          4     0                     0                       </span><br><span class=\"line\">broker-a                          5     0                     0                       </span><br><span class=\"line\">broker-a                          6     0                     1                       2018-09-26 14:51:13,122</span><br><span class=\"line\">broker-a                          7     0                     0                       </span><br><span class=\"line\">broker-b                          0     0                     0                       </span><br><span class=\"line\">broker-b                          1     0                     0                       </span><br><span class=\"line\">broker-b                          2     0                     0                       </span><br><span class=\"line\">broker-b                          3     0                     0                       </span><br><span class=\"line\">broker-b                          4     0                     0                       </span><br><span class=\"line\">broker-b                          5     0                     0                       </span><br><span class=\"line\">broker-b                          6     0                     1                       2018-09-26 14:50:45,747</span><br><span class=\"line\">broker-b                          7     0                     0</span><br></pre></td></tr></table></figure>\n<h4>结论:</h4>\n<p>多主部署时,相当于分片.<br>\n消息会均衡的分散在个台broker上<br>\n至于 <code>多从</code> 情况就是从主上复制嘛!<br>\n然后选择同步或者异步复制</p>\n<blockquote>\n<p>由此可以部署上与kafka不一样的地方.就是在主从部署时,RocketMQ这个主服务器,不能同时作为主服务器或者从服务器.<br>\nkafka是将各个topic的队列分散存在各个机器上.每个机器上队列可以是主,亦可以是从.比较灵活</p>\n</blockquote>"},{"title":"线程池源码剖析","date":"2018-06-04T11:43:59.000Z","_content":"\n### ThreadPoolExecutor 白话概念\n**线程池里面有一个集合里面放的`Worker`对象 集合大小对应着核心线程数**  \n1. 如果工作线程数量小于核心线程数  \n2. 会创建任务放进集合,之后启动`Worker`线程  \n3. 工作线程数不小于核心线程数,往队列里面放任务  \n4. `Worker`线程启动之后,`worker`线程会调`runWorker()`方法  \n5. 它会一直循环从队列里面取任务。然后调用它的`Run`方法取执行它。  \n<!-- more -->\n\n\n#### 线程池ThreadPoolExecutor分析   \n##### 一、首先看`ThreadPoolExecutor#execute(Runnable)`提交任务方法\n``` java\n int c = ctl.get();\n        if (workerCountOf(c) < corePoolSize) {\n            if (addWorker(command, true))\n                return;\n            c = ctl.get();\n        }\n        if (isRunning(c) && workQueue.offer(command)) {\n            int recheck = ctl.get();\n            if (! isRunning(recheck) && remove(command))\n                reject(command);\n            else if (workerCountOf(recheck) == 0)\n                addWorker(null, false);\n        }\n        else if (!addWorker(command, false))\n            reject(command);\n```\n\n1. 判断超过核心线程数没 没超过addWorker (Worker对象也很关键)\n2. 创建任务或者workQuery.offer()队列里存放任务\n3. 判断超出限制拒绝任务\n\n##### 二、`ThreadPoolExecutor#addWorker(Runnable firstTask, boolean core)`添加工作线程方法\n第1段 判断\n``` java\nretry:\n        for (;;) {\n            int c = ctl.get();\n            int rs = runStateOf(c);\n            for (;;) {\n                int wc = workerCountOf(c);\n                if (wc >= CAPACITY ||\n                    wc >= (core ? corePoolSize : maximumPoolSize))\n                    return false;\n                if (compareAndIncrementWorkerCount(c))\n                    break retry;\n                c = ctl.get();  // Re-read ctl\n                if (runStateOf(c) != rs)\n                    continue retry;      \n            }\n        }\n```\n这段代码主要是为了判断当前线程池状态和限制数量，不正确进行重试，略过compareAndIncrementWorkerCount成功跳出最外层循环往下走。  \n第2段 才是这个方法的核心部分\n``` java\n        boolean workerStarted = false;\n        boolean workerAdded = false;\n        Worker w = null;\n        try {\n            final ReentrantLock mainLock = this.mainLock;\n            w = new Worker(firstTask);\n            final Thread t = w.thread;\n            if (t != null) {\n                mainLock.lock();\n                try {\n                        workers.add(w);\n                        int s = workers.size();\n                        if (s > largestPoolSize)\n                            largestPoolSize = s;\n                        workerAdded = true;\n                    }\n                } finally {\n                    mainLock.unlock();\n                }\n                if (workerAdded) {\n                    t.start();      \n                }\n        return workerStarted;\n```\nThreadPoolExecutor里面有一个Set<Worker> 集合。将要提交的任务Runnable放到Worker对象里 ，Worker对象本身是一个线程，然后启动它\n##### 三、`Worker对象，本身也是一个对象`\n``` java\nprivate final class Worker extends AbstractQueuedSynchronizer implements Runnable\n        final Thread thread;\n        Runnable firstTask;\n        volatile long completedTasks;\n        Worker(Runnable firstTask) {\n            setState(-1); // inhibit interrupts until runWorker\n            this.firstTask = firstTask;\n            this.thread = getThreadFactory().newThread(this);\n        }\n        public void run() {\n            runWorker(this);\n        }\n        final void runWorker(Worker w) {\n            Thread wt = Thread.currentThread();\n            Runnable task = w.firstTask;\n            w.firstTask = null;\n            w.unlock(); // allow interrupts\n            boolean completedAbruptly = true;\n            while (task != null || (task = getTask()) != null) {\n                w.lock();\n                    beforeExecute(wt, task);\n                        task.run();\n                    w.completedTasks++;\n                    w.unlock();\n            }\n    }\n```\n这段代码运行一个线程 死循环 `getTask()`取`Runnable`调用他的`Run()`方法 其中`getTask()`是关键;\n\n##### 四、ThreadPoolExecutor#getTask() 从队列取任务方法\n``` java\n boolean timedOut = false; // Did the last poll() time out?\n        retry:\n        for (;;) {\n            int c = ctl.get();\n            int rs = runStateOf(c);  \n                Runnable r = timed ?\n                    workQueue.poll(keepAliveTime, TimeUnit.NANOSECONDS) :\n                    workQueue.take();\n                if (r != null)\n              return r;          \n        }\n```\n死循环从workQueue取Runnable任务返回\n\n\n\n#### ThreadPoolExecutor ctl字段分析\n``` java\n    static final int COUNT_BITS = Integer.SIZE - 3;\n    static final int CAPACITY   = (1 << COUNT_BITS) - 1;\n\n    // runState is stored in the high-order bits\n    static final int RUNNING    = -1 << COUNT_BITS;\n    static final int SHUTDOWN   =  0 << COUNT_BITS;\n    static final int STOP       =  1 << COUNT_BITS;\n    static final int TIDYING    =  2 << COUNT_BITS;\n    static final int TERMINATED =  3 << COUNT_BITS;\n\n    static int runStateOf(int c)     { return c & ~CAPACITY; }\n    static int workerCountOf(int c)  { return c & CAPACITY; }\n    static int ctlOf(int rs, int wc) { return rs | wc; }\n```\n\n|线程状态|----|----|----|----|----|----|----|----|十进制数值|\n|------|---|---|---|---|---|---|---|---|---|\n|**RUNNING**   |1110|0000|0000|0000|0000|0000|0000|0000|-536870912|  \n|**SHUTDOWN**  |0000|0000|0000|0000|0000|0000|0000|0000|0|\n|**STOP**      |0010|0000|0000|0000|0000|0000|0000|0000|536870912|\n|**TIDYING**   |0100|0000|0000|0000|0000|0000|0000|0000|1073741824|\n|**TERMINATED**|0110|0000|0000|0000|0000|0000|0000|0000|1610612736|\n\n\n|字段|----|----|----|----|----|----|----|----|十进制数值|\n|------|---|---|---|---|---|---|---|---|---|\n|**CAPACITY**  |0001|1111|1111|1111|1111|1111|1111|1111|536870911|\n|**~CAPACITY** |1110|0000|0000|0000|0000|0000|0000|0000|-536870912|\n\n由此二进制结果 分析\n> runStateOf() c & ~CAPACITY      \n\n相当于就是取前4位的值\n\n\n> workerCountOf() c & CAPACITY   \n\n相当就是取后面的值\n\nctl一个int型4个字节 4*8=32 位 里面存了两部分的值\n前面4位存的是线程的5个状态,后面28位存的工作线程池的数量\n\n``` java\nint c = ctl.get();\nint rs = runStateOf(c);\nif (rs >= SHUTDOWN &&! (rs == SHUTDOWN &&firstTask == null &&! workQueue.isEmpty()));\n```\n这种`rs >= SHUTDOWN` 相当*SHUTDOWN*,*STOP*,*TIDYING*,*TERMINATED*这些字段是符合状态的。\n\n<br>","source":"_posts/ThreadPoolExecuter.md","raw":"---\ntitle: 线程池源码剖析\ndate: 2018-06-04 19:43:59\ntags: Thread\n---\n\n### ThreadPoolExecutor 白话概念\n**线程池里面有一个集合里面放的`Worker`对象 集合大小对应着核心线程数**  \n1. 如果工作线程数量小于核心线程数  \n2. 会创建任务放进集合,之后启动`Worker`线程  \n3. 工作线程数不小于核心线程数,往队列里面放任务  \n4. `Worker`线程启动之后,`worker`线程会调`runWorker()`方法  \n5. 它会一直循环从队列里面取任务。然后调用它的`Run`方法取执行它。  \n<!-- more -->\n\n\n#### 线程池ThreadPoolExecutor分析   \n##### 一、首先看`ThreadPoolExecutor#execute(Runnable)`提交任务方法\n``` java\n int c = ctl.get();\n        if (workerCountOf(c) < corePoolSize) {\n            if (addWorker(command, true))\n                return;\n            c = ctl.get();\n        }\n        if (isRunning(c) && workQueue.offer(command)) {\n            int recheck = ctl.get();\n            if (! isRunning(recheck) && remove(command))\n                reject(command);\n            else if (workerCountOf(recheck) == 0)\n                addWorker(null, false);\n        }\n        else if (!addWorker(command, false))\n            reject(command);\n```\n\n1. 判断超过核心线程数没 没超过addWorker (Worker对象也很关键)\n2. 创建任务或者workQuery.offer()队列里存放任务\n3. 判断超出限制拒绝任务\n\n##### 二、`ThreadPoolExecutor#addWorker(Runnable firstTask, boolean core)`添加工作线程方法\n第1段 判断\n``` java\nretry:\n        for (;;) {\n            int c = ctl.get();\n            int rs = runStateOf(c);\n            for (;;) {\n                int wc = workerCountOf(c);\n                if (wc >= CAPACITY ||\n                    wc >= (core ? corePoolSize : maximumPoolSize))\n                    return false;\n                if (compareAndIncrementWorkerCount(c))\n                    break retry;\n                c = ctl.get();  // Re-read ctl\n                if (runStateOf(c) != rs)\n                    continue retry;      \n            }\n        }\n```\n这段代码主要是为了判断当前线程池状态和限制数量，不正确进行重试，略过compareAndIncrementWorkerCount成功跳出最外层循环往下走。  \n第2段 才是这个方法的核心部分\n``` java\n        boolean workerStarted = false;\n        boolean workerAdded = false;\n        Worker w = null;\n        try {\n            final ReentrantLock mainLock = this.mainLock;\n            w = new Worker(firstTask);\n            final Thread t = w.thread;\n            if (t != null) {\n                mainLock.lock();\n                try {\n                        workers.add(w);\n                        int s = workers.size();\n                        if (s > largestPoolSize)\n                            largestPoolSize = s;\n                        workerAdded = true;\n                    }\n                } finally {\n                    mainLock.unlock();\n                }\n                if (workerAdded) {\n                    t.start();      \n                }\n        return workerStarted;\n```\nThreadPoolExecutor里面有一个Set<Worker> 集合。将要提交的任务Runnable放到Worker对象里 ，Worker对象本身是一个线程，然后启动它\n##### 三、`Worker对象，本身也是一个对象`\n``` java\nprivate final class Worker extends AbstractQueuedSynchronizer implements Runnable\n        final Thread thread;\n        Runnable firstTask;\n        volatile long completedTasks;\n        Worker(Runnable firstTask) {\n            setState(-1); // inhibit interrupts until runWorker\n            this.firstTask = firstTask;\n            this.thread = getThreadFactory().newThread(this);\n        }\n        public void run() {\n            runWorker(this);\n        }\n        final void runWorker(Worker w) {\n            Thread wt = Thread.currentThread();\n            Runnable task = w.firstTask;\n            w.firstTask = null;\n            w.unlock(); // allow interrupts\n            boolean completedAbruptly = true;\n            while (task != null || (task = getTask()) != null) {\n                w.lock();\n                    beforeExecute(wt, task);\n                        task.run();\n                    w.completedTasks++;\n                    w.unlock();\n            }\n    }\n```\n这段代码运行一个线程 死循环 `getTask()`取`Runnable`调用他的`Run()`方法 其中`getTask()`是关键;\n\n##### 四、ThreadPoolExecutor#getTask() 从队列取任务方法\n``` java\n boolean timedOut = false; // Did the last poll() time out?\n        retry:\n        for (;;) {\n            int c = ctl.get();\n            int rs = runStateOf(c);  \n                Runnable r = timed ?\n                    workQueue.poll(keepAliveTime, TimeUnit.NANOSECONDS) :\n                    workQueue.take();\n                if (r != null)\n              return r;          \n        }\n```\n死循环从workQueue取Runnable任务返回\n\n\n\n#### ThreadPoolExecutor ctl字段分析\n``` java\n    static final int COUNT_BITS = Integer.SIZE - 3;\n    static final int CAPACITY   = (1 << COUNT_BITS) - 1;\n\n    // runState is stored in the high-order bits\n    static final int RUNNING    = -1 << COUNT_BITS;\n    static final int SHUTDOWN   =  0 << COUNT_BITS;\n    static final int STOP       =  1 << COUNT_BITS;\n    static final int TIDYING    =  2 << COUNT_BITS;\n    static final int TERMINATED =  3 << COUNT_BITS;\n\n    static int runStateOf(int c)     { return c & ~CAPACITY; }\n    static int workerCountOf(int c)  { return c & CAPACITY; }\n    static int ctlOf(int rs, int wc) { return rs | wc; }\n```\n\n|线程状态|----|----|----|----|----|----|----|----|十进制数值|\n|------|---|---|---|---|---|---|---|---|---|\n|**RUNNING**   |1110|0000|0000|0000|0000|0000|0000|0000|-536870912|  \n|**SHUTDOWN**  |0000|0000|0000|0000|0000|0000|0000|0000|0|\n|**STOP**      |0010|0000|0000|0000|0000|0000|0000|0000|536870912|\n|**TIDYING**   |0100|0000|0000|0000|0000|0000|0000|0000|1073741824|\n|**TERMINATED**|0110|0000|0000|0000|0000|0000|0000|0000|1610612736|\n\n\n|字段|----|----|----|----|----|----|----|----|十进制数值|\n|------|---|---|---|---|---|---|---|---|---|\n|**CAPACITY**  |0001|1111|1111|1111|1111|1111|1111|1111|536870911|\n|**~CAPACITY** |1110|0000|0000|0000|0000|0000|0000|0000|-536870912|\n\n由此二进制结果 分析\n> runStateOf() c & ~CAPACITY      \n\n相当于就是取前4位的值\n\n\n> workerCountOf() c & CAPACITY   \n\n相当就是取后面的值\n\nctl一个int型4个字节 4*8=32 位 里面存了两部分的值\n前面4位存的是线程的5个状态,后面28位存的工作线程池的数量\n\n``` java\nint c = ctl.get();\nint rs = runStateOf(c);\nif (rs >= SHUTDOWN &&! (rs == SHUTDOWN &&firstTask == null &&! workQueue.isEmpty()));\n```\n这种`rs >= SHUTDOWN` 相当*SHUTDOWN*,*STOP*,*TIDYING*,*TERMINATED*这些字段是符合状态的。\n\n<br>","slug":"ThreadPoolExecuter","published":1,"updated":"2019-06-17T02:25:53.746Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwzrk819000f5gwvmz1jzxhr","content":"<h3 id=\"threadpoolexecutor-白话概念\">ThreadPoolExecutor 白话概念</h3>\n<p><strong>线程池里面有一个集合里面放的<code>Worker</code>对象 集合大小对应着核心线程数</strong></p>\n<ol>\n<li>如果工作线程数量小于核心线程数</li>\n<li>会创建任务放进集合,之后启动<code>Worker</code>线程</li>\n<li>工作线程数不小于核心线程数,往队列里面放任务</li>\n<li><code>Worker</code>线程启动之后,<code>worker</code>线程会调<code>runWorker()</code>方法</li>\n<li>它会一直循环从队列里面取任务。然后调用它的<code>Run</code>方法取执行它。</li>\n</ol>\n<a id=\"more\"></a>\n<h4 id=\"线程池threadpoolexecutor分析\">线程池ThreadPoolExecutor分析</h4>\n<h5 id=\"一-首先看threadpoolexecutorexecuterunnable提交任务方法\">一、首先看<code>ThreadPoolExecutor#execute(Runnable)</code>提交任务方法</h5>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> c = ctl.get();</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (workerCountOf(c) &lt; corePoolSize) &#123;</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (addWorker(command, <span class=\"keyword\">true</span>))</span><br><span class=\"line\">               <span class=\"keyword\">return</span>;</span><br><span class=\"line\">           c = ctl.get();</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (isRunning(c) &amp;&amp; workQueue.offer(command)) &#123;</span><br><span class=\"line\">           <span class=\"keyword\">int</span> recheck = ctl.get();</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (! isRunning(recheck) &amp;&amp; remove(command))</span><br><span class=\"line\">               reject(command);</span><br><span class=\"line\">           <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (workerCountOf(recheck) == <span class=\"number\">0</span>)</span><br><span class=\"line\">               addWorker(<span class=\"keyword\">null</span>, <span class=\"keyword\">false</span>);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (!addWorker(command, <span class=\"keyword\">false</span>))</span><br><span class=\"line\">           reject(command);</span><br></pre></td></tr></table></figure>\n<ol>\n<li>判断超过核心线程数没 没超过addWorker (Worker对象也很关键)</li>\n<li>创建任务或者workQuery.offer()队列里存放任务</li>\n<li>判断超出限制拒绝任务</li>\n</ol>\n<h5 id=\"二-threadpoolexecutoraddworkerrunnable-firsttask-boolean-core添加工作线程方法\">二、<code>ThreadPoolExecutor#addWorker(Runnable firstTask, boolean core)</code>添加工作线程方法</h5>\n<p>第1段 判断</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">retry:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (;;) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> c = ctl.get();</span><br><span class=\"line\">            <span class=\"keyword\">int</span> rs = runStateOf(c);</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (;;) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> wc = workerCountOf(c);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (wc &gt;= CAPACITY ||</span><br><span class=\"line\">                    wc &gt;= (core ? corePoolSize : maximumPoolSize))</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (compareAndIncrementWorkerCount(c))</span><br><span class=\"line\">                    <span class=\"keyword\">break</span> retry;</span><br><span class=\"line\">                c = ctl.get();  <span class=\"comment\">// Re-read ctl</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (runStateOf(c) != rs)</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span> retry;      </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n<p>这段代码主要是为了判断当前线程池状态和限制数量，不正确进行重试，略过compareAndIncrementWorkerCount成功跳出最外层循环往下走。<br>\n第2段 才是这个方法的核心部分</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">boolean</span> workerStarted = <span class=\"keyword\">false</span>;</span><br><span class=\"line\"><span class=\"keyword\">boolean</span> workerAdded = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">Worker w = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">final</span> ReentrantLock mainLock = <span class=\"keyword\">this</span>.mainLock;</span><br><span class=\"line\">    w = <span class=\"keyword\">new</span> Worker(firstTask);</span><br><span class=\"line\">    <span class=\"keyword\">final</span> Thread t = w.thread;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (t != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">        mainLock.lock();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                workers.add(w);</span><br><span class=\"line\">                <span class=\"keyword\">int</span> s = workers.size();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (s &gt; largestPoolSize)</span><br><span class=\"line\">                    largestPoolSize = s;</span><br><span class=\"line\">                workerAdded = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            mainLock.unlock();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (workerAdded) &#123;</span><br><span class=\"line\">            t.start();      </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> workerStarted;</span><br></pre></td></tr></table></figure>\n<p>ThreadPoolExecutor里面有一个Set<worker> 集合。将要提交的任务Runnable放到Worker对象里 ，Worker对象本身是一个线程，然后启动它</worker></p>\n<h5 id=\"三-worker对象本身也是一个对象\">三、<code>Worker对象，本身也是一个对象</code></h5>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Worker</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractQueuedSynchronizer</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span></span><br><span class=\"line\"><span class=\"class\">        <span class=\"title\">final</span> <span class=\"title\">Thread</span> <span class=\"title\">thread</span></span>;</span><br><span class=\"line\">        Runnable firstTask;</span><br><span class=\"line\">        <span class=\"keyword\">volatile</span> <span class=\"keyword\">long</span> completedTasks;</span><br><span class=\"line\">        Worker(Runnable firstTask) &#123;</span><br><span class=\"line\">            setState(-<span class=\"number\">1</span>); <span class=\"comment\">// inhibit interrupts until runWorker</span></span><br><span class=\"line\">            <span class=\"keyword\">this</span>.firstTask = firstTask;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.thread = getThreadFactory().newThread(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            runWorker(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">final</span> <span class=\"keyword\">void</span> <span class=\"title\">runWorker</span><span class=\"params\">(Worker w)</span> </span>&#123;</span><br><span class=\"line\">            Thread wt = Thread.currentThread();</span><br><span class=\"line\">            Runnable task = w.firstTask;</span><br><span class=\"line\">            w.firstTask = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">            w.unlock(); <span class=\"comment\">// allow interrupts</span></span><br><span class=\"line\">            <span class=\"keyword\">boolean</span> completedAbruptly = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (task != <span class=\"keyword\">null</span> || (task = getTask()) != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                w.lock();</span><br><span class=\"line\">                    beforeExecute(wt, task);</span><br><span class=\"line\">                        task.run();</span><br><span class=\"line\">                    w.completedTasks++;</span><br><span class=\"line\">                    w.unlock();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>这段代码运行一个线程 死循环 <code>getTask()</code>取<code>Runnable</code>调用他的<code>Run()</code>方法 其中<code>getTask()</code>是关键;</p>\n<h5 id=\"四-threadpoolexecutorgettask-从队列取任务方法\">四、ThreadPoolExecutor#getTask() 从队列取任务方法</h5>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">boolean</span> timedOut = <span class=\"keyword\">false</span>; <span class=\"comment\">// Did the last poll() time out?</span></span><br><span class=\"line\">       retry:</span><br><span class=\"line\">       <span class=\"keyword\">for</span> (;;) &#123;</span><br><span class=\"line\">           <span class=\"keyword\">int</span> c = ctl.get();</span><br><span class=\"line\">           <span class=\"keyword\">int</span> rs = runStateOf(c);  </span><br><span class=\"line\">               Runnable r = timed ?</span><br><span class=\"line\">                   workQueue.poll(keepAliveTime, TimeUnit.NANOSECONDS) :</span><br><span class=\"line\">                   workQueue.take();</span><br><span class=\"line\">               <span class=\"keyword\">if</span> (r != <span class=\"keyword\">null</span>)</span><br><span class=\"line\">             <span class=\"keyword\">return</span> r;          </span><br><span class=\"line\">       &#125;</span><br></pre></td></tr></table></figure>\n<p>死循环从workQueue取Runnable任务返回</p>\n<h4 id=\"threadpoolexecutor-ctl字段分析\">ThreadPoolExecutor ctl字段分析</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> COUNT_BITS = Integer.SIZE - <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> CAPACITY   = (<span class=\"number\">1</span> &lt;&lt; COUNT_BITS) - <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// runState is stored in the high-order bits</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> RUNNING    = -<span class=\"number\">1</span> &lt;&lt; COUNT_BITS;</span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> SHUTDOWN   =  <span class=\"number\">0</span> &lt;&lt; COUNT_BITS;</span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> STOP       =  <span class=\"number\">1</span> &lt;&lt; COUNT_BITS;</span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> TIDYING    =  <span class=\"number\">2</span> &lt;&lt; COUNT_BITS;</span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> TERMINATED =  <span class=\"number\">3</span> &lt;&lt; COUNT_BITS;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">runStateOf</span><span class=\"params\">(<span class=\"keyword\">int</span> c)</span>     </span>&#123; <span class=\"keyword\">return</span> c &amp; ~CAPACITY; &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">workerCountOf</span><span class=\"params\">(<span class=\"keyword\">int</span> c)</span>  </span>&#123; <span class=\"keyword\">return</span> c &amp; CAPACITY; &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">ctlOf</span><span class=\"params\">(<span class=\"keyword\">int</span> rs, <span class=\"keyword\">int</span> wc)</span> </span>&#123; <span class=\"keyword\">return</span> rs | wc; &#125;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>线程状态</th>\n<th>----</th>\n<th>----</th>\n<th>----</th>\n<th>----</th>\n<th>----</th>\n<th>----</th>\n<th>----</th>\n<th>----</th>\n<th>十进制数值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>RUNNING</strong></td>\n<td>1110</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>-536870912</td>\n</tr>\n<tr>\n<td><strong>SHUTDOWN</strong></td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0</td>\n</tr>\n<tr>\n<td><strong>STOP</strong></td>\n<td>0010</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>536870912</td>\n</tr>\n<tr>\n<td><strong>TIDYING</strong></td>\n<td>0100</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>1073741824</td>\n</tr>\n<tr>\n<td><strong>TERMINATED</strong></td>\n<td>0110</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>1610612736</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>----</th>\n<th>----</th>\n<th>----</th>\n<th>----</th>\n<th>----</th>\n<th>----</th>\n<th>----</th>\n<th>----</th>\n<th>十进制数值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>CAPACITY</strong></td>\n<td>0001</td>\n<td>1111</td>\n<td>1111</td>\n<td>1111</td>\n<td>1111</td>\n<td>1111</td>\n<td>1111</td>\n<td>1111</td>\n<td>536870911</td>\n</tr>\n<tr>\n<td><strong>~CAPACITY</strong></td>\n<td>1110</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>-536870912</td>\n</tr>\n</tbody>\n</table>\n<p>由此二进制结果 分析</p>\n<blockquote>\n<p>runStateOf() c &amp; ~CAPACITY</p>\n</blockquote>\n<p>相当于就是取前4位的值</p>\n<blockquote>\n<p>workerCountOf() c &amp; CAPACITY</p>\n</blockquote>\n<p>相当就是取后面的值</p>\n<p>ctl一个int型4个字节 4*8=32 位 里面存了两部分的值<br>\n前面4位存的是线程的5个状态,后面28位存的工作线程池的数量</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> c = ctl.get();</span><br><span class=\"line\"><span class=\"keyword\">int</span> rs = runStateOf(c);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (rs &gt;= SHUTDOWN &amp;&amp;! (rs == SHUTDOWN &amp;&amp;firstTask == <span class=\"keyword\">null</span> &amp;&amp;! workQueue.isEmpty()));</span><br></pre></td></tr></table></figure>\n<p>这种<code>rs &gt;= SHUTDOWN</code> 相当<em>SHUTDOWN</em>,<em>STOP</em>,<em>TIDYING</em>,<em>TERMINATED</em>这些字段是符合状态的。</p>\n<br>","site":{"data":{}},"excerpt":"<h3>ThreadPoolExecutor 白话概念</h3>\n<p><strong>线程池里面有一个集合里面放的<code>Worker</code>对象 集合大小对应着核心线程数</strong></p>\n<ol>\n<li>如果工作线程数量小于核心线程数</li>\n<li>会创建任务放进集合,之后启动<code>Worker</code>线程</li>\n<li>工作线程数不小于核心线程数,往队列里面放任务</li>\n<li><code>Worker</code>线程启动之后,<code>worker</code>线程会调<code>runWorker()</code>方法</li>\n<li>它会一直循环从队列里面取任务。然后调用它的<code>Run</code>方法取执行它。</li>\n</ol>","more":"<h4>线程池ThreadPoolExecutor分析</h4>\n<h5>一、首先看<code>ThreadPoolExecutor#execute(Runnable)</code>提交任务方法</h5>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> c = ctl.get();</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (workerCountOf(c) &lt; corePoolSize) &#123;</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (addWorker(command, <span class=\"keyword\">true</span>))</span><br><span class=\"line\">               <span class=\"keyword\">return</span>;</span><br><span class=\"line\">           c = ctl.get();</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (isRunning(c) &amp;&amp; workQueue.offer(command)) &#123;</span><br><span class=\"line\">           <span class=\"keyword\">int</span> recheck = ctl.get();</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (! isRunning(recheck) &amp;&amp; remove(command))</span><br><span class=\"line\">               reject(command);</span><br><span class=\"line\">           <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (workerCountOf(recheck) == <span class=\"number\">0</span>)</span><br><span class=\"line\">               addWorker(<span class=\"keyword\">null</span>, <span class=\"keyword\">false</span>);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (!addWorker(command, <span class=\"keyword\">false</span>))</span><br><span class=\"line\">           reject(command);</span><br></pre></td></tr></table></figure>\n<ol>\n<li>判断超过核心线程数没 没超过addWorker (Worker对象也很关键)</li>\n<li>创建任务或者workQuery.offer()队列里存放任务</li>\n<li>判断超出限制拒绝任务</li>\n</ol>\n<h5>二、<code>ThreadPoolExecutor#addWorker(Runnable firstTask, boolean core)</code>添加工作线程方法</h5>\n<p>第1段 判断</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">retry:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (;;) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> c = ctl.get();</span><br><span class=\"line\">            <span class=\"keyword\">int</span> rs = runStateOf(c);</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (;;) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> wc = workerCountOf(c);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (wc &gt;= CAPACITY ||</span><br><span class=\"line\">                    wc &gt;= (core ? corePoolSize : maximumPoolSize))</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (compareAndIncrementWorkerCount(c))</span><br><span class=\"line\">                    <span class=\"keyword\">break</span> retry;</span><br><span class=\"line\">                c = ctl.get();  <span class=\"comment\">// Re-read ctl</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (runStateOf(c) != rs)</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span> retry;      </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n<p>这段代码主要是为了判断当前线程池状态和限制数量，不正确进行重试，略过compareAndIncrementWorkerCount成功跳出最外层循环往下走。<br>\n第2段 才是这个方法的核心部分</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">boolean</span> workerStarted = <span class=\"keyword\">false</span>;</span><br><span class=\"line\"><span class=\"keyword\">boolean</span> workerAdded = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">Worker w = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">final</span> ReentrantLock mainLock = <span class=\"keyword\">this</span>.mainLock;</span><br><span class=\"line\">    w = <span class=\"keyword\">new</span> Worker(firstTask);</span><br><span class=\"line\">    <span class=\"keyword\">final</span> Thread t = w.thread;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (t != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">        mainLock.lock();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                workers.add(w);</span><br><span class=\"line\">                <span class=\"keyword\">int</span> s = workers.size();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (s &gt; largestPoolSize)</span><br><span class=\"line\">                    largestPoolSize = s;</span><br><span class=\"line\">                workerAdded = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            mainLock.unlock();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (workerAdded) &#123;</span><br><span class=\"line\">            t.start();      </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> workerStarted;</span><br></pre></td></tr></table></figure>\n<p>ThreadPoolExecutor里面有一个Set<worker> 集合。将要提交的任务Runnable放到Worker对象里 ，Worker对象本身是一个线程，然后启动它</worker></p>\n<h5>三、<code>Worker对象，本身也是一个对象</code></h5>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Worker</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractQueuedSynchronizer</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span></span><br><span class=\"line\"><span class=\"class\">        <span class=\"title\">final</span> <span class=\"title\">Thread</span> <span class=\"title\">thread</span></span>;</span><br><span class=\"line\">        Runnable firstTask;</span><br><span class=\"line\">        <span class=\"keyword\">volatile</span> <span class=\"keyword\">long</span> completedTasks;</span><br><span class=\"line\">        Worker(Runnable firstTask) &#123;</span><br><span class=\"line\">            setState(-<span class=\"number\">1</span>); <span class=\"comment\">// inhibit interrupts until runWorker</span></span><br><span class=\"line\">            <span class=\"keyword\">this</span>.firstTask = firstTask;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.thread = getThreadFactory().newThread(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            runWorker(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">final</span> <span class=\"keyword\">void</span> <span class=\"title\">runWorker</span><span class=\"params\">(Worker w)</span> </span>&#123;</span><br><span class=\"line\">            Thread wt = Thread.currentThread();</span><br><span class=\"line\">            Runnable task = w.firstTask;</span><br><span class=\"line\">            w.firstTask = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">            w.unlock(); <span class=\"comment\">// allow interrupts</span></span><br><span class=\"line\">            <span class=\"keyword\">boolean</span> completedAbruptly = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (task != <span class=\"keyword\">null</span> || (task = getTask()) != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                w.lock();</span><br><span class=\"line\">                    beforeExecute(wt, task);</span><br><span class=\"line\">                        task.run();</span><br><span class=\"line\">                    w.completedTasks++;</span><br><span class=\"line\">                    w.unlock();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>这段代码运行一个线程 死循环 <code>getTask()</code>取<code>Runnable</code>调用他的<code>Run()</code>方法 其中<code>getTask()</code>是关键;</p>\n<h5>四、ThreadPoolExecutor#getTask() 从队列取任务方法</h5>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">boolean</span> timedOut = <span class=\"keyword\">false</span>; <span class=\"comment\">// Did the last poll() time out?</span></span><br><span class=\"line\">       retry:</span><br><span class=\"line\">       <span class=\"keyword\">for</span> (;;) &#123;</span><br><span class=\"line\">           <span class=\"keyword\">int</span> c = ctl.get();</span><br><span class=\"line\">           <span class=\"keyword\">int</span> rs = runStateOf(c);  </span><br><span class=\"line\">               Runnable r = timed ?</span><br><span class=\"line\">                   workQueue.poll(keepAliveTime, TimeUnit.NANOSECONDS) :</span><br><span class=\"line\">                   workQueue.take();</span><br><span class=\"line\">               <span class=\"keyword\">if</span> (r != <span class=\"keyword\">null</span>)</span><br><span class=\"line\">             <span class=\"keyword\">return</span> r;          </span><br><span class=\"line\">       &#125;</span><br></pre></td></tr></table></figure>\n<p>死循环从workQueue取Runnable任务返回</p>\n<h4>ThreadPoolExecutor ctl字段分析</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> COUNT_BITS = Integer.SIZE - <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> CAPACITY   = (<span class=\"number\">1</span> &lt;&lt; COUNT_BITS) - <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// runState is stored in the high-order bits</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> RUNNING    = -<span class=\"number\">1</span> &lt;&lt; COUNT_BITS;</span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> SHUTDOWN   =  <span class=\"number\">0</span> &lt;&lt; COUNT_BITS;</span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> STOP       =  <span class=\"number\">1</span> &lt;&lt; COUNT_BITS;</span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> TIDYING    =  <span class=\"number\">2</span> &lt;&lt; COUNT_BITS;</span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> TERMINATED =  <span class=\"number\">3</span> &lt;&lt; COUNT_BITS;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">runStateOf</span><span class=\"params\">(<span class=\"keyword\">int</span> c)</span>     </span>&#123; <span class=\"keyword\">return</span> c &amp; ~CAPACITY; &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">workerCountOf</span><span class=\"params\">(<span class=\"keyword\">int</span> c)</span>  </span>&#123; <span class=\"keyword\">return</span> c &amp; CAPACITY; &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">ctlOf</span><span class=\"params\">(<span class=\"keyword\">int</span> rs, <span class=\"keyword\">int</span> wc)</span> </span>&#123; <span class=\"keyword\">return</span> rs | wc; &#125;</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th>线程状态</th>\n<th>----</th>\n<th>----</th>\n<th>----</th>\n<th>----</th>\n<th>----</th>\n<th>----</th>\n<th>----</th>\n<th>----</th>\n<th>十进制数值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>RUNNING</strong></td>\n<td>1110</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>-536870912</td>\n</tr>\n<tr>\n<td><strong>SHUTDOWN</strong></td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0</td>\n</tr>\n<tr>\n<td><strong>STOP</strong></td>\n<td>0010</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>536870912</td>\n</tr>\n<tr>\n<td><strong>TIDYING</strong></td>\n<td>0100</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>1073741824</td>\n</tr>\n<tr>\n<td><strong>TERMINATED</strong></td>\n<td>0110</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>1610612736</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>----</th>\n<th>----</th>\n<th>----</th>\n<th>----</th>\n<th>----</th>\n<th>----</th>\n<th>----</th>\n<th>----</th>\n<th>十进制数值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>CAPACITY</strong></td>\n<td>0001</td>\n<td>1111</td>\n<td>1111</td>\n<td>1111</td>\n<td>1111</td>\n<td>1111</td>\n<td>1111</td>\n<td>1111</td>\n<td>536870911</td>\n</tr>\n<tr>\n<td><strong>~CAPACITY</strong></td>\n<td>1110</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>0000</td>\n<td>-536870912</td>\n</tr>\n</tbody>\n</table>\n<p>由此二进制结果 分析</p>\n<blockquote>\n<p>runStateOf() c &amp; ~CAPACITY</p>\n</blockquote>\n<p>相当于就是取前4位的值</p>\n<blockquote>\n<p>workerCountOf() c &amp; CAPACITY</p>\n</blockquote>\n<p>相当就是取后面的值</p>\n<p>ctl一个int型4个字节 4*8=32 位 里面存了两部分的值<br>\n前面4位存的是线程的5个状态,后面28位存的工作线程池的数量</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> c = ctl.get();</span><br><span class=\"line\"><span class=\"keyword\">int</span> rs = runStateOf(c);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (rs &gt;= SHUTDOWN &amp;&amp;! (rs == SHUTDOWN &amp;&amp;firstTask == <span class=\"keyword\">null</span> &amp;&amp;! workQueue.isEmpty()));</span><br></pre></td></tr></table></figure>\n<p>这种<code>rs &gt;= SHUTDOWN</code> 相当<em>SHUTDOWN</em>,<em>STOP</em>,<em>TIDYING</em>,<em>TERMINATED</em>这些字段是符合状态的。</p>\n<br>"},{"title":"实用小工具网站介绍","date":"2018-10-30T09:18:03.000Z","_content":"一、图床 简单就是美 \n [image.xia-fei.com](http://image.xia-fei.com) \n二、SQL解析\n [sql.xia-fei.com](http://sql.xia-fei.com) \n<!-- more -->\n#### 一、图床 简单就是美   \n   [image.xia-fei.com](http://image.xia-fei.com)  \n   **特点**：简洁,可直接截完图粘贴上传,一键复制Markdown语法\n![](https://xiafei-files.oss-cn-hangzhou.aliyuncs.com/1540891451185.png)\n\n<br>\n<br>\n\n#### 二、SQL解析    \n**功能:**      \n一、mybatis.log转成可执行的sql语句  \n二、sql建表语句 转成java对象  \n              \n   [sql.xia-fei.com](http://sql.xia-fei.com)  \n   \n   示例程序\n   ![](https://xiafei-files.oss-cn-hangzhou.aliyuncs.com/1540891754659.png)\n   sql建表语句转换结果\n   ![](https://xiafei-files.oss-cn-hangzhou.aliyuncs.com/1540891991034.png)\n   mybatis.log转换结果\n  ![](https://xiafei-files.oss-cn-hangzhou.aliyuncs.com/1540891950264.png)","source":"_posts/introduction.md","raw":"---\ntitle: 实用小工具网站介绍\ndate: 2018-10-30 17:18:03\ntags: \n---\n一、图床 简单就是美 \n [image.xia-fei.com](http://image.xia-fei.com) \n二、SQL解析\n [sql.xia-fei.com](http://sql.xia-fei.com) \n<!-- more -->\n#### 一、图床 简单就是美   \n   [image.xia-fei.com](http://image.xia-fei.com)  \n   **特点**：简洁,可直接截完图粘贴上传,一键复制Markdown语法\n![](https://xiafei-files.oss-cn-hangzhou.aliyuncs.com/1540891451185.png)\n\n<br>\n<br>\n\n#### 二、SQL解析    \n**功能:**      \n一、mybatis.log转成可执行的sql语句  \n二、sql建表语句 转成java对象  \n              \n   [sql.xia-fei.com](http://sql.xia-fei.com)  \n   \n   示例程序\n   ![](https://xiafei-files.oss-cn-hangzhou.aliyuncs.com/1540891754659.png)\n   sql建表语句转换结果\n   ![](https://xiafei-files.oss-cn-hangzhou.aliyuncs.com/1540891991034.png)\n   mybatis.log转换结果\n  ![](https://xiafei-files.oss-cn-hangzhou.aliyuncs.com/1540891950264.png)","slug":"introduction","published":1,"updated":"2019-06-17T02:25:53.746Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwzrk81a000h5gwvm17mjnxl","content":"<p>一、图床 简单就是美<br>\n<a href=\"http://image.xia-fei.com\" target=\"_blank\" rel=\"noopener\">image.xia-fei.com</a><br>\n二、SQL解析<br>\n<a href=\"http://sql.xia-fei.com\" target=\"_blank\" rel=\"noopener\">sql.xia-fei.com</a></p>\n<a id=\"more\"></a>\n<h4 id=\"一-图床-简单就是美\">一、图床 简单就是美</h4>\n<p><a href=\"http://image.xia-fei.com\" target=\"_blank\" rel=\"noopener\">image.xia-fei.com</a><br>\n<strong>特点</strong>：简洁,可直接截完图粘贴上传,一键复制Markdown语法<br>\n<img src=\"https://xiafei-files.oss-cn-hangzhou.aliyuncs.com/1540891451185.png\" alt=\"\"></p>\n<br>\n<br>\n<h4 id=\"二-sql解析\">二、SQL解析</h4>\n<p><strong>功能:</strong><br>\n一、mybatis.log转成可执行的sql语句<br>\n二、sql建表语句 转成java对象</p>\n<p><a href=\"http://sql.xia-fei.com\" target=\"_blank\" rel=\"noopener\">sql.xia-fei.com</a></p>\n<p>示例程序<br>\n<img src=\"https://xiafei-files.oss-cn-hangzhou.aliyuncs.com/1540891754659.png\" alt=\"\"><br>\nsql建表语句转换结果<br>\n<img src=\"https://xiafei-files.oss-cn-hangzhou.aliyuncs.com/1540891991034.png\" alt=\"\"><br>\nmybatis.log转换结果<br>\n<img src=\"https://xiafei-files.oss-cn-hangzhou.aliyuncs.com/1540891950264.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p>一、图床 简单就是美<br>\n<a href=\"http://image.xia-fei.com\" target=\"_blank\" rel=\"noopener\">image.xia-fei.com</a><br>\n二、SQL解析<br>\n<a href=\"http://sql.xia-fei.com\" target=\"_blank\" rel=\"noopener\">sql.xia-fei.com</a></p>","more":"<h4>一、图床 简单就是美</h4>\n<p><a href=\"http://image.xia-fei.com\" target=\"_blank\" rel=\"noopener\">image.xia-fei.com</a><br>\n<strong>特点</strong>：简洁,可直接截完图粘贴上传,一键复制Markdown语法<br>\n<img src=\"https://xiafei-files.oss-cn-hangzhou.aliyuncs.com/1540891451185.png\" alt=\"\"></p>\n<br>\n<br>\n<h4>二、SQL解析</h4>\n<p><strong>功能:</strong><br>\n一、mybatis.log转成可执行的sql语句<br>\n二、sql建表语句 转成java对象</p>\n<p><a href=\"http://sql.xia-fei.com\" target=\"_blank\" rel=\"noopener\">sql.xia-fei.com</a></p>\n<p>示例程序<br>\n<img src=\"https://xiafei-files.oss-cn-hangzhou.aliyuncs.com/1540891754659.png\" alt=\"\"><br>\nsql建表语句转换结果<br>\n<img src=\"https://xiafei-files.oss-cn-hangzhou.aliyuncs.com/1540891991034.png\" alt=\"\"><br>\nmybatis.log转换结果<br>\n<img src=\"https://xiafei-files.oss-cn-hangzhou.aliyuncs.com/1540891950264.png\" alt=\"\"></p>"},{"title":"YUM包管理","date":"2018-12-20T07:32:11.000Z","_content":"### rpm包\nrpm是由红帽公司开发的软件包管理方式，使用rpm我们可以方便的进行软件的安装、查询、卸载、升级等工作。但是rpm软件包之间的依赖性问题往往会很繁琐,尤其是软件由多个rpm包组成时。\n\n\n## rpm库的地址  \n配置在\n`/etc/yum.repos.d/*`\n下面各个个文件中\n<!-- more -->\n```\n[nginx]\nname=nginx repo\nbaseurl=https://nginx.org/packages/mainline/centos/7/$basearch/\ngpgcheck=0\nenabled=1\n```\n\n** /etc/yum.repos.d/ **修改完仓库之后要清除下缓存才能搜索的到\n`yum makecache`\n\nyum 的repo 配置文件中可用的变量：\n$releasever:当前OS的发行版的主版本号$arch: 平台，i386,i486,i586,x86_64等\n$basearch ：基础平台；i386, x86_64\n\n查看本机yum仓库\n`yum repolist all`  \n去掉`all` 就是查看已启用的文件服务器\n\n\n`baseurl`就是存放**.rpm**文件的服务器  \n可以打开nginx rpm包服务器看下  \n[https://nginx.org/packages/mainline/centos/7/](https://nginx.org/packages/mainline/centos/7/)\n\nyum search 其实就是去仓库地址扫描所有rpm文件\n\n### rpm\n\n```\n[root@izwz92672j5u4uc9wvpopgz rpm]# rpm -qi nginx\nName        : nginx\nEpoch       : 1\nVersion     : 1.15.5\nRelease     : 1.el7_4.ngx\nArchitecture: x86_64\nInstall Date: Thu 25 Oct 2018 09:45:45 AM CST\nGroup       : System Environment/Daemons\nSize        : 2786120\nLicense     : 2-clause BSD-like license\nSignature   : RSA/SHA1, Tue 02 Oct 2018 11:48:24 PM CST, Key ID abf5bd827bd9bf62\nSource RPM  : nginx-1.15.5-1.el7_4.ngx.src.rpm\nBuild Date  : Tue 02 Oct 2018 11:27:21 PM CST\nBuild Host  : centos74-amd64-builder-builder.gnt.nginx.com\nRelocations : (not relocatable)\nVendor      : Nginx, Inc.\nURL         : http://nginx.org/\nSummary     : High performance web server\nDescription :\n```\n** 其中第一行**  \n**name就是软件名，给yum search 时匹配的名字**\n\n\n\n1.我的系统中安装了那些rpm软件包\n>rpm -qa 列出所有安装过的包\n\n2、如何获得某个软件包的文件全名。\n>rpm -q mysql\n\n3.查询rpm包详细信息\n>rpm -qi nginx\n\n4、一个rpm包中的文件安装到那里去了？\n>rpm -ql 包名\n\n5、查看包依赖\n>rpm -qpR file.rpm　　　　　　　＃[查看包]依赖关系\n\n其它命令\n```\nrpm 执行安装包\n二进制包（Binary）以及源代码包（Source）两种。二进制包可以直接安装在计算机中，而源代码包将会由 RPM自动编译、安装。源代码包经常以src.rpm作为后缀名。\n常用命令组合：\n－ivh：安装显示安装进度--install--verbose--hash\n－Uvh：升级软件包--Update；\n－qpl： 列出RPM软件包内的文件信息[Query Package list]；\n－qpi：列出RPM软件包的描述信息[Query Package install package(s)]；\n－qf：查找指定文件属于哪个RPM软件包[Query File]；\n－Va：校验所有的 RPM软件包，查找丢失的文件[View Lost]；\n－e：删除包\nrpm -q samba //查询程序是否安装\nrpm -ivh /media/cdrom/RedHat/RPMS/samba-3.0.10-1.4E.i386.rpm //按路径安装并显示进度\nrpm -ivh --relocate /=/opt/gaim gaim-1.3.0-1.fc4.i386.rpm    //指定安装目录\nrpm -ivh --test gaim-1.3.0-1.fc4.i386.rpm　　　 //用来检查依赖关系；并不是真正的安装；\nrpm -Uvh --oldpackage gaim-1.3.0-1.fc4.i386.rpm //新版本降级为旧版本\nrpm -qa | grep httpd　　　　　 ＃[搜索指定rpm包是否安装]--all搜索*httpd*\nrpm -ql httpd　　　　　　　　　＃[搜索rpm包]--list所有文件安装目录\nrpm -qpi Linux-1.4-6.i368.rpm　＃[查看rpm包]--query--package--install package信息\nrpm -qpf Linux-1.4-6.i368.rpm　＃[查看rpm包]--file\nrpm -qpR file.rpm　　　　　　　＃[查看包]依赖关系\nrpm2cpio file.rpm |cpio -div    ＃[抽出文件]\nrpm -ivh file.rpm 　＃[安装新的rpm]--install--verbose--hash\nrpm -ivh [url]http://mirrors.kernel.org/fedora/core/4/i386/os/Fedora/RPMS/gaim-1.3.0-1.fc4.i386.rpm[/url] \nrpm -Uvh file.rpm    ＃[升级一个rpm]--upgrade\nrpm -e file.rpm      ＃[删除一个rpm包]--erase\n常用参数：\nInstall/Upgrade/Erase options:\n-i, --install                     install package(s)\n-v, --verbose                     provide more detailed output\n-h, --hash                        print hash marks as package installs (good with -v)\n-e, --erase                       erase (uninstall) package\n-U, --upgrade=<packagefile>+      upgrade package(s)\n－-replacepkge                    无论软件包是否已被安装，都强行安装软件包\n--test                            安装测试，并不实际安装\n--nodeps                          忽略软件包的依赖关系强行安装\n--force                           忽略软件包及文件的冲突\nQuery options (with -q or --query):\n-a, --all                         query/verify all packages\n-p, --package                     query/verify a package file\n-l, --list                        list files in package\n-d, --docfiles                    list all documentation files\n-f, --file                        query/verify package(s) owning file\n```\n\n\n总结：\n一般安装软件其实需要rpm包就可以了  \n但是rpm依赖太多,依赖又需要个其它各仓库去下载。\nYUM就是来解决这个问题  \n`yum search nginx  `  \n`yum install nginx `","source":"_posts/Yum-package.md","raw":"---\ntitle: YUM包管理\ndate: 2018-12-20 15:32:11\ntags: Liunx\n---\n### rpm包\nrpm是由红帽公司开发的软件包管理方式，使用rpm我们可以方便的进行软件的安装、查询、卸载、升级等工作。但是rpm软件包之间的依赖性问题往往会很繁琐,尤其是软件由多个rpm包组成时。\n\n\n## rpm库的地址  \n配置在\n`/etc/yum.repos.d/*`\n下面各个个文件中\n<!-- more -->\n```\n[nginx]\nname=nginx repo\nbaseurl=https://nginx.org/packages/mainline/centos/7/$basearch/\ngpgcheck=0\nenabled=1\n```\n\n** /etc/yum.repos.d/ **修改完仓库之后要清除下缓存才能搜索的到\n`yum makecache`\n\nyum 的repo 配置文件中可用的变量：\n$releasever:当前OS的发行版的主版本号$arch: 平台，i386,i486,i586,x86_64等\n$basearch ：基础平台；i386, x86_64\n\n查看本机yum仓库\n`yum repolist all`  \n去掉`all` 就是查看已启用的文件服务器\n\n\n`baseurl`就是存放**.rpm**文件的服务器  \n可以打开nginx rpm包服务器看下  \n[https://nginx.org/packages/mainline/centos/7/](https://nginx.org/packages/mainline/centos/7/)\n\nyum search 其实就是去仓库地址扫描所有rpm文件\n\n### rpm\n\n```\n[root@izwz92672j5u4uc9wvpopgz rpm]# rpm -qi nginx\nName        : nginx\nEpoch       : 1\nVersion     : 1.15.5\nRelease     : 1.el7_4.ngx\nArchitecture: x86_64\nInstall Date: Thu 25 Oct 2018 09:45:45 AM CST\nGroup       : System Environment/Daemons\nSize        : 2786120\nLicense     : 2-clause BSD-like license\nSignature   : RSA/SHA1, Tue 02 Oct 2018 11:48:24 PM CST, Key ID abf5bd827bd9bf62\nSource RPM  : nginx-1.15.5-1.el7_4.ngx.src.rpm\nBuild Date  : Tue 02 Oct 2018 11:27:21 PM CST\nBuild Host  : centos74-amd64-builder-builder.gnt.nginx.com\nRelocations : (not relocatable)\nVendor      : Nginx, Inc.\nURL         : http://nginx.org/\nSummary     : High performance web server\nDescription :\n```\n** 其中第一行**  \n**name就是软件名，给yum search 时匹配的名字**\n\n\n\n1.我的系统中安装了那些rpm软件包\n>rpm -qa 列出所有安装过的包\n\n2、如何获得某个软件包的文件全名。\n>rpm -q mysql\n\n3.查询rpm包详细信息\n>rpm -qi nginx\n\n4、一个rpm包中的文件安装到那里去了？\n>rpm -ql 包名\n\n5、查看包依赖\n>rpm -qpR file.rpm　　　　　　　＃[查看包]依赖关系\n\n其它命令\n```\nrpm 执行安装包\n二进制包（Binary）以及源代码包（Source）两种。二进制包可以直接安装在计算机中，而源代码包将会由 RPM自动编译、安装。源代码包经常以src.rpm作为后缀名。\n常用命令组合：\n－ivh：安装显示安装进度--install--verbose--hash\n－Uvh：升级软件包--Update；\n－qpl： 列出RPM软件包内的文件信息[Query Package list]；\n－qpi：列出RPM软件包的描述信息[Query Package install package(s)]；\n－qf：查找指定文件属于哪个RPM软件包[Query File]；\n－Va：校验所有的 RPM软件包，查找丢失的文件[View Lost]；\n－e：删除包\nrpm -q samba //查询程序是否安装\nrpm -ivh /media/cdrom/RedHat/RPMS/samba-3.0.10-1.4E.i386.rpm //按路径安装并显示进度\nrpm -ivh --relocate /=/opt/gaim gaim-1.3.0-1.fc4.i386.rpm    //指定安装目录\nrpm -ivh --test gaim-1.3.0-1.fc4.i386.rpm　　　 //用来检查依赖关系；并不是真正的安装；\nrpm -Uvh --oldpackage gaim-1.3.0-1.fc4.i386.rpm //新版本降级为旧版本\nrpm -qa | grep httpd　　　　　 ＃[搜索指定rpm包是否安装]--all搜索*httpd*\nrpm -ql httpd　　　　　　　　　＃[搜索rpm包]--list所有文件安装目录\nrpm -qpi Linux-1.4-6.i368.rpm　＃[查看rpm包]--query--package--install package信息\nrpm -qpf Linux-1.4-6.i368.rpm　＃[查看rpm包]--file\nrpm -qpR file.rpm　　　　　　　＃[查看包]依赖关系\nrpm2cpio file.rpm |cpio -div    ＃[抽出文件]\nrpm -ivh file.rpm 　＃[安装新的rpm]--install--verbose--hash\nrpm -ivh [url]http://mirrors.kernel.org/fedora/core/4/i386/os/Fedora/RPMS/gaim-1.3.0-1.fc4.i386.rpm[/url] \nrpm -Uvh file.rpm    ＃[升级一个rpm]--upgrade\nrpm -e file.rpm      ＃[删除一个rpm包]--erase\n常用参数：\nInstall/Upgrade/Erase options:\n-i, --install                     install package(s)\n-v, --verbose                     provide more detailed output\n-h, --hash                        print hash marks as package installs (good with -v)\n-e, --erase                       erase (uninstall) package\n-U, --upgrade=<packagefile>+      upgrade package(s)\n－-replacepkge                    无论软件包是否已被安装，都强行安装软件包\n--test                            安装测试，并不实际安装\n--nodeps                          忽略软件包的依赖关系强行安装\n--force                           忽略软件包及文件的冲突\nQuery options (with -q or --query):\n-a, --all                         query/verify all packages\n-p, --package                     query/verify a package file\n-l, --list                        list files in package\n-d, --docfiles                    list all documentation files\n-f, --file                        query/verify package(s) owning file\n```\n\n\n总结：\n一般安装软件其实需要rpm包就可以了  \n但是rpm依赖太多,依赖又需要个其它各仓库去下载。\nYUM就是来解决这个问题  \n`yum search nginx  `  \n`yum install nginx `","slug":"Yum-package","published":1,"updated":"2019-06-17T02:25:53.746Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwzrk81b000j5gwvrzzh4zqx","content":"<h3 id=\"rpm包\">rpm包</h3>\n<p>rpm是由红帽公司开发的软件包管理方式，使用rpm我们可以方便的进行软件的安装、查询、卸载、升级等工作。但是rpm软件包之间的依赖性问题往往会很繁琐,尤其是软件由多个rpm包组成时。</p>\n<h2 id=\"rpm库的地址\">rpm库的地址</h2>\n<p>配置在<br>\n<code>/etc/yum.repos.d/*</code><br>\n下面各个个文件中</p>\n<a id=\"more\"></a>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[nginx]</span><br><span class=\"line\">name=nginx repo</span><br><span class=\"line\">baseurl=https://nginx.org/packages/mainline/centos/7/$basearch/</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\">enabled=1</span><br></pre></td></tr></table></figure>\n<p>** /etc/yum.repos.d/ **修改完仓库之后要清除下缓存才能搜索的到<br>\n<code>yum makecache</code></p>\n<p>yum 的repo 配置文件中可用的变量：<br>\n$releasever:当前OS的发行版的主版本号$arch: 平台，i386,i486,i586,x86_64等<br>\n$basearch ：基础平台；i386, x86_64</p>\n<p>查看本机yum仓库<br>\n<code>yum repolist all</code><br>\n去掉<code>all</code> 就是查看已启用的文件服务器</p>\n<p><code>baseurl</code>就是存放**.rpm**文件的服务器<br>\n可以打开nginx rpm包服务器看下<br>\n<a href=\"https://nginx.org/packages/mainline/centos/7/\" target=\"_blank\" rel=\"noopener\">https://nginx.org/packages/mainline/centos/7/</a></p>\n<p>yum search 其实就是去仓库地址扫描所有rpm文件</p>\n<h3 id=\"rpm\">rpm</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@izwz92672j5u4uc9wvpopgz rpm]# rpm -qi nginx</span><br><span class=\"line\">Name        : nginx</span><br><span class=\"line\">Epoch       : 1</span><br><span class=\"line\">Version     : 1.15.5</span><br><span class=\"line\">Release     : 1.el7_4.ngx</span><br><span class=\"line\">Architecture: x86_64</span><br><span class=\"line\">Install Date: Thu 25 Oct 2018 09:45:45 AM CST</span><br><span class=\"line\">Group       : System Environment/Daemons</span><br><span class=\"line\">Size        : 2786120</span><br><span class=\"line\">License     : 2-clause BSD-like license</span><br><span class=\"line\">Signature   : RSA/SHA1, Tue 02 Oct 2018 11:48:24 PM CST, Key ID abf5bd827bd9bf62</span><br><span class=\"line\">Source RPM  : nginx-1.15.5-1.el7_4.ngx.src.rpm</span><br><span class=\"line\">Build Date  : Tue 02 Oct 2018 11:27:21 PM CST</span><br><span class=\"line\">Build Host  : centos74-amd64-builder-builder.gnt.nginx.com</span><br><span class=\"line\">Relocations : (not relocatable)</span><br><span class=\"line\">Vendor      : Nginx, Inc.</span><br><span class=\"line\">URL         : http://nginx.org/</span><br><span class=\"line\">Summary     : High performance web server</span><br><span class=\"line\">Description :</span><br></pre></td></tr></table></figure>\n<p>** 其中第一行**<br>\n<strong>name就是软件名，给yum search 时匹配的名字</strong></p>\n<p>1.我的系统中安装了那些rpm软件包</p>\n<blockquote>\n<p>rpm -qa 列出所有安装过的包</p>\n</blockquote>\n<p>2、如何获得某个软件包的文件全名。</p>\n<blockquote>\n<p>rpm -q mysql</p>\n</blockquote>\n<p>3.查询rpm包详细信息</p>\n<blockquote>\n<p>rpm -qi nginx</p>\n</blockquote>\n<p>4、一个rpm包中的文件安装到那里去了？</p>\n<blockquote>\n<p>rpm -ql 包名</p>\n</blockquote>\n<p>5、查看包依赖</p>\n<blockquote>\n<p>rpm -qpR file.rpm　　　　　　　＃[查看包]依赖关系</p>\n</blockquote>\n<p>其它命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm 执行安装包</span><br><span class=\"line\">二进制包（Binary）以及源代码包（Source）两种。二进制包可以直接安装在计算机中，而源代码包将会由 RPM自动编译、安装。源代码包经常以src.rpm作为后缀名。</span><br><span class=\"line\">常用命令组合：</span><br><span class=\"line\">－ivh：安装显示安装进度--install--verbose--hash</span><br><span class=\"line\">－Uvh：升级软件包--Update；</span><br><span class=\"line\">－qpl： 列出RPM软件包内的文件信息[Query Package list]；</span><br><span class=\"line\">－qpi：列出RPM软件包的描述信息[Query Package install package(s)]；</span><br><span class=\"line\">－qf：查找指定文件属于哪个RPM软件包[Query File]；</span><br><span class=\"line\">－Va：校验所有的 RPM软件包，查找丢失的文件[View Lost]；</span><br><span class=\"line\">－e：删除包</span><br><span class=\"line\">rpm -q samba //查询程序是否安装</span><br><span class=\"line\">rpm -ivh /media/cdrom/RedHat/RPMS/samba-3.0.10-1.4E.i386.rpm //按路径安装并显示进度</span><br><span class=\"line\">rpm -ivh --relocate /=/opt/gaim gaim-1.3.0-1.fc4.i386.rpm    //指定安装目录</span><br><span class=\"line\">rpm -ivh --test gaim-1.3.0-1.fc4.i386.rpm　　　 //用来检查依赖关系；并不是真正的安装；</span><br><span class=\"line\">rpm -Uvh --oldpackage gaim-1.3.0-1.fc4.i386.rpm //新版本降级为旧版本</span><br><span class=\"line\">rpm -qa | grep httpd　　　　　 ＃[搜索指定rpm包是否安装]--all搜索*httpd*</span><br><span class=\"line\">rpm -ql httpd　　　　　　　　　＃[搜索rpm包]--list所有文件安装目录</span><br><span class=\"line\">rpm -qpi Linux-1.4-6.i368.rpm　＃[查看rpm包]--query--package--install package信息</span><br><span class=\"line\">rpm -qpf Linux-1.4-6.i368.rpm　＃[查看rpm包]--file</span><br><span class=\"line\">rpm -qpR file.rpm　　　　　　　＃[查看包]依赖关系</span><br><span class=\"line\">rpm2cpio file.rpm |cpio -div    ＃[抽出文件]</span><br><span class=\"line\">rpm -ivh file.rpm 　＃[安装新的rpm]--install--verbose--hash</span><br><span class=\"line\">rpm -ivh [url]http://mirrors.kernel.org/fedora/core/4/i386/os/Fedora/RPMS/gaim-1.3.0-1.fc4.i386.rpm[/url] </span><br><span class=\"line\">rpm -Uvh file.rpm    ＃[升级一个rpm]--upgrade</span><br><span class=\"line\">rpm -e file.rpm      ＃[删除一个rpm包]--erase</span><br><span class=\"line\">常用参数：</span><br><span class=\"line\">Install/Upgrade/Erase options:</span><br><span class=\"line\">-i, --install                     install package(s)</span><br><span class=\"line\">-v, --verbose                     provide more detailed output</span><br><span class=\"line\">-h, --hash                        print hash marks as package installs (good with -v)</span><br><span class=\"line\">-e, --erase                       erase (uninstall) package</span><br><span class=\"line\">-U, --upgrade=&lt;packagefile&gt;+      upgrade package(s)</span><br><span class=\"line\">－-replacepkge                    无论软件包是否已被安装，都强行安装软件包</span><br><span class=\"line\">--test                            安装测试，并不实际安装</span><br><span class=\"line\">--nodeps                          忽略软件包的依赖关系强行安装</span><br><span class=\"line\">--force                           忽略软件包及文件的冲突</span><br><span class=\"line\">Query options (with -q or --query):</span><br><span class=\"line\">-a, --all                         query/verify all packages</span><br><span class=\"line\">-p, --package                     query/verify a package file</span><br><span class=\"line\">-l, --list                        list files in package</span><br><span class=\"line\">-d, --docfiles                    list all documentation files</span><br><span class=\"line\">-f, --file                        query/verify package(s) owning file</span><br></pre></td></tr></table></figure>\n<p>总结：<br>\n一般安装软件其实需要rpm包就可以了<br>\n但是rpm依赖太多,依赖又需要个其它各仓库去下载。<br>\nYUM就是来解决这个问题<br>\n<code>yum search nginx</code><br>\n<code>yum install nginx</code></p>\n","site":{"data":{}},"excerpt":"<h3>rpm包</h3>\n<p>rpm是由红帽公司开发的软件包管理方式，使用rpm我们可以方便的进行软件的安装、查询、卸载、升级等工作。但是rpm软件包之间的依赖性问题往往会很繁琐,尤其是软件由多个rpm包组成时。</p>\n<h2>rpm库的地址</h2>\n<p>配置在<br>\n<code>/etc/yum.repos.d/*</code><br>\n下面各个个文件中</p>","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[nginx]</span><br><span class=\"line\">name=nginx repo</span><br><span class=\"line\">baseurl=https://nginx.org/packages/mainline/centos/7/$basearch/</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\">enabled=1</span><br></pre></td></tr></table></figure>\n<p>** /etc/yum.repos.d/ **修改完仓库之后要清除下缓存才能搜索的到<br>\n<code>yum makecache</code></p>\n<p>yum 的repo 配置文件中可用的变量：<br>\n$releasever:当前OS的发行版的主版本号$arch: 平台，i386,i486,i586,x86_64等<br>\n$basearch ：基础平台；i386, x86_64</p>\n<p>查看本机yum仓库<br>\n<code>yum repolist all</code><br>\n去掉<code>all</code> 就是查看已启用的文件服务器</p>\n<p><code>baseurl</code>就是存放**.rpm**文件的服务器<br>\n可以打开nginx rpm包服务器看下<br>\n<a href=\"https://nginx.org/packages/mainline/centos/7/\" target=\"_blank\" rel=\"noopener\">https://nginx.org/packages/mainline/centos/7/</a></p>\n<p>yum search 其实就是去仓库地址扫描所有rpm文件</p>\n<h3>rpm</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@izwz92672j5u4uc9wvpopgz rpm]# rpm -qi nginx</span><br><span class=\"line\">Name        : nginx</span><br><span class=\"line\">Epoch       : 1</span><br><span class=\"line\">Version     : 1.15.5</span><br><span class=\"line\">Release     : 1.el7_4.ngx</span><br><span class=\"line\">Architecture: x86_64</span><br><span class=\"line\">Install Date: Thu 25 Oct 2018 09:45:45 AM CST</span><br><span class=\"line\">Group       : System Environment/Daemons</span><br><span class=\"line\">Size        : 2786120</span><br><span class=\"line\">License     : 2-clause BSD-like license</span><br><span class=\"line\">Signature   : RSA/SHA1, Tue 02 Oct 2018 11:48:24 PM CST, Key ID abf5bd827bd9bf62</span><br><span class=\"line\">Source RPM  : nginx-1.15.5-1.el7_4.ngx.src.rpm</span><br><span class=\"line\">Build Date  : Tue 02 Oct 2018 11:27:21 PM CST</span><br><span class=\"line\">Build Host  : centos74-amd64-builder-builder.gnt.nginx.com</span><br><span class=\"line\">Relocations : (not relocatable)</span><br><span class=\"line\">Vendor      : Nginx, Inc.</span><br><span class=\"line\">URL         : http://nginx.org/</span><br><span class=\"line\">Summary     : High performance web server</span><br><span class=\"line\">Description :</span><br></pre></td></tr></table></figure>\n<p>** 其中第一行**<br>\n<strong>name就是软件名，给yum search 时匹配的名字</strong></p>\n<p>1.我的系统中安装了那些rpm软件包</p>\n<blockquote>\n<p>rpm -qa 列出所有安装过的包</p>\n</blockquote>\n<p>2、如何获得某个软件包的文件全名。</p>\n<blockquote>\n<p>rpm -q mysql</p>\n</blockquote>\n<p>3.查询rpm包详细信息</p>\n<blockquote>\n<p>rpm -qi nginx</p>\n</blockquote>\n<p>4、一个rpm包中的文件安装到那里去了？</p>\n<blockquote>\n<p>rpm -ql 包名</p>\n</blockquote>\n<p>5、查看包依赖</p>\n<blockquote>\n<p>rpm -qpR file.rpm　　　　　　　＃[查看包]依赖关系</p>\n</blockquote>\n<p>其它命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm 执行安装包</span><br><span class=\"line\">二进制包（Binary）以及源代码包（Source）两种。二进制包可以直接安装在计算机中，而源代码包将会由 RPM自动编译、安装。源代码包经常以src.rpm作为后缀名。</span><br><span class=\"line\">常用命令组合：</span><br><span class=\"line\">－ivh：安装显示安装进度--install--verbose--hash</span><br><span class=\"line\">－Uvh：升级软件包--Update；</span><br><span class=\"line\">－qpl： 列出RPM软件包内的文件信息[Query Package list]；</span><br><span class=\"line\">－qpi：列出RPM软件包的描述信息[Query Package install package(s)]；</span><br><span class=\"line\">－qf：查找指定文件属于哪个RPM软件包[Query File]；</span><br><span class=\"line\">－Va：校验所有的 RPM软件包，查找丢失的文件[View Lost]；</span><br><span class=\"line\">－e：删除包</span><br><span class=\"line\">rpm -q samba //查询程序是否安装</span><br><span class=\"line\">rpm -ivh /media/cdrom/RedHat/RPMS/samba-3.0.10-1.4E.i386.rpm //按路径安装并显示进度</span><br><span class=\"line\">rpm -ivh --relocate /=/opt/gaim gaim-1.3.0-1.fc4.i386.rpm    //指定安装目录</span><br><span class=\"line\">rpm -ivh --test gaim-1.3.0-1.fc4.i386.rpm　　　 //用来检查依赖关系；并不是真正的安装；</span><br><span class=\"line\">rpm -Uvh --oldpackage gaim-1.3.0-1.fc4.i386.rpm //新版本降级为旧版本</span><br><span class=\"line\">rpm -qa | grep httpd　　　　　 ＃[搜索指定rpm包是否安装]--all搜索*httpd*</span><br><span class=\"line\">rpm -ql httpd　　　　　　　　　＃[搜索rpm包]--list所有文件安装目录</span><br><span class=\"line\">rpm -qpi Linux-1.4-6.i368.rpm　＃[查看rpm包]--query--package--install package信息</span><br><span class=\"line\">rpm -qpf Linux-1.4-6.i368.rpm　＃[查看rpm包]--file</span><br><span class=\"line\">rpm -qpR file.rpm　　　　　　　＃[查看包]依赖关系</span><br><span class=\"line\">rpm2cpio file.rpm |cpio -div    ＃[抽出文件]</span><br><span class=\"line\">rpm -ivh file.rpm 　＃[安装新的rpm]--install--verbose--hash</span><br><span class=\"line\">rpm -ivh [url]http://mirrors.kernel.org/fedora/core/4/i386/os/Fedora/RPMS/gaim-1.3.0-1.fc4.i386.rpm[/url] </span><br><span class=\"line\">rpm -Uvh file.rpm    ＃[升级一个rpm]--upgrade</span><br><span class=\"line\">rpm -e file.rpm      ＃[删除一个rpm包]--erase</span><br><span class=\"line\">常用参数：</span><br><span class=\"line\">Install/Upgrade/Erase options:</span><br><span class=\"line\">-i, --install                     install package(s)</span><br><span class=\"line\">-v, --verbose                     provide more detailed output</span><br><span class=\"line\">-h, --hash                        print hash marks as package installs (good with -v)</span><br><span class=\"line\">-e, --erase                       erase (uninstall) package</span><br><span class=\"line\">-U, --upgrade=&lt;packagefile&gt;+      upgrade package(s)</span><br><span class=\"line\">－-replacepkge                    无论软件包是否已被安装，都强行安装软件包</span><br><span class=\"line\">--test                            安装测试，并不实际安装</span><br><span class=\"line\">--nodeps                          忽略软件包的依赖关系强行安装</span><br><span class=\"line\">--force                           忽略软件包及文件的冲突</span><br><span class=\"line\">Query options (with -q or --query):</span><br><span class=\"line\">-a, --all                         query/verify all packages</span><br><span class=\"line\">-p, --package                     query/verify a package file</span><br><span class=\"line\">-l, --list                        list files in package</span><br><span class=\"line\">-d, --docfiles                    list all documentation files</span><br><span class=\"line\">-f, --file                        query/verify package(s) owning file</span><br></pre></td></tr></table></figure>\n<p>总结：<br>\n一般安装软件其实需要rpm包就可以了<br>\n但是rpm依赖太多,依赖又需要个其它各仓库去下载。<br>\nYUM就是来解决这个问题<br>\n<code>yum search nginx</code><br>\n<code>yum install nginx</code></p>"},{"title":"springMVC请求流程","date":"2019-01-15T09:05:30.000Z","_content":"\n\n\n\nspringMVC简单来说就是一个Servlet  \n`org.springframework.web.servlet.DispatcherServlet`\n一切代码都是围绕`protected void doDispatch(HttpServletRequest request, HttpServletResponse response)`展开\n<!-- more -->\n\n## 代码机构\n- org.springframework.web.servlet.HandlerMapping\n    - org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping  **controller**\n        - org.springframework.web.method.HandlerMethod  **controller-method**\n    - org.springframework.web.servlet.handler.SimpleUrlHandlerMapping\n        - org.springframework.web.HttpRequestHandler\n            - org.springframework.web.servlet.resource.ResourceHttpRequestHandler \n\n- org.springframework.web.servlet.HandlerAdapter\n    - org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter\n    - org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter\n\n首先会有很多个`org.springframework.web.servlet.HandlerMapping`\n```java\npublic interface HandlerMapping {\n    HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;\n}\n```\n![](https://xiafei-web.oss-cn-hangzhou.aliyuncs.com/file-server/1547537892389.png)  \n**Controller**会抽象成一个`org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping`\n\n**Method**会抽象成`org.springframework.web.method.HandlerMethod`储存在\n`org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.MappingRegistry`\n\n\n静态资源\n```xml\n<mvc:resources mapping=\"/resources/**\" location=\"/public, classpath:/static/\" cache-period=\"31556926\" />\n```\n这种静态资源会抽象成`org.springframework.web.servlet.handler.SimpleUrlHandlerMapping`\n里面静态资源路劲抽象成\n`org.springframework.web.HttpRequestHandler`\n```java\npublic interface HttpRequestHandler {\n    void handleRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException;\n}\n```\n\n```java\npublic abstract class AbstractUrlHandlerMapping extends AbstractHandlerMapping implements MatchableHandlerMapping {\n\n    private Object rootHandler;\n\n    private boolean useTrailingSlashMatch = false;\n\n    private boolean lazyInitHandlers = false;\n\n    //存放着\n    private final Map<String, Object> handlerMap = new LinkedHashMap<String, Object>();\n    }\n```\n\n路径匹配  \n```java\nnew AntPathMatcher(String pattern, String path).match();\nnew UrlPathHelper().getLookupPathForRequest(HttpServletRequest request);\n```\n","source":"_posts/ko-spring-mvc.md","raw":"---\ntitle: springMVC请求流程\ndate: 2019-01-15 17:05:30\ntags: spring\n---\n\n\n\n\nspringMVC简单来说就是一个Servlet  \n`org.springframework.web.servlet.DispatcherServlet`\n一切代码都是围绕`protected void doDispatch(HttpServletRequest request, HttpServletResponse response)`展开\n<!-- more -->\n\n## 代码机构\n- org.springframework.web.servlet.HandlerMapping\n    - org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping  **controller**\n        - org.springframework.web.method.HandlerMethod  **controller-method**\n    - org.springframework.web.servlet.handler.SimpleUrlHandlerMapping\n        - org.springframework.web.HttpRequestHandler\n            - org.springframework.web.servlet.resource.ResourceHttpRequestHandler \n\n- org.springframework.web.servlet.HandlerAdapter\n    - org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter\n    - org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter\n\n首先会有很多个`org.springframework.web.servlet.HandlerMapping`\n```java\npublic interface HandlerMapping {\n    HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception;\n}\n```\n![](https://xiafei-web.oss-cn-hangzhou.aliyuncs.com/file-server/1547537892389.png)  \n**Controller**会抽象成一个`org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping`\n\n**Method**会抽象成`org.springframework.web.method.HandlerMethod`储存在\n`org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.MappingRegistry`\n\n\n静态资源\n```xml\n<mvc:resources mapping=\"/resources/**\" location=\"/public, classpath:/static/\" cache-period=\"31556926\" />\n```\n这种静态资源会抽象成`org.springframework.web.servlet.handler.SimpleUrlHandlerMapping`\n里面静态资源路劲抽象成\n`org.springframework.web.HttpRequestHandler`\n```java\npublic interface HttpRequestHandler {\n    void handleRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException;\n}\n```\n\n```java\npublic abstract class AbstractUrlHandlerMapping extends AbstractHandlerMapping implements MatchableHandlerMapping {\n\n    private Object rootHandler;\n\n    private boolean useTrailingSlashMatch = false;\n\n    private boolean lazyInitHandlers = false;\n\n    //存放着\n    private final Map<String, Object> handlerMap = new LinkedHashMap<String, Object>();\n    }\n```\n\n路径匹配  \n```java\nnew AntPathMatcher(String pattern, String path).match();\nnew UrlPathHelper().getLookupPathForRequest(HttpServletRequest request);\n```\n","slug":"ko-spring-mvc","published":1,"updated":"2019-06-17T02:25:53.746Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwzrk81c000l5gwvn1xo7zw8","content":"<p>springMVC简单来说就是一个Servlet<br>\n<code>org.springframework.web.servlet.DispatcherServlet</code><br>\n一切代码都是围绕<code>protected void doDispatch(HttpServletRequest request, HttpServletResponse response)</code>展开</p>\n<a id=\"more\"></a>\n<h2 id=\"代码机构\">代码机构</h2>\n<ul>\n<li>\n<p>org.springframework.web.servlet.HandlerMapping</p>\n<ul>\n<li>org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping  <strong>controller</strong>\n<ul>\n<li>org.springframework.web.method.HandlerMethod  <strong>controller-method</strong></li>\n</ul>\n</li>\n<li>org.springframework.web.servlet.handler.SimpleUrlHandlerMapping\n<ul>\n<li>org.springframework.web.HttpRequestHandler\n<ul>\n<li>org.springframework.web.servlet.resource.ResourceHttpRequestHandler</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>org.springframework.web.servlet.HandlerAdapter</p>\n<ul>\n<li>org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter</li>\n<li>org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter</li>\n</ul>\n</li>\n</ul>\n<p>首先会有很多个<code>org.springframework.web.servlet.HandlerMapping</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">HandlerMapping</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\">HandlerExecutionChain <span class=\"title\">getHandler</span><span class=\"params\">(HttpServletRequest request)</span> <span class=\"keyword\">throws</span> Exception</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://xiafei-web.oss-cn-hangzhou.aliyuncs.com/file-server/1547537892389.png\" alt=\"\"><br>\n<strong>Controller</strong>会抽象成一个<code>org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping</code></p>\n<p><strong>Method</strong>会抽象成<code>org.springframework.web.method.HandlerMethod</code>储存在<br>\n<code>org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.MappingRegistry</code></p>\n<p>静态资源</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mvc:resources</span> <span class=\"attr\">mapping</span>=<span class=\"string\">\"/resources/**\"</span> <span class=\"attr\">location</span>=<span class=\"string\">\"/public, classpath:/static/\"</span> <span class=\"attr\">cache-period</span>=<span class=\"string\">\"31556926\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这种静态资源会抽象成<code>org.springframework.web.servlet.handler.SimpleUrlHandlerMapping</code><br>\n里面静态资源路劲抽象成<br>\n<code>org.springframework.web.HttpRequestHandler</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">HttpRequestHandler</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">handleRequest</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AbstractUrlHandlerMapping</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractHandlerMapping</span> <span class=\"keyword\">implements</span> <span class=\"title\">MatchableHandlerMapping</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Object rootHandler;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> useTrailingSlashMatch = <span class=\"keyword\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> lazyInitHandlers = <span class=\"keyword\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//存放着</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Map&lt;String, Object&gt; handlerMap = <span class=\"keyword\">new</span> LinkedHashMap&lt;String, Object&gt;();</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>路径匹配</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> AntPathMatcher(String pattern, String path).match();</span><br><span class=\"line\"><span class=\"keyword\">new</span> UrlPathHelper().getLookupPathForRequest(HttpServletRequest request);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>springMVC简单来说就是一个Servlet<br>\n<code>org.springframework.web.servlet.DispatcherServlet</code><br>\n一切代码都是围绕<code>protected void doDispatch(HttpServletRequest request, HttpServletResponse response)</code>展开</p>","more":"<h2>代码机构</h2>\n<ul>\n<li>\n<p>org.springframework.web.servlet.HandlerMapping</p>\n<ul>\n<li>org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping  <strong>controller</strong>\n<ul>\n<li>org.springframework.web.method.HandlerMethod  <strong>controller-method</strong></li>\n</ul>\n</li>\n<li>org.springframework.web.servlet.handler.SimpleUrlHandlerMapping\n<ul>\n<li>org.springframework.web.HttpRequestHandler\n<ul>\n<li>org.springframework.web.servlet.resource.ResourceHttpRequestHandler</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>org.springframework.web.servlet.HandlerAdapter</p>\n<ul>\n<li>org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter</li>\n<li>org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter</li>\n</ul>\n</li>\n</ul>\n<p>首先会有很多个<code>org.springframework.web.servlet.HandlerMapping</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">HandlerMapping</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\">HandlerExecutionChain <span class=\"title\">getHandler</span><span class=\"params\">(HttpServletRequest request)</span> <span class=\"keyword\">throws</span> Exception</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://xiafei-web.oss-cn-hangzhou.aliyuncs.com/file-server/1547537892389.png\" alt=\"\"><br>\n<strong>Controller</strong>会抽象成一个<code>org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping</code></p>\n<p><strong>Method</strong>会抽象成<code>org.springframework.web.method.HandlerMethod</code>储存在<br>\n<code>org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.MappingRegistry</code></p>\n<p>静态资源</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mvc:resources</span> <span class=\"attr\">mapping</span>=<span class=\"string\">\"/resources/**\"</span> <span class=\"attr\">location</span>=<span class=\"string\">\"/public, classpath:/static/\"</span> <span class=\"attr\">cache-period</span>=<span class=\"string\">\"31556926\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这种静态资源会抽象成<code>org.springframework.web.servlet.handler.SimpleUrlHandlerMapping</code><br>\n里面静态资源路劲抽象成<br>\n<code>org.springframework.web.HttpRequestHandler</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">HttpRequestHandler</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">handleRequest</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AbstractUrlHandlerMapping</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractHandlerMapping</span> <span class=\"keyword\">implements</span> <span class=\"title\">MatchableHandlerMapping</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Object rootHandler;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> useTrailingSlashMatch = <span class=\"keyword\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> lazyInitHandlers = <span class=\"keyword\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//存放着</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Map&lt;String, Object&gt; handlerMap = <span class=\"keyword\">new</span> LinkedHashMap&lt;String, Object&gt;();</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>路径匹配</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> AntPathMatcher(String pattern, String path).match();</span><br><span class=\"line\"><span class=\"keyword\">new</span> UrlPathHelper().getLookupPathForRequest(HttpServletRequest request);</span><br></pre></td></tr></table></figure>"},{"title":"Mybatis日志还原SQL","date":"2018-07-20T09:27:51.000Z","_content":"## 介绍网站 \n[sql.xia-fei.com](http://sql.xia-fei.com)\n把mybatis 输出的sql日志还原成完整的sql语句\n# 背景\n 平时开发过成过程中吧。需要调式mybatis运行的SQL\n通长我们会这么做吧\n>1.首先我们会查看mybatis的log日志\n>2.将日志里面的? 手动替换成参数\n# LOG文本还原SQL\n<!-- more -->\n于是我开发了一个网站将Mybatis  log内容还原成sql\n例如日志内容\n```sql\n2018-07-20 17:32:00.544 superapiplus:WYKlypR6JN1tZndzTMI0yAde416673 DEBUG batchInsert -\n\t\t\t\t==>  Preparing: insert into sh_push_code (id, user_id, open_id, form_id, form_id_status, generate_time, create_time, update_time, create_person, update_person) values (?, ?, ?, ?, ?, ?, now(), now(), 'system', 'system') \n2018-07-20 17:32:00.544 superapiplus:WYKlypR6JN1tZndzTMI0yAde416673 DEBUG batchInsert -\n\t\t\t\t==> Parameters: null, 122527041(Long), ouMUI0fPepwDr7YFVvtbONMi_nRk(String), 1532079119360(String), 1(Integer), 2018-07-20 17:32:00.543(Timestamp)\n2018-07-20 17:32:00.545 superapiplus:WYKlypR6JN1tZndzTMI0yAde416673 DEBUG batchInsert -\n\t\t\t\t<==    Updates: 1\n2018-07-20 17:32:00.723 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG selectRolesByStoreId -\n\t\t\t\t==>  Preparing: select id, store_id, role_code, app_template_id, create_person, create_time, update_person, update_time from sh_role_store where store_id = ? \n2018-07-20 17:32:00.724 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG selectRolesByStoreId -\n\t\t\t\t==> Parameters: 1617818(Integer)\n2018-07-20 17:32:00.724 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG selectRolesByStoreId -\n\t\t\t\t<==      Total: 17\n2018-07-20 17:32:00.725 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG queryByUserIds -\n\t\t\t\t==>  Preparing: select id, member_id, role_id, star_level, store_id, is_enable, begin_time, end_time, create_person, (select min(d.create_time) from sh_employee_info_detail d WHERE del = 0 and d.member_id = k.member_id) as create_time, update_person, update_time from sh_employee_info_detail k where del = 0 and ? >=begin_time and end_time > ? and member_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? ) and store_id = ? \n2018-07-20 17:32:00.725 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG queryByUserIds -\n\t\t\t\t==> Parameters: 2018-07-20 17:32:00.725(Timestamp), 2018-07-20 17:32:00.725(Timestamp), 122207147(Integer), 122060800(Integer), 122053199(Integer), 122038827(Integer), 120143921(Integer), 121993631(Integer), 120139730(Integer), 120141267(Integer), 120141259(Integer), 1617818(Integer)\n2018-07-20 17:32:00.727 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG queryByUserIds -\n\t\t\t\t<==      Total: 9\n2018-07-20 17:32:00.727 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG selectHaveEmployeeRole -\n\t\t\t\t==>  Preparing: select l.*, (select count(*) from sh_employee_info_detail k where k.role_id = s.id and ? >= k.begin_time and k.end_time > ?) as count, s.id as role_id from sh_role_list l join sh_role_store s on l.role_code = s.role_code join sh_employee_info_detail d on d.role_id = s.id where s.store_id = ? and d.del = 0 and ((? >= d.begin_time and d.end_time > ?) or ((? >= d.begin_time and d.end_time > ?)) ) GROUP BY l.role_code order by sort_by \n2018-07-20 17:32:00.728 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG selectHaveEmployeeRole -\n\t\t\t\t==> Parameters: 2018-07-01 00:00:00.0(Timestamp), 2018-07-01 00:00:00.0(Timestamp), 1617818(Integer), 2018-07-01 00:00:00.0(Timestamp), 2018-07-01 00:00:00.0(Timestamp), 2018-08-01 00:00:00.0(Timestamp), 2018-08-01 00:00:00.0(Timestamp)\n```\n我们可以`随意`复制一部分日志内容，粘贴到[sql.xia-fei.com](https://sql.xia-fei.com)\n它就会将日志内容转换成可运行的`SQL`\n\n页面结果如图\n![](https://xiafei-storage.oss-cn-beijing.aliyuncs.com/18-7-20/27203484.jpg)\n\n各位开发大神,有啥优化改善建议,欢迎在下方留言-,-","source":"_posts/mybatis-log-sql.md","raw":"---\ntitle: Mybatis日志还原SQL\ndate: 2018-07-20 17:27:51\ntags: Mybatis\n---\n## 介绍网站 \n[sql.xia-fei.com](http://sql.xia-fei.com)\n把mybatis 输出的sql日志还原成完整的sql语句\n# 背景\n 平时开发过成过程中吧。需要调式mybatis运行的SQL\n通长我们会这么做吧\n>1.首先我们会查看mybatis的log日志\n>2.将日志里面的? 手动替换成参数\n# LOG文本还原SQL\n<!-- more -->\n于是我开发了一个网站将Mybatis  log内容还原成sql\n例如日志内容\n```sql\n2018-07-20 17:32:00.544 superapiplus:WYKlypR6JN1tZndzTMI0yAde416673 DEBUG batchInsert -\n\t\t\t\t==>  Preparing: insert into sh_push_code (id, user_id, open_id, form_id, form_id_status, generate_time, create_time, update_time, create_person, update_person) values (?, ?, ?, ?, ?, ?, now(), now(), 'system', 'system') \n2018-07-20 17:32:00.544 superapiplus:WYKlypR6JN1tZndzTMI0yAde416673 DEBUG batchInsert -\n\t\t\t\t==> Parameters: null, 122527041(Long), ouMUI0fPepwDr7YFVvtbONMi_nRk(String), 1532079119360(String), 1(Integer), 2018-07-20 17:32:00.543(Timestamp)\n2018-07-20 17:32:00.545 superapiplus:WYKlypR6JN1tZndzTMI0yAde416673 DEBUG batchInsert -\n\t\t\t\t<==    Updates: 1\n2018-07-20 17:32:00.723 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG selectRolesByStoreId -\n\t\t\t\t==>  Preparing: select id, store_id, role_code, app_template_id, create_person, create_time, update_person, update_time from sh_role_store where store_id = ? \n2018-07-20 17:32:00.724 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG selectRolesByStoreId -\n\t\t\t\t==> Parameters: 1617818(Integer)\n2018-07-20 17:32:00.724 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG selectRolesByStoreId -\n\t\t\t\t<==      Total: 17\n2018-07-20 17:32:00.725 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG queryByUserIds -\n\t\t\t\t==>  Preparing: select id, member_id, role_id, star_level, store_id, is_enable, begin_time, end_time, create_person, (select min(d.create_time) from sh_employee_info_detail d WHERE del = 0 and d.member_id = k.member_id) as create_time, update_person, update_time from sh_employee_info_detail k where del = 0 and ? >=begin_time and end_time > ? and member_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? ) and store_id = ? \n2018-07-20 17:32:00.725 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG queryByUserIds -\n\t\t\t\t==> Parameters: 2018-07-20 17:32:00.725(Timestamp), 2018-07-20 17:32:00.725(Timestamp), 122207147(Integer), 122060800(Integer), 122053199(Integer), 122038827(Integer), 120143921(Integer), 121993631(Integer), 120139730(Integer), 120141267(Integer), 120141259(Integer), 1617818(Integer)\n2018-07-20 17:32:00.727 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG queryByUserIds -\n\t\t\t\t<==      Total: 9\n2018-07-20 17:32:00.727 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG selectHaveEmployeeRole -\n\t\t\t\t==>  Preparing: select l.*, (select count(*) from sh_employee_info_detail k where k.role_id = s.id and ? >= k.begin_time and k.end_time > ?) as count, s.id as role_id from sh_role_list l join sh_role_store s on l.role_code = s.role_code join sh_employee_info_detail d on d.role_id = s.id where s.store_id = ? and d.del = 0 and ((? >= d.begin_time and d.end_time > ?) or ((? >= d.begin_time and d.end_time > ?)) ) GROUP BY l.role_code order by sort_by \n2018-07-20 17:32:00.728 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG selectHaveEmployeeRole -\n\t\t\t\t==> Parameters: 2018-07-01 00:00:00.0(Timestamp), 2018-07-01 00:00:00.0(Timestamp), 1617818(Integer), 2018-07-01 00:00:00.0(Timestamp), 2018-07-01 00:00:00.0(Timestamp), 2018-08-01 00:00:00.0(Timestamp), 2018-08-01 00:00:00.0(Timestamp)\n```\n我们可以`随意`复制一部分日志内容，粘贴到[sql.xia-fei.com](https://sql.xia-fei.com)\n它就会将日志内容转换成可运行的`SQL`\n\n页面结果如图\n![](https://xiafei-storage.oss-cn-beijing.aliyuncs.com/18-7-20/27203484.jpg)\n\n各位开发大神,有啥优化改善建议,欢迎在下方留言-,-","slug":"mybatis-log-sql","published":1,"updated":"2019-06-17T02:25:53.746Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwzrk81d000n5gwv80o6xe12","content":"<h2 id=\"介绍网站\">介绍网站</h2>\n<p><a href=\"http://sql.xia-fei.com\" target=\"_blank\" rel=\"noopener\">sql.xia-fei.com</a><br>\n把mybatis 输出的sql日志还原成完整的sql语句</p>\n<h1 id=\"背景\">背景</h1>\n<p>平时开发过成过程中吧。需要调式mybatis运行的SQL<br>\n通长我们会这么做吧</p>\n<blockquote>\n<p>1.首先我们会查看mybatis的log日志<br>\n2.将日志里面的? 手动替换成参数</p>\n</blockquote>\n<h1 id=\"log文本还原sql\">LOG文本还原SQL</h1>\n<a id=\"more\"></a>\n<p>于是我开发了一个网站将Mybatis  log内容还原成sql<br>\n例如日志内容</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2018-07-20 17:32:00.544 superapiplus:WYKlypR6JN1tZndzTMI0yAde416673 DEBUG batchInsert -</span><br><span class=\"line\">\t\t\t\t==&gt;  Preparing: insert into sh_push_code (id, user_id, open_id, form_id, form_id_status, generate_time, create_time, update_time, create_person, update_person) values (?, ?, ?, ?, ?, ?, now(), now(), 'system', 'system') </span><br><span class=\"line\">2018-07-20 17:32:00.544 superapiplus:WYKlypR6JN1tZndzTMI0yAde416673 DEBUG batchInsert -</span><br><span class=\"line\">\t\t\t\t==&gt; Parameters: null, 122527041(Long), ouMUI0fPepwDr7YFVvtbONMi_nRk(String), 1532079119360(String), 1(Integer), 2018-07-20 17:32:00.543(Timestamp)</span><br><span class=\"line\">2018-07-20 17:32:00.545 superapiplus:WYKlypR6JN1tZndzTMI0yAde416673 DEBUG batchInsert -</span><br><span class=\"line\">\t\t\t\t&lt;==    Updates: 1</span><br><span class=\"line\">2018-07-20 17:32:00.723 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG selectRolesByStoreId -</span><br><span class=\"line\">\t\t\t\t==&gt;  Preparing: select id, store_id, role_code, app_template_id, create_person, create_time, update_person, update_time from sh_role_store where store_id = ? </span><br><span class=\"line\">2018-07-20 17:32:00.724 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG selectRolesByStoreId -</span><br><span class=\"line\">\t\t\t\t==&gt; Parameters: 1617818(Integer)</span><br><span class=\"line\">2018-07-20 17:32:00.724 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG selectRolesByStoreId -</span><br><span class=\"line\">\t\t\t\t&lt;==      Total: 17</span><br><span class=\"line\">2018-07-20 17:32:00.725 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG queryByUserIds -</span><br><span class=\"line\">\t\t\t\t==&gt;  Preparing: select id, member_id, role_id, star_level, store_id, is_enable, begin_time, end_time, create_person, (select min(d.create_time) from sh_employee_info_detail d WHERE del = 0 and d.member_id = k.member_id) as create_time, update_person, update_time from sh_employee_info_detail k where del = 0 and ? &gt;=begin_time and end_time &gt; ? and member_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? ) and store_id = ? </span><br><span class=\"line\">2018-07-20 17:32:00.725 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG queryByUserIds -</span><br><span class=\"line\">\t\t\t\t==&gt; Parameters: 2018-07-20 17:32:00.725(Timestamp), 2018-07-20 17:32:00.725(Timestamp), 122207147(Integer), 122060800(Integer), 122053199(Integer), 122038827(Integer), 120143921(Integer), 121993631(Integer), 120139730(Integer), 120141267(Integer), 120141259(Integer), 1617818(Integer)</span><br><span class=\"line\">2018-07-20 17:32:00.727 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG queryByUserIds -</span><br><span class=\"line\">\t\t\t\t&lt;==      Total: 9</span><br><span class=\"line\">2018-07-20 17:32:00.727 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG selectHaveEmployeeRole -</span><br><span class=\"line\">\t\t\t\t==&gt;  Preparing: select l.*, (select count(*) from sh_employee_info_detail k where k.role_id = s.id and ? &gt;= k.begin_time and k.end_time &gt; ?) as count, s.id as role_id from sh_role_list l join sh_role_store s on l.role_code = s.role_code join sh_employee_info_detail d on d.role_id = s.id where s.store_id = ? and d.del = 0 and ((? &gt;= d.begin_time and d.end_time &gt; ?) or ((? &gt;= d.begin_time and d.end_time &gt; ?)) ) GROUP BY l.role_code order by sort_by </span><br><span class=\"line\">2018-07-20 17:32:00.728 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG selectHaveEmployeeRole -</span><br><span class=\"line\">\t\t\t\t==&gt; Parameters: 2018-07-01 00:00:00.0(Timestamp), 2018-07-01 00:00:00.0(Timestamp), 1617818(Integer), 2018-07-01 00:00:00.0(Timestamp), 2018-07-01 00:00:00.0(Timestamp), 2018-08-01 00:00:00.0(Timestamp), 2018-08-01 00:00:00.0(Timestamp)</span><br></pre></td></tr></table></figure>\n<p>我们可以<code>随意</code>复制一部分日志内容，粘贴到<a href=\"https://sql.xia-fei.com\" target=\"_blank\" rel=\"noopener\">sql.xia-fei.com</a><br>\n它就会将日志内容转换成可运行的<code>SQL</code></p>\n<p>页面结果如图<br>\n<img src=\"https://xiafei-storage.oss-cn-beijing.aliyuncs.com/18-7-20/27203484.jpg\" alt=\"\"></p>\n<p>各位开发大神,有啥优化改善建议,欢迎在下方留言-,-</p>\n","site":{"data":{}},"excerpt":"<h2>介绍网站</h2>\n<p><a href=\"http://sql.xia-fei.com\" target=\"_blank\" rel=\"noopener\">sql.xia-fei.com</a><br>\n把mybatis 输出的sql日志还原成完整的sql语句</p>\n<h1>背景</h1>\n<p>平时开发过成过程中吧。需要调式mybatis运行的SQL<br>\n通长我们会这么做吧</p>\n<blockquote>\n<p>1.首先我们会查看mybatis的log日志<br>\n2.将日志里面的? 手动替换成参数</p>\n</blockquote>\n<h1>LOG文本还原SQL</h1>","more":"<p>于是我开发了一个网站将Mybatis  log内容还原成sql<br>\n例如日志内容</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2018-07-20 17:32:00.544 superapiplus:WYKlypR6JN1tZndzTMI0yAde416673 DEBUG batchInsert -</span><br><span class=\"line\">\t\t\t\t==&gt;  Preparing: insert into sh_push_code (id, user_id, open_id, form_id, form_id_status, generate_time, create_time, update_time, create_person, update_person) values (?, ?, ?, ?, ?, ?, now(), now(), 'system', 'system') </span><br><span class=\"line\">2018-07-20 17:32:00.544 superapiplus:WYKlypR6JN1tZndzTMI0yAde416673 DEBUG batchInsert -</span><br><span class=\"line\">\t\t\t\t==&gt; Parameters: null, 122527041(Long), ouMUI0fPepwDr7YFVvtbONMi_nRk(String), 1532079119360(String), 1(Integer), 2018-07-20 17:32:00.543(Timestamp)</span><br><span class=\"line\">2018-07-20 17:32:00.545 superapiplus:WYKlypR6JN1tZndzTMI0yAde416673 DEBUG batchInsert -</span><br><span class=\"line\">\t\t\t\t&lt;==    Updates: 1</span><br><span class=\"line\">2018-07-20 17:32:00.723 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG selectRolesByStoreId -</span><br><span class=\"line\">\t\t\t\t==&gt;  Preparing: select id, store_id, role_code, app_template_id, create_person, create_time, update_person, update_time from sh_role_store where store_id = ? </span><br><span class=\"line\">2018-07-20 17:32:00.724 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG selectRolesByStoreId -</span><br><span class=\"line\">\t\t\t\t==&gt; Parameters: 1617818(Integer)</span><br><span class=\"line\">2018-07-20 17:32:00.724 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG selectRolesByStoreId -</span><br><span class=\"line\">\t\t\t\t&lt;==      Total: 17</span><br><span class=\"line\">2018-07-20 17:32:00.725 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG queryByUserIds -</span><br><span class=\"line\">\t\t\t\t==&gt;  Preparing: select id, member_id, role_id, star_level, store_id, is_enable, begin_time, end_time, create_person, (select min(d.create_time) from sh_employee_info_detail d WHERE del = 0 and d.member_id = k.member_id) as create_time, update_person, update_time from sh_employee_info_detail k where del = 0 and ? &gt;=begin_time and end_time &gt; ? and member_id in ( ? , ? , ? , ? , ? , ? , ? , ? , ? ) and store_id = ? </span><br><span class=\"line\">2018-07-20 17:32:00.725 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG queryByUserIds -</span><br><span class=\"line\">\t\t\t\t==&gt; Parameters: 2018-07-20 17:32:00.725(Timestamp), 2018-07-20 17:32:00.725(Timestamp), 122207147(Integer), 122060800(Integer), 122053199(Integer), 122038827(Integer), 120143921(Integer), 121993631(Integer), 120139730(Integer), 120141267(Integer), 120141259(Integer), 1617818(Integer)</span><br><span class=\"line\">2018-07-20 17:32:00.727 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG queryByUserIds -</span><br><span class=\"line\">\t\t\t\t&lt;==      Total: 9</span><br><span class=\"line\">2018-07-20 17:32:00.727 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG selectHaveEmployeeRole -</span><br><span class=\"line\">\t\t\t\t==&gt;  Preparing: select l.*, (select count(*) from sh_employee_info_detail k where k.role_id = s.id and ? &gt;= k.begin_time and k.end_time &gt; ?) as count, s.id as role_id from sh_role_list l join sh_role_store s on l.role_code = s.role_code join sh_employee_info_detail d on d.role_id = s.id where s.store_id = ? and d.del = 0 and ((? &gt;= d.begin_time and d.end_time &gt; ?) or ((? &gt;= d.begin_time and d.end_time &gt; ?)) ) GROUP BY l.role_code order by sort_by </span><br><span class=\"line\">2018-07-20 17:32:00.728 sh:6IQwHsHvIHcrOvL3inZFNQde72201 DEBUG selectHaveEmployeeRole -</span><br><span class=\"line\">\t\t\t\t==&gt; Parameters: 2018-07-01 00:00:00.0(Timestamp), 2018-07-01 00:00:00.0(Timestamp), 1617818(Integer), 2018-07-01 00:00:00.0(Timestamp), 2018-07-01 00:00:00.0(Timestamp), 2018-08-01 00:00:00.0(Timestamp), 2018-08-01 00:00:00.0(Timestamp)</span><br></pre></td></tr></table></figure>\n<p>我们可以<code>随意</code>复制一部分日志内容，粘贴到<a href=\"https://sql.xia-fei.com\" target=\"_blank\" rel=\"noopener\">sql.xia-fei.com</a><br>\n它就会将日志内容转换成可运行的<code>SQL</code></p>\n<p>页面结果如图<br>\n<img src=\"https://xiafei-storage.oss-cn-beijing.aliyuncs.com/18-7-20/27203484.jpg\" alt=\"\"></p>\n<p>各位开发大神,有啥优化改善建议,欢迎在下方留言-,-</p>"},{"title":"mongoDB部署笔记","date":"2018-12-19T09:51:52.000Z","_content":"## mongodb启动方式\n\n1  bin/mongod \n\n 默认数据存/data/db,  ctrl+c就退出\n\n2.bin/mongod  --fork  \n\n \n--syslog  默认日志位置  /var/log/messages\n\n--fork 以守护进程运行\n <!-- more -->\n\n## 关闭方式\n\n db.shutdownServer()\n\nkill -2 pid\n\n \n## 集群启动\n### 1.副本集部署\n\nhttps://docs.mongodb.com/v3.2/tutorial/deploy-replica-set/\n\n每台上启动\n\nmongod --replSet \"rs0\"\n第一台初始化集群\n\nrs.initiate() \n添加机器\n\nrs.add(\"mongodb1.example.net\")\n \n\n### 2.分片部署\n\nhttps://docs.mongodb.com/v3.2/tutorial/deploy-sharded-cluster-hashed-sharding/\n\n启动配置服务器\n\nmongod --configsvr --replSet <setname> --dbpath <path>\n\n启动分片服务器\n\nmongod --shardsvr --replSet <replSetname>\n \n\n启动mongos\n\nmongos --configdb <configReplSetName>/cfg1.example.net:27017,cfg2.example.net:27017\n添加分片\nsh.addShard( \"<replSetName>/s1-mongo1.example.net:27017\")\n \n\n连接到mongos ip\n\nsh.enableSharding(\"<database>\")\n \n\nhash分片\n\nsh.shardCollection(\"<database>.<collection>\", { <key> : \"hashed\" } )\n \n\nrange分片\n\nsh.shardCollection(\"<database>.<collection>\", { <key> : <direction> } )\neg: sh.shardCollection(\"records.people\",{zipcode:1})\n \n\n \n\n \n\n## 实战部署\n\n\n启动1台 configServer\n启动2台 sharedServer\n启动1台 mongos\n\nmkdir /data/configdb\nmkdir /data/shardingdb\n\n/data/mongo/bin/mongod --configsvr --dbpath /data/configdb --fork --syslog\n/data/mongo/bin/mongod --shardsvr --dbpath /data/shardingdb --fork --syslog\n/data/mongo/bin/mongos --configdb hmaster:28017\n\nconfigdb data \n/data/configdb port=27019\n\nsharding data\n/data/shardingdb port=27018\n\n\nmongos \n启用分片\nsh.enableSharding(\"<database>\")\n\n建立hashed索引\ndb.user.ensureIndex({_id:\"hashed\"})\n\n集合建立。hash分片\nsh.shardCollection(\"<database>.<collection>\", { _id : \"hashed\" } )\n\n","source":"_posts/mongodb-deploy.md","raw":"---\ntitle: mongoDB部署笔记\ndate: 2018-12-19 17:51:52\ntags: mongo\n---\n## mongodb启动方式\n\n1  bin/mongod \n\n 默认数据存/data/db,  ctrl+c就退出\n\n2.bin/mongod  --fork  \n\n \n--syslog  默认日志位置  /var/log/messages\n\n--fork 以守护进程运行\n <!-- more -->\n\n## 关闭方式\n\n db.shutdownServer()\n\nkill -2 pid\n\n \n## 集群启动\n### 1.副本集部署\n\nhttps://docs.mongodb.com/v3.2/tutorial/deploy-replica-set/\n\n每台上启动\n\nmongod --replSet \"rs0\"\n第一台初始化集群\n\nrs.initiate() \n添加机器\n\nrs.add(\"mongodb1.example.net\")\n \n\n### 2.分片部署\n\nhttps://docs.mongodb.com/v3.2/tutorial/deploy-sharded-cluster-hashed-sharding/\n\n启动配置服务器\n\nmongod --configsvr --replSet <setname> --dbpath <path>\n\n启动分片服务器\n\nmongod --shardsvr --replSet <replSetname>\n \n\n启动mongos\n\nmongos --configdb <configReplSetName>/cfg1.example.net:27017,cfg2.example.net:27017\n添加分片\nsh.addShard( \"<replSetName>/s1-mongo1.example.net:27017\")\n \n\n连接到mongos ip\n\nsh.enableSharding(\"<database>\")\n \n\nhash分片\n\nsh.shardCollection(\"<database>.<collection>\", { <key> : \"hashed\" } )\n \n\nrange分片\n\nsh.shardCollection(\"<database>.<collection>\", { <key> : <direction> } )\neg: sh.shardCollection(\"records.people\",{zipcode:1})\n \n\n \n\n \n\n## 实战部署\n\n\n启动1台 configServer\n启动2台 sharedServer\n启动1台 mongos\n\nmkdir /data/configdb\nmkdir /data/shardingdb\n\n/data/mongo/bin/mongod --configsvr --dbpath /data/configdb --fork --syslog\n/data/mongo/bin/mongod --shardsvr --dbpath /data/shardingdb --fork --syslog\n/data/mongo/bin/mongos --configdb hmaster:28017\n\nconfigdb data \n/data/configdb port=27019\n\nsharding data\n/data/shardingdb port=27018\n\n\nmongos \n启用分片\nsh.enableSharding(\"<database>\")\n\n建立hashed索引\ndb.user.ensureIndex({_id:\"hashed\"})\n\n集合建立。hash分片\nsh.shardCollection(\"<database>.<collection>\", { _id : \"hashed\" } )\n\n","slug":"mongodb-deploy","published":1,"updated":"2019-06-17T02:25:53.746Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwzrk81e000p5gwvml3iqw5j","content":"<h2 id=\"mongodb启动方式\">mongodb启动方式</h2>\n<p>1  bin/mongod</p>\n<p>默认数据存/data/db,  ctrl+c就退出</p>\n<p>2.bin/mongod  --fork</p>\n<p>–syslog  默认日志位置  /var/log/messages</p>\n<p>–fork 以守护进程运行</p>\n <a id=\"more\"></a>\n<h2 id=\"关闭方式\">关闭方式</h2>\n<p>db.shutdownServer()</p>\n<p>kill -2 pid</p>\n<h2 id=\"集群启动\">集群启动</h2>\n<h3 id=\"1副本集部署\">1.副本集部署</h3>\n<p><a href=\"https://docs.mongodb.com/v3.2/tutorial/deploy-replica-set/\" target=\"_blank\" rel=\"noopener\">https://docs.mongodb.com/v3.2/tutorial/deploy-replica-set/</a></p>\n<p>每台上启动</p>\n<p>mongod --replSet &quot;rs0&quot;<br>\n第一台初始化集群</p>\n<p>rs.initiate()<br>\n添加机器</p>\n<p>rs.add(“<a href=\"http://mongodb1.example.net\" target=\"_blank\" rel=\"noopener\">mongodb1.example.net</a>”)</p>\n<h3 id=\"2分片部署\">2.分片部署</h3>\n<p><a href=\"https://docs.mongodb.com/v3.2/tutorial/deploy-sharded-cluster-hashed-sharding/\" target=\"_blank\" rel=\"noopener\">https://docs.mongodb.com/v3.2/tutorial/deploy-sharded-cluster-hashed-sharding/</a></p>\n<p>启动配置服务器</p>\n<p>mongod --configsvr --replSet <setname> --dbpath <path></path></setname></p>\n<p>启动分片服务器</p>\n<p>mongod --shardsvr --replSet <replsetname></replsetname></p>\n<p>启动mongos</p>\n<p>mongos --configdb <configreplsetname>/cfg1.example.net:27017,<a href=\"http://cfg2.example.net:27017\" target=\"_blank\" rel=\"noopener\">cfg2.example.net:27017</a><br>\n添加分片<br>\nsh.addShard( “<replsetname>/s1-mongo1.example.net:27017”)</replsetname></configreplsetname></p>\n<p>连接到mongos ip</p>\n<p>sh.enableSharding(&quot;<database>&quot;)</database></p>\n<p>hash分片</p>\n<p>sh.shardCollection(&quot;<database>.<collection>&quot;, { <key> : “hashed” } )</key></collection></database></p>\n<p>range分片</p>\n<p>sh.shardCollection(&quot;<database>.<collection>&quot;, { <key> : <direction> } )<br>\neg: sh.shardCollection(“records.people”,{zipcode:1})</direction></key></collection></database></p>\n<h2 id=\"实战部署\">实战部署</h2>\n<p>启动1台 configServer<br>\n启动2台 sharedServer<br>\n启动1台 mongos</p>\n<p>mkdir /data/configdb<br>\nmkdir /data/shardingdb</p>\n<p>/data/mongo/bin/mongod --configsvr --dbpath /data/configdb --fork --syslog<br>\n/data/mongo/bin/mongod --shardsvr --dbpath /data/shardingdb --fork --syslog<br>\n/data/mongo/bin/mongos --configdb hmaster:28017</p>\n<p>configdb data<br>\n/data/configdb port=27019</p>\n<p>sharding data<br>\n/data/shardingdb port=27018</p>\n<p>mongos<br>\n启用分片<br>\nsh.enableSharding(&quot;<database>&quot;)</database></p>\n<p>建立hashed索引<br>\ndb.user.ensureIndex({_id:“hashed”})</p>\n<p>集合建立。hash分片<br>\nsh.shardCollection(&quot;<database>.<collection>&quot;, { _id : “hashed” } )</collection></database></p>\n","site":{"data":{}},"excerpt":"<h2>mongodb启动方式</h2>\n<p>1  bin/mongod</p>\n<p>默认数据存/data/db,  ctrl+c就退出</p>\n<p>2.bin/mongod  --fork</p>\n<p>–syslog  默认日志位置  /var/log/messages</p>\n<p>–fork 以守护进程运行</p>","more":"<h2>关闭方式</h2>\n<p>db.shutdownServer()</p>\n<p>kill -2 pid</p>\n<h2>集群启动</h2>\n<h3>1.副本集部署</h3>\n<p><a href=\"https://docs.mongodb.com/v3.2/tutorial/deploy-replica-set/\" target=\"_blank\" rel=\"noopener\">https://docs.mongodb.com/v3.2/tutorial/deploy-replica-set/</a></p>\n<p>每台上启动</p>\n<p>mongod --replSet &quot;rs0&quot;<br>\n第一台初始化集群</p>\n<p>rs.initiate()<br>\n添加机器</p>\n<p>rs.add(“<a href=\"http://mongodb1.example.net\" target=\"_blank\" rel=\"noopener\">mongodb1.example.net</a>”)</p>\n<h3>2.分片部署</h3>\n<p><a href=\"https://docs.mongodb.com/v3.2/tutorial/deploy-sharded-cluster-hashed-sharding/\" target=\"_blank\" rel=\"noopener\">https://docs.mongodb.com/v3.2/tutorial/deploy-sharded-cluster-hashed-sharding/</a></p>\n<p>启动配置服务器</p>\n<p>mongod --configsvr --replSet <setname> --dbpath <path></path></setname></p>\n<p>启动分片服务器</p>\n<p>mongod --shardsvr --replSet <replsetname></replsetname></p>\n<p>启动mongos</p>\n<p>mongos --configdb <configreplsetname>/cfg1.example.net:27017,<a href=\"http://cfg2.example.net:27017\" target=\"_blank\" rel=\"noopener\">cfg2.example.net:27017</a><br>\n添加分片<br>\nsh.addShard( “<replsetname>/s1-mongo1.example.net:27017”)</replsetname></configreplsetname></p>\n<p>连接到mongos ip</p>\n<p>sh.enableSharding(&quot;<database>&quot;)</database></p>\n<p>hash分片</p>\n<p>sh.shardCollection(&quot;<database>.<collection>&quot;, { <key> : “hashed” } )</key></collection></database></p>\n<p>range分片</p>\n<p>sh.shardCollection(&quot;<database>.<collection>&quot;, { <key> : <direction> } )<br>\neg: sh.shardCollection(“records.people”,{zipcode:1})</direction></key></collection></database></p>\n<h2>实战部署</h2>\n<p>启动1台 configServer<br>\n启动2台 sharedServer<br>\n启动1台 mongos</p>\n<p>mkdir /data/configdb<br>\nmkdir /data/shardingdb</p>\n<p>/data/mongo/bin/mongod --configsvr --dbpath /data/configdb --fork --syslog<br>\n/data/mongo/bin/mongod --shardsvr --dbpath /data/shardingdb --fork --syslog<br>\n/data/mongo/bin/mongos --configdb hmaster:28017</p>\n<p>configdb data<br>\n/data/configdb port=27019</p>\n<p>sharding data<br>\n/data/shardingdb port=27018</p>\n<p>mongos<br>\n启用分片<br>\nsh.enableSharding(&quot;<database>&quot;)</database></p>\n<p>建立hashed索引<br>\ndb.user.ensureIndex({_id:“hashed”})</p>\n<p>集合建立。hash分片<br>\nsh.shardCollection(&quot;<database>.<collection>&quot;, { _id : “hashed” } )</collection></database></p>"},{"title":"SpringMVC 配置html5 history模式","catalog":true,"date":"2019-02-18T03:39:03.000Z","subtitle":null,"header-img":null,"_content":"\n\n##### 最简单方式：\n配置404页面 \n```java\n   @Bean\n    public ErrorPageRegistrar errorPageRegistrar(){\n        return registry -> registry.addErrorPages(new ErrorPage(HttpStatus.NOT_FOUND, \"/index.html\"));\n    }\n```\n问题：\n1. 所有404都回定向到html 报错一些不存在的js，jpg文件，都返回index.html里面内容了\n2. html页面状态码是404 看起来很不和谐\n\n\n##### 分析问题\nspringMVC 请求请求顺序\n1. Controller\n2. static-resources 有/**兜底\n\n##### 解决一：(推荐)\n我们可以在Controller里面配置一个区别于接口的 路径 返回index.html文件\n例如\n```java\n@RequestMapping(\"/html/**\");\n```\n感觉对路径侵入有点大必须html开头\n\n换种匹配规则 所有 路径不带`.`的\n```java\n@RequestMapping(\"/**/{path:[^.]+}\");\n```\n\n升级写法,写一个HandlerMapping放在`Controller`后面\n```java\n@Component\npublic class VueSinglePage extends AbstractUrlHandlerMapping {\n    public VueSinglePage() {\n        HttpRequestHandler httpRequestHandler = (request, response) -> {\n            response.setContentType(MediaType.TEXT_HTML_VALUE);\n            FileCopyUtils.copy(Objects.requireNonNull(Thread.currentThread().getContextClassLoader().getResourceAsStream(\"static/index.html\")),\n                    response.getOutputStream());\n        };\n        registerHandler(\"/**/{path:[^.]+}\", httpRequestHandler);\n        registerHandler(\"/\", httpRequestHandler);\n    }\n\n    @Override\n    public int getOrder() {\n        return Ordered.LOWEST_PRECEDENCE - 1;\n    }\n}\n\n```\n\n##### 解决二\nstatic-resources 把/**兜底 关掉   \n写一个全匹配的HandlerMapping插入在12后面\n\n```properties\nspring.resources.add-mappings=false\n```\n\n```java\n\n@Bean\nHandlerMapping vueHandlerMapping() {\n    return new VueHandlerMapping();\n}\n\nclass VueHandlerMapping implements HandlerMapping, Ordered {\n    @Override\n    public HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {\n        return new HandlerExecutionChain(new HttpRequestHandler() {\n            @Override\n            public void handleRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n                response.setContentType(MediaType.TEXT_HTML_VALUE);\n                FileCopyUtils.copy(Thread.currentThread().getContextClassLoader().getResourceAsStream(\"public/dist/index.html\"),\n                        response.getOutputStream());\n            }\n        });\n    }\n\n    @Override\n    public int getOrder() {\n        return Ordered.LOWEST_PRECEDENCE;\n    }\n}\n```\n\n\n","source":"_posts/spring-mvc-vue.md","raw":"---\ntitle: SpringMVC 配置html5 history模式\ncatalog: true\ndate: 2019-02-18 11:39:03\nsubtitle:\nheader-img:\ntags: spring\n---\n\n\n##### 最简单方式：\n配置404页面 \n```java\n   @Bean\n    public ErrorPageRegistrar errorPageRegistrar(){\n        return registry -> registry.addErrorPages(new ErrorPage(HttpStatus.NOT_FOUND, \"/index.html\"));\n    }\n```\n问题：\n1. 所有404都回定向到html 报错一些不存在的js，jpg文件，都返回index.html里面内容了\n2. html页面状态码是404 看起来很不和谐\n\n\n##### 分析问题\nspringMVC 请求请求顺序\n1. Controller\n2. static-resources 有/**兜底\n\n##### 解决一：(推荐)\n我们可以在Controller里面配置一个区别于接口的 路径 返回index.html文件\n例如\n```java\n@RequestMapping(\"/html/**\");\n```\n感觉对路径侵入有点大必须html开头\n\n换种匹配规则 所有 路径不带`.`的\n```java\n@RequestMapping(\"/**/{path:[^.]+}\");\n```\n\n升级写法,写一个HandlerMapping放在`Controller`后面\n```java\n@Component\npublic class VueSinglePage extends AbstractUrlHandlerMapping {\n    public VueSinglePage() {\n        HttpRequestHandler httpRequestHandler = (request, response) -> {\n            response.setContentType(MediaType.TEXT_HTML_VALUE);\n            FileCopyUtils.copy(Objects.requireNonNull(Thread.currentThread().getContextClassLoader().getResourceAsStream(\"static/index.html\")),\n                    response.getOutputStream());\n        };\n        registerHandler(\"/**/{path:[^.]+}\", httpRequestHandler);\n        registerHandler(\"/\", httpRequestHandler);\n    }\n\n    @Override\n    public int getOrder() {\n        return Ordered.LOWEST_PRECEDENCE - 1;\n    }\n}\n\n```\n\n##### 解决二\nstatic-resources 把/**兜底 关掉   \n写一个全匹配的HandlerMapping插入在12后面\n\n```properties\nspring.resources.add-mappings=false\n```\n\n```java\n\n@Bean\nHandlerMapping vueHandlerMapping() {\n    return new VueHandlerMapping();\n}\n\nclass VueHandlerMapping implements HandlerMapping, Ordered {\n    @Override\n    public HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {\n        return new HandlerExecutionChain(new HttpRequestHandler() {\n            @Override\n            public void handleRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n                response.setContentType(MediaType.TEXT_HTML_VALUE);\n                FileCopyUtils.copy(Thread.currentThread().getContextClassLoader().getResourceAsStream(\"public/dist/index.html\"),\n                        response.getOutputStream());\n            }\n        });\n    }\n\n    @Override\n    public int getOrder() {\n        return Ordered.LOWEST_PRECEDENCE;\n    }\n}\n```\n\n\n","slug":"spring-mvc-vue","published":1,"updated":"2019-06-17T02:25:53.747Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwzrk81e000q5gwvubfaf6mh","content":"<h5 id=\"最简单方式\">最简单方式：</h5>\n<p>配置404页面</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> ErrorPageRegistrar <span class=\"title\">errorPageRegistrar</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> registry -&gt; registry.addErrorPages(<span class=\"keyword\">new</span> ErrorPage(HttpStatus.NOT_FOUND, <span class=\"string\">\"/index.html\"</span>));</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<p>问题：</p>\n<ol>\n<li>所有404都回定向到html 报错一些不存在的js，jpg文件，都返回index.html里面内容了</li>\n<li>html页面状态码是404 看起来很不和谐</li>\n</ol>\n<h5 id=\"分析问题\">分析问题</h5>\n<p>springMVC 请求请求顺序</p>\n<ol>\n<li>Controller</li>\n<li>static-resources 有/**兜底</li>\n</ol>\n<h5 id=\"解决一推荐\">解决一：(推荐)</h5>\n<p>我们可以在Controller里面配置一个区别于接口的 路径 返回index.html文件<br>\n例如</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/html/**\"</span>);</span><br></pre></td></tr></table></figure>\n<p>感觉对路径侵入有点大必须html开头</p>\n<p>换种匹配规则 所有 路径不带<code>.</code>的</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/**/&#123;path:[^.]+&#125;\"</span>);</span><br></pre></td></tr></table></figure>\n<p>升级写法,写一个HandlerMapping放在<code>Controller</code>后面</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">VueSinglePage</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractUrlHandlerMapping</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">VueSinglePage</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        HttpRequestHandler httpRequestHandler = (request, response) -&gt; &#123;</span><br><span class=\"line\">            response.setContentType(MediaType.TEXT_HTML_VALUE);</span><br><span class=\"line\">            FileCopyUtils.copy(Objects.requireNonNull(Thread.currentThread().getContextClassLoader().getResourceAsStream(<span class=\"string\">\"static/index.html\"</span>)),</span><br><span class=\"line\">                    response.getOutputStream());</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        registerHandler(<span class=\"string\">\"/**/&#123;path:[^.]+&#125;\"</span>, httpRequestHandler);</span><br><span class=\"line\">        registerHandler(<span class=\"string\">\"/\"</span>, httpRequestHandler);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getOrder</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Ordered.LOWEST_PRECEDENCE - <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"解决二\">解决二</h5>\n<p>static-resources 把/**兜底 关掉<br>\n写一个全匹配的HandlerMapping插入在12后面</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spring.resources.add-mappings=false</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"function\">HandlerMapping <span class=\"title\">vueHandlerMapping</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> VueHandlerMapping();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">VueHandlerMapping</span> <span class=\"keyword\">implements</span> <span class=\"title\">HandlerMapping</span>, <span class=\"title\">Ordered</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> HandlerExecutionChain <span class=\"title\">getHandler</span><span class=\"params\">(HttpServletRequest request)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> HandlerExecutionChain(<span class=\"keyword\">new</span> HttpRequestHandler() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">handleRequest</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">                response.setContentType(MediaType.TEXT_HTML_VALUE);</span><br><span class=\"line\">                FileCopyUtils.copy(Thread.currentThread().getContextClassLoader().getResourceAsStream(<span class=\"string\">\"public/dist/index.html\"</span>),</span><br><span class=\"line\">                        response.getOutputStream());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getOrder</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Ordered.LOWEST_PRECEDENCE;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h5>最简单方式：</h5>\n<p>配置404页面</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> ErrorPageRegistrar <span class=\"title\">errorPageRegistrar</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> registry -&gt; registry.addErrorPages(<span class=\"keyword\">new</span> ErrorPage(HttpStatus.NOT_FOUND, <span class=\"string\">\"/index.html\"</span>));</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<p>问题：</p>\n<ol>\n<li>所有404都回定向到html 报错一些不存在的js，jpg文件，都返回index.html里面内容了</li>\n<li>html页面状态码是404 看起来很不和谐</li>\n</ol>\n<h5>分析问题</h5>\n<p>springMVC 请求请求顺序</p>\n<ol>\n<li>Controller</li>\n<li>static-resources 有/**兜底</li>\n</ol>\n<h5>解决一：(推荐)</h5>\n<p>我们可以在Controller里面配置一个区别于接口的 路径 返回index.html文件<br>\n例如</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/html/**\"</span>);</span><br></pre></td></tr></table></figure>\n<p>感觉对路径侵入有点大必须html开头</p>\n<p>换种匹配规则 所有 路径不带<code>.</code>的</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/**/&#123;path:[^.]+&#125;\"</span>);</span><br></pre></td></tr></table></figure>\n<p>升级写法,写一个HandlerMapping放在<code>Controller</code>后面</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">VueSinglePage</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractUrlHandlerMapping</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">VueSinglePage</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        HttpRequestHandler httpRequestHandler = (request, response) -&gt; &#123;</span><br><span class=\"line\">            response.setContentType(MediaType.TEXT_HTML_VALUE);</span><br><span class=\"line\">            FileCopyUtils.copy(Objects.requireNonNull(Thread.currentThread().getContextClassLoader().getResourceAsStream(<span class=\"string\">\"static/index.html\"</span>)),</span><br><span class=\"line\">                    response.getOutputStream());</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        registerHandler(<span class=\"string\">\"/**/&#123;path:[^.]+&#125;\"</span>, httpRequestHandler);</span><br><span class=\"line\">        registerHandler(<span class=\"string\">\"/\"</span>, httpRequestHandler);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getOrder</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Ordered.LOWEST_PRECEDENCE - <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5>解决二</h5>\n<p>static-resources 把/**兜底 关掉<br>\n写一个全匹配的HandlerMapping插入在12后面</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spring.resources.add-mappings=false</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"function\">HandlerMapping <span class=\"title\">vueHandlerMapping</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> VueHandlerMapping();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">VueHandlerMapping</span> <span class=\"keyword\">implements</span> <span class=\"title\">HandlerMapping</span>, <span class=\"title\">Ordered</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> HandlerExecutionChain <span class=\"title\">getHandler</span><span class=\"params\">(HttpServletRequest request)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> HandlerExecutionChain(<span class=\"keyword\">new</span> HttpRequestHandler() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">handleRequest</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">                response.setContentType(MediaType.TEXT_HTML_VALUE);</span><br><span class=\"line\">                FileCopyUtils.copy(Thread.currentThread().getContextClassLoader().getResourceAsStream(<span class=\"string\">\"public/dist/index.html\"</span>),</span><br><span class=\"line\">                        response.getOutputStream());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getOrder</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Ordered.LOWEST_PRECEDENCE;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"java包扫描功能实现分析","date":"2018-12-25T05:50:28.000Z","_content":"\n### 问题分析\n输入包名 eg:com.xiafei  \n返回包下面所有的类名\n\n先总结再看过程\n\n### 总结 \n\n##### 1.包名换成路径名  \ncom/xiafei/ \n\n##### 2.获取系统中绝对路径  \nClass.getResource(\"com/xiafei/\")  \n\n##### 3.获取文件夹下面所有class文件名  \nFile.listFiles()  \n<!-- more -->\n##### 4.获取文件名称  \n\n\n##### Spring源码过程\n```java\n public static void main(String[] args) throws IOException {\n        PathMatchingResourcePatternResolver pathMatchingResourcePatternResolver=new PathMatchingResourcePatternResolver();\n        Resource[]  resources=pathMatchingResourcePatternResolver.getResources(\"classpath*:com/wing/core/mock/generate/handler/*.class\");\n        for (int i = 0; i < resources.length; i++) {\n            Resource resource = resources[i];\n            System.out.println(resource.getURI());\n        }\n    }\n\n\n    protected Resource[] findPathMatchingResources(String locationPattern) throws IOException {\n        //文件夹路径\n        String rootDirPath = determineRootDir(locationPattern);\n        //匹配文件路径\n        String subPattern = locationPattern.substring(rootDirPath.length());\n        Resource[] rootDirResources = findAllClassPathResources(rootDirPath);\n        Set<Resource> result = new LinkedHashSet<Resource>(16);\n        for (Resource rootDirResource : rootDirResources) {\n                result.addAll(doFindPathMatchingFileResources(rootDirResource, subPattern));\n        return result.toArray(new Resource[result.size()]);\n    }\n\n    //根据文件夹名字找到Resouce也就是文件的绝对位置\n    protected Resource[] findAllClassPathResources(String location) throws IOException {\n        String path = location;\n        if (path.startsWith(\"/\")) {\n            path = path.substring(1);\n        }\n        Set<Resource> result = doFindAllClassPathResources(path);\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"Resolved classpath location [\" + location + \"] to resources \" + result);\n        }\n        return result.toArray(new Resource[result.size()]);\n    }\n\n\n    //根据文件夹名字找到Resouce也就是文件的绝对位置\n    protected Set<Resource> doFindAllClassPathResources(String path) throws IOException {\n        Set<Resource> result = new LinkedHashSet<Resource>(16);\n        ClassLoader cl = getClassLoader();\n        Enumeration<URL> resourceUrls = (cl != null ? cl.getResources(path) : ClassLoader.getSystemResources(path));\n        while (resourceUrls.hasMoreElements()) {\n            URL url = resourceUrls.nextElement();\n            result.add(convertClassLoaderURL(url));\n        }\n        return result;\n    }\n\n\n//扫描具体文件\nprotected Set<Resource> doFindPathMatchingFileResources(Resource rootDirResource, String subPattern)\n            throws IOException {\n\n        File rootDir;\n        try {\n            rootDir = rootDirResource.getFile().getAbsoluteFile();\n        }\n        catch (IOException ex) {\n            if (logger.isWarnEnabled()) {\n                logger.warn(\"Cannot search for matching files underneath \" + rootDirResource +\n                        \" because it does not correspond to a directory in the file system\", ex);\n            }\n            return Collections.emptySet();\n        }\n        return doFindMatchingFileSystemResources(rootDir, subPattern);\n    }\n\n//扫描\n    protected Set<Resource> doFindMatchingFileSystemResources(File rootDir, String subPattern) throws IOException {\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"Looking for matching resources in directory tree [\" + rootDir.getPath() + \"]\");\n        }\n        Set<File> matchingFiles = retrieveMatchingFiles(rootDir, subPattern);\n        Set<Resource> result = new LinkedHashSet<Resource>(matchingFiles.size());\n        for (File file : matchingFiles) {\n            result.add(new FileSystemResource(file));\n        }\n        return result;\n    }\n\n    protected Set<File> retrieveMatchingFiles(File rootDir, String pattern) throws IOException {\n        fullPattern = fullPattern + StringUtils.replace(pattern, File.separator, \"/\");\n        Set<File> result = new LinkedHashSet<File>(8);\n        //真正扫描\n        doRetrieveMatchingFiles(fullPattern, rootDir, result);\n        return result;\n    }\n\n    protected void doRetrieveMatchingFiles(String fullPattern, File dir, Set<File> result) throws IOException {\n        \n        //获取下面所有子文件\n        File[] dirContents = dir.listFiles();\n      \n        Arrays.sort(dirContents);\n        //一个模糊匹配功能\n        for (File content : dirContents) {\n            String currPath = StringUtils.replace(content.getAbsolutePath(), File.separator, \"/\");\n            if (content.isDirectory() && getPathMatcher().matchStart(fullPattern, currPath + \"/\")) {\n                else {\n                    doRetrieveMatchingFiles(fullPattern, content, result);\n                }\n            }\n            if (getPathMatcher().match(fullPattern, currPath)) {\n                result.add(content);\n            }\n        }\n    }\n\n```\n\n\n\n##### Jar包扫描要复杂点  \n关键点 URL目录转Resouce\norg.springframework.core.io.support.PathMatchingResourcePatternResolver#doFindPathMatchingJarResources(org.springframework.core.io.Resource, java.net.URL, java.lang.String)\n\nURL->JarFile->jarFile.entries()->entry.getName()\n```java\nprotected Set<Resource> doFindPathMatchingJarResources(Resource rootDirResource, URL rootDirURL, String subPattern)\n            throws IOException {\n\n        // Check deprecated variant for potential overriding first...\n        Set<Resource> result = doFindPathMatchingJarResources(rootDirResource, subPattern);\n        if (result != null) {\n            return result;\n        }\n\n        URLConnection con = rootDirURL.openConnection();\n        JarFile jarFile;\n        String jarFileUrl;\n        String rootEntryPath;\n        boolean closeJarFile;\n\n        if (con instanceof JarURLConnection) {\n           \n            JarURLConnection jarCon = (JarURLConnection) con;\n            ResourceUtils.useCachesIfNecessary(jarCon);\n            jarFile = jarCon.getJarFile();\n            jarFileUrl = jarCon.getJarFileURL().toExternalForm();\n            JarEntry jarEntry = jarCon.getJarEntry();\n            rootEntryPath = (jarEntry != null ? jarEntry.getName() : \"\");\n            closeJarFile = !jarCon.getUseCaches();\n        }\n        else {\n        \n            String urlFile = rootDirURL.getFile();\n            try {\n                int separatorIndex = urlFile.indexOf(ResourceUtils.WAR_URL_SEPARATOR);\n                if (separatorIndex == -1) {\n                    separatorIndex = urlFile.indexOf(ResourceUtils.JAR_URL_SEPARATOR);\n                }\n                if (separatorIndex != -1) {\n                    jarFileUrl = urlFile.substring(0, separatorIndex);\n                    rootEntryPath = urlFile.substring(separatorIndex + 2);  // both separators are 2 chars\n                    jarFile = getJarFile(jarFileUrl);\n                }\n                else {\n                    jarFile = new JarFile(urlFile);\n                    jarFileUrl = urlFile;\n                    rootEntryPath = \"\";\n                }\n                closeJarFile = true;\n            }\n            catch (ZipException ex) {\n                if (logger.isDebugEnabled()) {\n                    logger.debug(\"Skipping invalid jar classpath entry [\" + urlFile + \"]\");\n                }\n                return Collections.emptySet();\n            }\n        }\n\n        try {\n      \n            if (!\"\".equals(rootEntryPath) && !rootEntryPath.endsWith(\"/\")) {\n                rootEntryPath = rootEntryPath + \"/\";\n            }\n            result = new LinkedHashSet<Resource>(8);\n            for (Enumeration<JarEntry> entries = jarFile.entries(); entries.hasMoreElements();) {\n                JarEntry entry = entries.nextElement();\n                String entryPath = entry.getName();\n                if (entryPath.startsWith(rootEntryPath)) {\n                    String relativePath = entryPath.substring(rootEntryPath.length());\n                    if (getPathMatcher().match(subPattern, relativePath)) {\n                        result.add(rootDirResource.createRelative(relativePath));\n                    }\n                }\n            }\n            return result;\n        }\n        finally {\n            if (closeJarFile) {\n                jarFile.close();\n            }\n        }\n    }\n```\n\n\n\n\n\n","source":"_posts/packageScan.md","raw":"---\ntitle: java包扫描功能实现分析\ndate: 2018-12-25 13:50:28\ntags: java\n---\n\n### 问题分析\n输入包名 eg:com.xiafei  \n返回包下面所有的类名\n\n先总结再看过程\n\n### 总结 \n\n##### 1.包名换成路径名  \ncom/xiafei/ \n\n##### 2.获取系统中绝对路径  \nClass.getResource(\"com/xiafei/\")  \n\n##### 3.获取文件夹下面所有class文件名  \nFile.listFiles()  \n<!-- more -->\n##### 4.获取文件名称  \n\n\n##### Spring源码过程\n```java\n public static void main(String[] args) throws IOException {\n        PathMatchingResourcePatternResolver pathMatchingResourcePatternResolver=new PathMatchingResourcePatternResolver();\n        Resource[]  resources=pathMatchingResourcePatternResolver.getResources(\"classpath*:com/wing/core/mock/generate/handler/*.class\");\n        for (int i = 0; i < resources.length; i++) {\n            Resource resource = resources[i];\n            System.out.println(resource.getURI());\n        }\n    }\n\n\n    protected Resource[] findPathMatchingResources(String locationPattern) throws IOException {\n        //文件夹路径\n        String rootDirPath = determineRootDir(locationPattern);\n        //匹配文件路径\n        String subPattern = locationPattern.substring(rootDirPath.length());\n        Resource[] rootDirResources = findAllClassPathResources(rootDirPath);\n        Set<Resource> result = new LinkedHashSet<Resource>(16);\n        for (Resource rootDirResource : rootDirResources) {\n                result.addAll(doFindPathMatchingFileResources(rootDirResource, subPattern));\n        return result.toArray(new Resource[result.size()]);\n    }\n\n    //根据文件夹名字找到Resouce也就是文件的绝对位置\n    protected Resource[] findAllClassPathResources(String location) throws IOException {\n        String path = location;\n        if (path.startsWith(\"/\")) {\n            path = path.substring(1);\n        }\n        Set<Resource> result = doFindAllClassPathResources(path);\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"Resolved classpath location [\" + location + \"] to resources \" + result);\n        }\n        return result.toArray(new Resource[result.size()]);\n    }\n\n\n    //根据文件夹名字找到Resouce也就是文件的绝对位置\n    protected Set<Resource> doFindAllClassPathResources(String path) throws IOException {\n        Set<Resource> result = new LinkedHashSet<Resource>(16);\n        ClassLoader cl = getClassLoader();\n        Enumeration<URL> resourceUrls = (cl != null ? cl.getResources(path) : ClassLoader.getSystemResources(path));\n        while (resourceUrls.hasMoreElements()) {\n            URL url = resourceUrls.nextElement();\n            result.add(convertClassLoaderURL(url));\n        }\n        return result;\n    }\n\n\n//扫描具体文件\nprotected Set<Resource> doFindPathMatchingFileResources(Resource rootDirResource, String subPattern)\n            throws IOException {\n\n        File rootDir;\n        try {\n            rootDir = rootDirResource.getFile().getAbsoluteFile();\n        }\n        catch (IOException ex) {\n            if (logger.isWarnEnabled()) {\n                logger.warn(\"Cannot search for matching files underneath \" + rootDirResource +\n                        \" because it does not correspond to a directory in the file system\", ex);\n            }\n            return Collections.emptySet();\n        }\n        return doFindMatchingFileSystemResources(rootDir, subPattern);\n    }\n\n//扫描\n    protected Set<Resource> doFindMatchingFileSystemResources(File rootDir, String subPattern) throws IOException {\n        if (logger.isDebugEnabled()) {\n            logger.debug(\"Looking for matching resources in directory tree [\" + rootDir.getPath() + \"]\");\n        }\n        Set<File> matchingFiles = retrieveMatchingFiles(rootDir, subPattern);\n        Set<Resource> result = new LinkedHashSet<Resource>(matchingFiles.size());\n        for (File file : matchingFiles) {\n            result.add(new FileSystemResource(file));\n        }\n        return result;\n    }\n\n    protected Set<File> retrieveMatchingFiles(File rootDir, String pattern) throws IOException {\n        fullPattern = fullPattern + StringUtils.replace(pattern, File.separator, \"/\");\n        Set<File> result = new LinkedHashSet<File>(8);\n        //真正扫描\n        doRetrieveMatchingFiles(fullPattern, rootDir, result);\n        return result;\n    }\n\n    protected void doRetrieveMatchingFiles(String fullPattern, File dir, Set<File> result) throws IOException {\n        \n        //获取下面所有子文件\n        File[] dirContents = dir.listFiles();\n      \n        Arrays.sort(dirContents);\n        //一个模糊匹配功能\n        for (File content : dirContents) {\n            String currPath = StringUtils.replace(content.getAbsolutePath(), File.separator, \"/\");\n            if (content.isDirectory() && getPathMatcher().matchStart(fullPattern, currPath + \"/\")) {\n                else {\n                    doRetrieveMatchingFiles(fullPattern, content, result);\n                }\n            }\n            if (getPathMatcher().match(fullPattern, currPath)) {\n                result.add(content);\n            }\n        }\n    }\n\n```\n\n\n\n##### Jar包扫描要复杂点  \n关键点 URL目录转Resouce\norg.springframework.core.io.support.PathMatchingResourcePatternResolver#doFindPathMatchingJarResources(org.springframework.core.io.Resource, java.net.URL, java.lang.String)\n\nURL->JarFile->jarFile.entries()->entry.getName()\n```java\nprotected Set<Resource> doFindPathMatchingJarResources(Resource rootDirResource, URL rootDirURL, String subPattern)\n            throws IOException {\n\n        // Check deprecated variant for potential overriding first...\n        Set<Resource> result = doFindPathMatchingJarResources(rootDirResource, subPattern);\n        if (result != null) {\n            return result;\n        }\n\n        URLConnection con = rootDirURL.openConnection();\n        JarFile jarFile;\n        String jarFileUrl;\n        String rootEntryPath;\n        boolean closeJarFile;\n\n        if (con instanceof JarURLConnection) {\n           \n            JarURLConnection jarCon = (JarURLConnection) con;\n            ResourceUtils.useCachesIfNecessary(jarCon);\n            jarFile = jarCon.getJarFile();\n            jarFileUrl = jarCon.getJarFileURL().toExternalForm();\n            JarEntry jarEntry = jarCon.getJarEntry();\n            rootEntryPath = (jarEntry != null ? jarEntry.getName() : \"\");\n            closeJarFile = !jarCon.getUseCaches();\n        }\n        else {\n        \n            String urlFile = rootDirURL.getFile();\n            try {\n                int separatorIndex = urlFile.indexOf(ResourceUtils.WAR_URL_SEPARATOR);\n                if (separatorIndex == -1) {\n                    separatorIndex = urlFile.indexOf(ResourceUtils.JAR_URL_SEPARATOR);\n                }\n                if (separatorIndex != -1) {\n                    jarFileUrl = urlFile.substring(0, separatorIndex);\n                    rootEntryPath = urlFile.substring(separatorIndex + 2);  // both separators are 2 chars\n                    jarFile = getJarFile(jarFileUrl);\n                }\n                else {\n                    jarFile = new JarFile(urlFile);\n                    jarFileUrl = urlFile;\n                    rootEntryPath = \"\";\n                }\n                closeJarFile = true;\n            }\n            catch (ZipException ex) {\n                if (logger.isDebugEnabled()) {\n                    logger.debug(\"Skipping invalid jar classpath entry [\" + urlFile + \"]\");\n                }\n                return Collections.emptySet();\n            }\n        }\n\n        try {\n      \n            if (!\"\".equals(rootEntryPath) && !rootEntryPath.endsWith(\"/\")) {\n                rootEntryPath = rootEntryPath + \"/\";\n            }\n            result = new LinkedHashSet<Resource>(8);\n            for (Enumeration<JarEntry> entries = jarFile.entries(); entries.hasMoreElements();) {\n                JarEntry entry = entries.nextElement();\n                String entryPath = entry.getName();\n                if (entryPath.startsWith(rootEntryPath)) {\n                    String relativePath = entryPath.substring(rootEntryPath.length());\n                    if (getPathMatcher().match(subPattern, relativePath)) {\n                        result.add(rootDirResource.createRelative(relativePath));\n                    }\n                }\n            }\n            return result;\n        }\n        finally {\n            if (closeJarFile) {\n                jarFile.close();\n            }\n        }\n    }\n```\n\n\n\n\n\n","slug":"packageScan","published":1,"updated":"2019-06-17T02:25:53.747Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwzrk81f000t5gwv4h4vje46","content":"<h3 id=\"问题分析\">问题分析</h3>\n<p>输入包名 eg:com.xiafei<br>\n返回包下面所有的类名</p>\n<p>先总结再看过程</p>\n<h3 id=\"总结\">总结</h3>\n<h5 id=\"1包名换成路径名\">1.包名换成路径名</h5>\n<p>com/xiafei/</p>\n<h5 id=\"2获取系统中绝对路径\">2.获取系统中绝对路径</h5>\n<p>Class.getResource(“com/xiafei/”)</p>\n<h5 id=\"3获取文件夹下面所有class文件名\">3.获取文件夹下面所有class文件名</h5>\n<p>File.listFiles()</p>\n<a id=\"more\"></a>\n<h5 id=\"4获取文件名称\">4.获取文件名称</h5>\n<h5 id=\"spring源码过程\">Spring源码过程</h5>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        PathMatchingResourcePatternResolver pathMatchingResourcePatternResolver=<span class=\"keyword\">new</span> PathMatchingResourcePatternResolver();</span><br><span class=\"line\">        Resource[]  resources=pathMatchingResourcePatternResolver.getResources(<span class=\"string\">\"classpath*:com/wing/core/mock/generate/handler/*.class\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; resources.length; i++) &#123;</span><br><span class=\"line\">            Resource resource = resources[i];</span><br><span class=\"line\">            System.out.println(resource.getURI());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> Resource[] findPathMatchingResources(String locationPattern) <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//文件夹路径</span></span><br><span class=\"line\">        String rootDirPath = determineRootDir(locationPattern);</span><br><span class=\"line\">        <span class=\"comment\">//匹配文件路径</span></span><br><span class=\"line\">        String subPattern = locationPattern.substring(rootDirPath.length());</span><br><span class=\"line\">        Resource[] rootDirResources = findAllClassPathResources(rootDirPath);</span><br><span class=\"line\">        Set&lt;Resource&gt; result = <span class=\"keyword\">new</span> LinkedHashSet&lt;Resource&gt;(<span class=\"number\">16</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Resource rootDirResource : rootDirResources) &#123;</span><br><span class=\"line\">                result.addAll(doFindPathMatchingFileResources(rootDirResource, subPattern));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result.toArray(<span class=\"keyword\">new</span> Resource[result.size()]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//根据文件夹名字找到Resouce也就是文件的绝对位置</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> Resource[] findAllClassPathResources(String location) <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        String path = location;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (path.startsWith(<span class=\"string\">\"/\"</span>)) &#123;</span><br><span class=\"line\">            path = path.substring(<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Set&lt;Resource&gt; result = doFindAllClassPathResources(path);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (logger.isDebugEnabled()) &#123;</span><br><span class=\"line\">            logger.debug(<span class=\"string\">\"Resolved classpath location [\"</span> + location + <span class=\"string\">\"] to resources \"</span> + result);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result.toArray(<span class=\"keyword\">new</span> Resource[result.size()]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//根据文件夹名字找到Resouce也就是文件的绝对位置</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> Set&lt;Resource&gt; <span class=\"title\">doFindAllClassPathResources</span><span class=\"params\">(String path)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        Set&lt;Resource&gt; result = <span class=\"keyword\">new</span> LinkedHashSet&lt;Resource&gt;(<span class=\"number\">16</span>);</span><br><span class=\"line\">        ClassLoader cl = getClassLoader();</span><br><span class=\"line\">        Enumeration&lt;URL&gt; resourceUrls = (cl != <span class=\"keyword\">null</span> ? cl.getResources(path) : ClassLoader.getSystemResources(path));</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (resourceUrls.hasMoreElements()) &#123;</span><br><span class=\"line\">            URL url = resourceUrls.nextElement();</span><br><span class=\"line\">            result.add(convertClassLoaderURL(url));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//扫描具体文件</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> Set&lt;Resource&gt; <span class=\"title\">doFindPathMatchingFileResources</span><span class=\"params\">(Resource rootDirResource, String subPattern)</span></span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        File rootDir;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            rootDir = rootDirResource.getFile().getAbsoluteFile();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">catch</span> (IOException ex) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (logger.isWarnEnabled()) &#123;</span><br><span class=\"line\">                logger.warn(<span class=\"string\">\"Cannot search for matching files underneath \"</span> + rootDirResource +</span><br><span class=\"line\">                        <span class=\"string\">\" because it does not correspond to a directory in the file system\"</span>, ex);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Collections.emptySet();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> doFindMatchingFileSystemResources(rootDir, subPattern);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//扫描</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> Set&lt;Resource&gt; <span class=\"title\">doFindMatchingFileSystemResources</span><span class=\"params\">(File rootDir, String subPattern)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (logger.isDebugEnabled()) &#123;</span><br><span class=\"line\">            logger.debug(<span class=\"string\">\"Looking for matching resources in directory tree [\"</span> + rootDir.getPath() + <span class=\"string\">\"]\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Set&lt;File&gt; matchingFiles = retrieveMatchingFiles(rootDir, subPattern);</span><br><span class=\"line\">        Set&lt;Resource&gt; result = <span class=\"keyword\">new</span> LinkedHashSet&lt;Resource&gt;(matchingFiles.size());</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (File file : matchingFiles) &#123;</span><br><span class=\"line\">            result.add(<span class=\"keyword\">new</span> FileSystemResource(file));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> Set&lt;File&gt; <span class=\"title\">retrieveMatchingFiles</span><span class=\"params\">(File rootDir, String pattern)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        fullPattern = fullPattern + StringUtils.replace(pattern, File.separator, <span class=\"string\">\"/\"</span>);</span><br><span class=\"line\">        Set&lt;File&gt; result = <span class=\"keyword\">new</span> LinkedHashSet&lt;File&gt;(<span class=\"number\">8</span>);</span><br><span class=\"line\">        <span class=\"comment\">//真正扫描</span></span><br><span class=\"line\">        doRetrieveMatchingFiles(fullPattern, rootDir, result);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doRetrieveMatchingFiles</span><span class=\"params\">(String fullPattern, File dir, Set&lt;File&gt; result)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">//获取下面所有子文件</span></span><br><span class=\"line\">        File[] dirContents = dir.listFiles();</span><br><span class=\"line\">      </span><br><span class=\"line\">        Arrays.sort(dirContents);</span><br><span class=\"line\">        <span class=\"comment\">//一个模糊匹配功能</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (File content : dirContents) &#123;</span><br><span class=\"line\">            String currPath = StringUtils.replace(content.getAbsolutePath(), File.separator, <span class=\"string\">\"/\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (content.isDirectory() &amp;&amp; getPathMatcher().matchStart(fullPattern, currPath + <span class=\"string\">\"/\"</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    doRetrieveMatchingFiles(fullPattern, content, result);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (getPathMatcher().match(fullPattern, currPath)) &#123;</span><br><span class=\"line\">                result.add(content);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"jar包扫描要复杂点\">Jar包扫描要复杂点</h5>\n<p>关键点 URL目录转Resouce<br>\norg.springframework.core.io.support.PathMatchingResourcePatternResolver#doFindPathMatchingJarResources(org.springframework.core.io.Resource, java.net.URL, java.lang.String)</p>\n<p>URL-&gt;JarFile-&gt;jarFile.entries()-&gt;entry.getName()</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> Set&lt;Resource&gt; <span class=\"title\">doFindPathMatchingJarResources</span><span class=\"params\">(Resource rootDirResource, URL rootDirURL, String subPattern)</span></span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Check deprecated variant for potential overriding first...</span></span><br><span class=\"line\">        Set&lt;Resource&gt; result = doFindPathMatchingJarResources(rootDirResource, subPattern);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (result != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        URLConnection con = rootDirURL.openConnection();</span><br><span class=\"line\">        JarFile jarFile;</span><br><span class=\"line\">        String jarFileUrl;</span><br><span class=\"line\">        String rootEntryPath;</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> closeJarFile;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (con <span class=\"keyword\">instanceof</span> JarURLConnection) &#123;</span><br><span class=\"line\">           </span><br><span class=\"line\">            JarURLConnection jarCon = (JarURLConnection) con;</span><br><span class=\"line\">            ResourceUtils.useCachesIfNecessary(jarCon);</span><br><span class=\"line\">            jarFile = jarCon.getJarFile();</span><br><span class=\"line\">            jarFileUrl = jarCon.getJarFileURL().toExternalForm();</span><br><span class=\"line\">            JarEntry jarEntry = jarCon.getJarEntry();</span><br><span class=\"line\">            rootEntryPath = (jarEntry != <span class=\"keyword\">null</span> ? jarEntry.getName() : <span class=\"string\">\"\"</span>);</span><br><span class=\"line\">            closeJarFile = !jarCon.getUseCaches();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">            String urlFile = rootDirURL.getFile();</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> separatorIndex = urlFile.indexOf(ResourceUtils.WAR_URL_SEPARATOR);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (separatorIndex == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                    separatorIndex = urlFile.indexOf(ResourceUtils.JAR_URL_SEPARATOR);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (separatorIndex != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                    jarFileUrl = urlFile.substring(<span class=\"number\">0</span>, separatorIndex);</span><br><span class=\"line\">                    rootEntryPath = urlFile.substring(separatorIndex + <span class=\"number\">2</span>);  <span class=\"comment\">// both separators are 2 chars</span></span><br><span class=\"line\">                    jarFile = getJarFile(jarFileUrl);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    jarFile = <span class=\"keyword\">new</span> JarFile(urlFile);</span><br><span class=\"line\">                    jarFileUrl = urlFile;</span><br><span class=\"line\">                    rootEntryPath = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                closeJarFile = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">catch</span> (ZipException ex) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (logger.isDebugEnabled()) &#123;</span><br><span class=\"line\">                    logger.debug(<span class=\"string\">\"Skipping invalid jar classpath entry [\"</span> + urlFile + <span class=\"string\">\"]\"</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> Collections.emptySet();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      </span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!<span class=\"string\">\"\"</span>.equals(rootEntryPath) &amp;&amp; !rootEntryPath.endsWith(<span class=\"string\">\"/\"</span>)) &#123;</span><br><span class=\"line\">                rootEntryPath = rootEntryPath + <span class=\"string\">\"/\"</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            result = <span class=\"keyword\">new</span> LinkedHashSet&lt;Resource&gt;(<span class=\"number\">8</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (Enumeration&lt;JarEntry&gt; entries = jarFile.entries(); entries.hasMoreElements();) &#123;</span><br><span class=\"line\">                JarEntry entry = entries.nextElement();</span><br><span class=\"line\">                String entryPath = entry.getName();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (entryPath.startsWith(rootEntryPath)) &#123;</span><br><span class=\"line\">                    String relativePath = entryPath.substring(rootEntryPath.length());</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (getPathMatcher().match(subPattern, relativePath)) &#123;</span><br><span class=\"line\">                        result.add(rootDirResource.createRelative(relativePath));</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (closeJarFile) &#123;</span><br><span class=\"line\">                jarFile.close();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h3>问题分析</h3>\n<p>输入包名 eg:com.xiafei<br>\n返回包下面所有的类名</p>\n<p>先总结再看过程</p>\n<h3>总结</h3>\n<h5>1.包名换成路径名</h5>\n<p>com/xiafei/</p>\n<h5>2.获取系统中绝对路径</h5>\n<p>Class.getResource(“com/xiafei/”)</p>\n<h5>3.获取文件夹下面所有class文件名</h5>\n<p>File.listFiles()</p>","more":"<h5>4.获取文件名称</h5>\n<h5>Spring源码过程</h5>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        PathMatchingResourcePatternResolver pathMatchingResourcePatternResolver=<span class=\"keyword\">new</span> PathMatchingResourcePatternResolver();</span><br><span class=\"line\">        Resource[]  resources=pathMatchingResourcePatternResolver.getResources(<span class=\"string\">\"classpath*:com/wing/core/mock/generate/handler/*.class\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; resources.length; i++) &#123;</span><br><span class=\"line\">            Resource resource = resources[i];</span><br><span class=\"line\">            System.out.println(resource.getURI());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> Resource[] findPathMatchingResources(String locationPattern) <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//文件夹路径</span></span><br><span class=\"line\">        String rootDirPath = determineRootDir(locationPattern);</span><br><span class=\"line\">        <span class=\"comment\">//匹配文件路径</span></span><br><span class=\"line\">        String subPattern = locationPattern.substring(rootDirPath.length());</span><br><span class=\"line\">        Resource[] rootDirResources = findAllClassPathResources(rootDirPath);</span><br><span class=\"line\">        Set&lt;Resource&gt; result = <span class=\"keyword\">new</span> LinkedHashSet&lt;Resource&gt;(<span class=\"number\">16</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Resource rootDirResource : rootDirResources) &#123;</span><br><span class=\"line\">                result.addAll(doFindPathMatchingFileResources(rootDirResource, subPattern));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result.toArray(<span class=\"keyword\">new</span> Resource[result.size()]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//根据文件夹名字找到Resouce也就是文件的绝对位置</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> Resource[] findAllClassPathResources(String location) <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        String path = location;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (path.startsWith(<span class=\"string\">\"/\"</span>)) &#123;</span><br><span class=\"line\">            path = path.substring(<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Set&lt;Resource&gt; result = doFindAllClassPathResources(path);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (logger.isDebugEnabled()) &#123;</span><br><span class=\"line\">            logger.debug(<span class=\"string\">\"Resolved classpath location [\"</span> + location + <span class=\"string\">\"] to resources \"</span> + result);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result.toArray(<span class=\"keyword\">new</span> Resource[result.size()]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//根据文件夹名字找到Resouce也就是文件的绝对位置</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> Set&lt;Resource&gt; <span class=\"title\">doFindAllClassPathResources</span><span class=\"params\">(String path)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        Set&lt;Resource&gt; result = <span class=\"keyword\">new</span> LinkedHashSet&lt;Resource&gt;(<span class=\"number\">16</span>);</span><br><span class=\"line\">        ClassLoader cl = getClassLoader();</span><br><span class=\"line\">        Enumeration&lt;URL&gt; resourceUrls = (cl != <span class=\"keyword\">null</span> ? cl.getResources(path) : ClassLoader.getSystemResources(path));</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (resourceUrls.hasMoreElements()) &#123;</span><br><span class=\"line\">            URL url = resourceUrls.nextElement();</span><br><span class=\"line\">            result.add(convertClassLoaderURL(url));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//扫描具体文件</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> Set&lt;Resource&gt; <span class=\"title\">doFindPathMatchingFileResources</span><span class=\"params\">(Resource rootDirResource, String subPattern)</span></span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        File rootDir;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            rootDir = rootDirResource.getFile().getAbsoluteFile();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">catch</span> (IOException ex) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (logger.isWarnEnabled()) &#123;</span><br><span class=\"line\">                logger.warn(<span class=\"string\">\"Cannot search for matching files underneath \"</span> + rootDirResource +</span><br><span class=\"line\">                        <span class=\"string\">\" because it does not correspond to a directory in the file system\"</span>, ex);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Collections.emptySet();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> doFindMatchingFileSystemResources(rootDir, subPattern);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//扫描</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> Set&lt;Resource&gt; <span class=\"title\">doFindMatchingFileSystemResources</span><span class=\"params\">(File rootDir, String subPattern)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (logger.isDebugEnabled()) &#123;</span><br><span class=\"line\">            logger.debug(<span class=\"string\">\"Looking for matching resources in directory tree [\"</span> + rootDir.getPath() + <span class=\"string\">\"]\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Set&lt;File&gt; matchingFiles = retrieveMatchingFiles(rootDir, subPattern);</span><br><span class=\"line\">        Set&lt;Resource&gt; result = <span class=\"keyword\">new</span> LinkedHashSet&lt;Resource&gt;(matchingFiles.size());</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (File file : matchingFiles) &#123;</span><br><span class=\"line\">            result.add(<span class=\"keyword\">new</span> FileSystemResource(file));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> Set&lt;File&gt; <span class=\"title\">retrieveMatchingFiles</span><span class=\"params\">(File rootDir, String pattern)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        fullPattern = fullPattern + StringUtils.replace(pattern, File.separator, <span class=\"string\">\"/\"</span>);</span><br><span class=\"line\">        Set&lt;File&gt; result = <span class=\"keyword\">new</span> LinkedHashSet&lt;File&gt;(<span class=\"number\">8</span>);</span><br><span class=\"line\">        <span class=\"comment\">//真正扫描</span></span><br><span class=\"line\">        doRetrieveMatchingFiles(fullPattern, rootDir, result);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doRetrieveMatchingFiles</span><span class=\"params\">(String fullPattern, File dir, Set&lt;File&gt; result)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">//获取下面所有子文件</span></span><br><span class=\"line\">        File[] dirContents = dir.listFiles();</span><br><span class=\"line\">      </span><br><span class=\"line\">        Arrays.sort(dirContents);</span><br><span class=\"line\">        <span class=\"comment\">//一个模糊匹配功能</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (File content : dirContents) &#123;</span><br><span class=\"line\">            String currPath = StringUtils.replace(content.getAbsolutePath(), File.separator, <span class=\"string\">\"/\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (content.isDirectory() &amp;&amp; getPathMatcher().matchStart(fullPattern, currPath + <span class=\"string\">\"/\"</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    doRetrieveMatchingFiles(fullPattern, content, result);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (getPathMatcher().match(fullPattern, currPath)) &#123;</span><br><span class=\"line\">                result.add(content);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h5>Jar包扫描要复杂点</h5>\n<p>关键点 URL目录转Resouce<br>\norg.springframework.core.io.support.PathMatchingResourcePatternResolver#doFindPathMatchingJarResources(org.springframework.core.io.Resource, java.net.URL, java.lang.String)</p>\n<p>URL-&gt;JarFile-&gt;jarFile.entries()-&gt;entry.getName()</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> Set&lt;Resource&gt; <span class=\"title\">doFindPathMatchingJarResources</span><span class=\"params\">(Resource rootDirResource, URL rootDirURL, String subPattern)</span></span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Check deprecated variant for potential overriding first...</span></span><br><span class=\"line\">        Set&lt;Resource&gt; result = doFindPathMatchingJarResources(rootDirResource, subPattern);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (result != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        URLConnection con = rootDirURL.openConnection();</span><br><span class=\"line\">        JarFile jarFile;</span><br><span class=\"line\">        String jarFileUrl;</span><br><span class=\"line\">        String rootEntryPath;</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> closeJarFile;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (con <span class=\"keyword\">instanceof</span> JarURLConnection) &#123;</span><br><span class=\"line\">           </span><br><span class=\"line\">            JarURLConnection jarCon = (JarURLConnection) con;</span><br><span class=\"line\">            ResourceUtils.useCachesIfNecessary(jarCon);</span><br><span class=\"line\">            jarFile = jarCon.getJarFile();</span><br><span class=\"line\">            jarFileUrl = jarCon.getJarFileURL().toExternalForm();</span><br><span class=\"line\">            JarEntry jarEntry = jarCon.getJarEntry();</span><br><span class=\"line\">            rootEntryPath = (jarEntry != <span class=\"keyword\">null</span> ? jarEntry.getName() : <span class=\"string\">\"\"</span>);</span><br><span class=\"line\">            closeJarFile = !jarCon.getUseCaches();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">            String urlFile = rootDirURL.getFile();</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> separatorIndex = urlFile.indexOf(ResourceUtils.WAR_URL_SEPARATOR);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (separatorIndex == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                    separatorIndex = urlFile.indexOf(ResourceUtils.JAR_URL_SEPARATOR);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (separatorIndex != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                    jarFileUrl = urlFile.substring(<span class=\"number\">0</span>, separatorIndex);</span><br><span class=\"line\">                    rootEntryPath = urlFile.substring(separatorIndex + <span class=\"number\">2</span>);  <span class=\"comment\">// both separators are 2 chars</span></span><br><span class=\"line\">                    jarFile = getJarFile(jarFileUrl);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    jarFile = <span class=\"keyword\">new</span> JarFile(urlFile);</span><br><span class=\"line\">                    jarFileUrl = urlFile;</span><br><span class=\"line\">                    rootEntryPath = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                closeJarFile = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">catch</span> (ZipException ex) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (logger.isDebugEnabled()) &#123;</span><br><span class=\"line\">                    logger.debug(<span class=\"string\">\"Skipping invalid jar classpath entry [\"</span> + urlFile + <span class=\"string\">\"]\"</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> Collections.emptySet();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      </span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!<span class=\"string\">\"\"</span>.equals(rootEntryPath) &amp;&amp; !rootEntryPath.endsWith(<span class=\"string\">\"/\"</span>)) &#123;</span><br><span class=\"line\">                rootEntryPath = rootEntryPath + <span class=\"string\">\"/\"</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            result = <span class=\"keyword\">new</span> LinkedHashSet&lt;Resource&gt;(<span class=\"number\">8</span>);</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (Enumeration&lt;JarEntry&gt; entries = jarFile.entries(); entries.hasMoreElements();) &#123;</span><br><span class=\"line\">                JarEntry entry = entries.nextElement();</span><br><span class=\"line\">                String entryPath = entry.getName();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (entryPath.startsWith(rootEntryPath)) &#123;</span><br><span class=\"line\">                    String relativePath = entryPath.substring(rootEntryPath.length());</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (getPathMatcher().match(subPattern, relativePath)) &#123;</span><br><span class=\"line\">                        result.add(rootDirResource.createRelative(relativePath));</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (closeJarFile) &#123;</span><br><span class=\"line\">                jarFile.close();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>"},{"title":"[Hexo] 夏飞","catalog":true,"toc_nav_num":true,"date":"2017-09-18T02:51:24.000Z","subtitle":"This is hexo theme Demo.","header-img":"/img/article_header/article_header.png","catagories":["Hexo"],"_content":"> This HuWeihuang theme created by [HuWeihuang](http://www.huweihuang.com/) modified from the original Porter [YuHsuan](https://github.com/YenYuHsuan/hexo-theme-beantech)\n\n# Live Demo\n\nHu Weihuang Blog : [www.huweihuang.com](http://www.huweihuang.com/)\n\n![Theme HuWeihuang](http://img.huweihuang.com/blog.jpg)\n\n# Install Hexo\n\nInstall Node.js  and Git\n\n```shell\n#For Mac\nbrew install node\nbrew install git\n```\n\nInstall hexo\n\n```shell\nnpm install hexo-cli -g\n\n#For more:https://hexo.io/zh-cn/index.html\n```\n\n# Theme Usage\n\n## Init\n\n---\n```bash\ngit clone https://github.com/huweihuang/hexo-theme-huweihuang.git ./hexo-huweihuang\ncd hexo-huweihuang\nnpm install\n```\n\n## Modify\n---\nModify `_config.yml` file with your own info.\nEspecially the section:\n### Deployment\nReplace to your own repo!\n```yml\ndeploy:\n  type: git\n  repo: https://github.com/<yourAccount>/<repo>\n  branch: <your-branch>\n```\n\n### Sidebar settings\nCopy your avatar image to `<root>/img/` and modify the `_config.yml`:\n```yml\nsidebar: true    # whether or not using Sidebar.\nsidebar-about-description: \"<your description>\"\nsidebar-avatar: img/<your avatar path>\n```\nand activate your personal widget you like\n```yml\nwidgets:         # here are widget you can use, you can comment out\n- featured-tags\n- short-about\n- recent-posts\n- friends-blog\n- archive\n- category\n```\nif you want to add sidebar widget, please add at `layout/_widget`.\n### Signature Setup\nCopy your signature image to `<root>/img/signature` and modify the `_config.yml`:\n```yml\nsignature: true   # show signature\nsignature-img: img/signature/<your-signature-ID>\n```\n### Go to top icon Setup\nMy icon is using iron man, you can change to your own icon at `css/image`.\n\n### Post tag\nYou can decide to show post tags or not.\n```yml\nhome_posts_tag: true\n```\n![home_posts_tag-true](/img/article/tag.png)\n### Markdown render\nMy markdown render engine plugin is [hexo-renderer-markdown-it](https://github.com/celsomiranda/hexo-renderer-markdown-it).\n```yml\n# Markdown-it config\n## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki\nmarkdown:\n  render:\n    html: true\n    xhtmlOut: false\n    breaks: true\n    linkify: true\n    typographer: true\n    quotes: '“”‘’'\n```\nand if you want to change the header anchor 'ℬ', you can go to `layout/post.ejs` to change it.\n```javascript\nasync(\"https://cdn.bootcss.com/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'left',\n          icon: ℬ // this is the header anchor \"unicode\" icon\n        };\n```\n\n## Hexo Basics\n---\nSome hexo command:\n```bash\nhexo new post \"<post name>\" # you can change post to another layout if you want\nhexo clean && hexo generate # generate the static file\nhexo server # run hexo in local environment\nhexo deploy # hexo will push the static files automatically into the specific branch(gh-pages) of your repo!\n```\n\n# Have fun ^_^ \n---\n<!-- Place this tag in your head or just before your close body tag. -->\n<script async defer src=\"https://buttons.github.io/buttons.js\"></script>\n<!-- Place this tag where you want the button to render. -->\n\nPlease <a class=\"github-button\" href=\"https://github.com/huweihuang/hexo-theme-huweihuang\" data-icon=\"octicon-star\" aria-label=\"Star huweihuang/hexo-theme-huweihuang on GitHub\">Star</a> this Project if you like it! <a class=\"github-button\" href=\"https://github.com/huweihuang\" aria-label=\"Follow @huweihuang on GitHub\">Follow</a> would also be appreciated!\nPeace!\n","source":"_drafts/test.md","raw":"---\ntitle: \"[Hexo] 夏飞\"\ncatalog: true\ntoc_nav_num: true\ndate: 2017-09-18 10:51:24\nsubtitle: \"This is hexo theme Demo.\"\nheader-img: \"/img/article_header/article_header.png\"\ntags:\n- Hexo\ncatagories:\n- Hexo\n\n---\n> This HuWeihuang theme created by [HuWeihuang](http://www.huweihuang.com/) modified from the original Porter [YuHsuan](https://github.com/YenYuHsuan/hexo-theme-beantech)\n\n# Live Demo\n\nHu Weihuang Blog : [www.huweihuang.com](http://www.huweihuang.com/)\n\n![Theme HuWeihuang](http://img.huweihuang.com/blog.jpg)\n\n# Install Hexo\n\nInstall Node.js  and Git\n\n```shell\n#For Mac\nbrew install node\nbrew install git\n```\n\nInstall hexo\n\n```shell\nnpm install hexo-cli -g\n\n#For more:https://hexo.io/zh-cn/index.html\n```\n\n# Theme Usage\n\n## Init\n\n---\n```bash\ngit clone https://github.com/huweihuang/hexo-theme-huweihuang.git ./hexo-huweihuang\ncd hexo-huweihuang\nnpm install\n```\n\n## Modify\n---\nModify `_config.yml` file with your own info.\nEspecially the section:\n### Deployment\nReplace to your own repo!\n```yml\ndeploy:\n  type: git\n  repo: https://github.com/<yourAccount>/<repo>\n  branch: <your-branch>\n```\n\n### Sidebar settings\nCopy your avatar image to `<root>/img/` and modify the `_config.yml`:\n```yml\nsidebar: true    # whether or not using Sidebar.\nsidebar-about-description: \"<your description>\"\nsidebar-avatar: img/<your avatar path>\n```\nand activate your personal widget you like\n```yml\nwidgets:         # here are widget you can use, you can comment out\n- featured-tags\n- short-about\n- recent-posts\n- friends-blog\n- archive\n- category\n```\nif you want to add sidebar widget, please add at `layout/_widget`.\n### Signature Setup\nCopy your signature image to `<root>/img/signature` and modify the `_config.yml`:\n```yml\nsignature: true   # show signature\nsignature-img: img/signature/<your-signature-ID>\n```\n### Go to top icon Setup\nMy icon is using iron man, you can change to your own icon at `css/image`.\n\n### Post tag\nYou can decide to show post tags or not.\n```yml\nhome_posts_tag: true\n```\n![home_posts_tag-true](/img/article/tag.png)\n### Markdown render\nMy markdown render engine plugin is [hexo-renderer-markdown-it](https://github.com/celsomiranda/hexo-renderer-markdown-it).\n```yml\n# Markdown-it config\n## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki\nmarkdown:\n  render:\n    html: true\n    xhtmlOut: false\n    breaks: true\n    linkify: true\n    typographer: true\n    quotes: '“”‘’'\n```\nand if you want to change the header anchor 'ℬ', you can go to `layout/post.ejs` to change it.\n```javascript\nasync(\"https://cdn.bootcss.com/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'left',\n          icon: ℬ // this is the header anchor \"unicode\" icon\n        };\n```\n\n## Hexo Basics\n---\nSome hexo command:\n```bash\nhexo new post \"<post name>\" # you can change post to another layout if you want\nhexo clean && hexo generate # generate the static file\nhexo server # run hexo in local environment\nhexo deploy # hexo will push the static files automatically into the specific branch(gh-pages) of your repo!\n```\n\n# Have fun ^_^ \n---\n<!-- Place this tag in your head or just before your close body tag. -->\n<script async defer src=\"https://buttons.github.io/buttons.js\"></script>\n<!-- Place this tag where you want the button to render. -->\n\nPlease <a class=\"github-button\" href=\"https://github.com/huweihuang/hexo-theme-huweihuang\" data-icon=\"octicon-star\" aria-label=\"Star huweihuang/hexo-theme-huweihuang on GitHub\">Star</a> this Project if you like it! <a class=\"github-button\" href=\"https://github.com/huweihuang\" aria-label=\"Follow @huweihuang on GitHub\">Follow</a> would also be appreciated!\nPeace!\n","slug":"test","published":0,"updated":"2019-06-17T02:25:53.741Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjwzrk81g000u5gwvbta5ogfd","content":"<blockquote>\n<p>This HuWeihuang theme created by <a href=\"http://www.huweihuang.com/\" target=\"_blank\" rel=\"noopener\">HuWeihuang</a> modified from the original Porter <a href=\"https://github.com/YenYuHsuan/hexo-theme-beantech\" target=\"_blank\" rel=\"noopener\">YuHsuan</a></p>\n</blockquote>\n<h1 id=\"live-demo\">Live Demo</h1>\n<p>Hu Weihuang Blog : <a href=\"http://www.huweihuang.com/\" target=\"_blank\" rel=\"noopener\">www.huweihuang.com</a></p>\n<p><img src=\"http://img.huweihuang.com/blog.jpg\" alt=\"Theme HuWeihuang\"></p>\n<h1 id=\"install-hexo\">Install Hexo</h1>\n<p>Install Node.js  and Git</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">For Mac</span></span><br><span class=\"line\">brew install node</span><br><span class=\"line\">brew install git</span><br></pre></td></tr></table></figure>\n<p>Install hexo</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">For more:https://hexo.io/zh-cn/index.html</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"theme-usage\">Theme Usage</h1>\n<h2 id=\"init\">Init</h2>\n<hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/huweihuang/hexo-theme-huweihuang.git ./hexo-huweihuang</span><br><span class=\"line\"><span class=\"built_in\">cd</span> hexo-huweihuang</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h2 id=\"modify\">Modify</h2>\n<hr>\n<p>Modify <code>_config.yml</code> file with your own info.<br>\nEspecially the section:</p>\n<h3 id=\"deployment\">Deployment</h3>\n<p>Replace to your own repo!</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"attr\">https://github.com/&lt;yourAccount&gt;/&lt;repo&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  branch:</span> <span class=\"string\">&lt;your-branch&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"sidebar-settings\">Sidebar settings</h3>\n<p>Copy your avatar image to <code>&lt;root&gt;/img/</code> and modify the <code>_config.yml</code>:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">sidebar:</span> <span class=\"literal\">true</span>    <span class=\"comment\"># whether or not using Sidebar.</span></span><br><span class=\"line\"><span class=\"attr\">sidebar-about-description:</span> <span class=\"string\">\"&lt;your description&gt;\"</span></span><br><span class=\"line\"><span class=\"attr\">sidebar-avatar:</span> <span class=\"string\">img/&lt;your</span> <span class=\"string\">avatar</span> <span class=\"string\">path&gt;</span></span><br></pre></td></tr></table></figure>\n<p>and activate your personal widget you like</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">widgets:</span>         <span class=\"comment\"># here are widget you can use, you can comment out</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">featured-tags</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">short-about</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">recent-posts</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">friends-blog</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">archive</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">category</span></span><br></pre></td></tr></table></figure>\n<p>if you want to add sidebar widget, please add at <code>layout/_widget</code>.</p>\n<h3 id=\"signature-setup\">Signature Setup</h3>\n<p>Copy your signature image to <code>&lt;root&gt;/img/signature</code> and modify the <code>_config.yml</code>:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">signature:</span> <span class=\"literal\">true</span>   <span class=\"comment\"># show signature</span></span><br><span class=\"line\"><span class=\"attr\">signature-img:</span> <span class=\"string\">img/signature/&lt;your-signature-ID&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"go-to-top-icon-setup\">Go to top icon Setup</h3>\n<p>My icon is using iron man, you can change to your own icon at <code>css/image</code>.</p>\n<h3 id=\"post-tag\">Post tag</h3>\n<p>You can decide to show post tags or not.</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">home_posts_tag:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/img/article/tag.png\" alt=\"home_posts_tag-true\"></p>\n<h3 id=\"markdown-render\">Markdown render</h3>\n<p>My markdown render engine plugin is <a href=\"https://github.com/celsomiranda/hexo-renderer-markdown-it\" target=\"_blank\" rel=\"noopener\">hexo-renderer-markdown-it</a>.</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Markdown-it config</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki</span></span><br><span class=\"line\"><span class=\"attr\">markdown:</span></span><br><span class=\"line\"><span class=\"attr\">  render:</span></span><br><span class=\"line\"><span class=\"attr\">    html:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    xhtmlOut:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">    breaks:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    linkify:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    typographer:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    quotes:</span> <span class=\"string\">'“”‘’'</span></span><br></pre></td></tr></table></figure>\n<p>and if you want to change the header anchor ‘ℬ’, you can go to <code>layout/post.ejs</code> to change it.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span>(<span class=\"string\">\"https://cdn.bootcss.com/anchor-js/1.1.1/anchor.min.js\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        anchors.options = &#123;</span><br><span class=\"line\">          visible: <span class=\"string\">'hover'</span>,</span><br><span class=\"line\">          placement: <span class=\"string\">'left'</span>,</span><br><span class=\"line\">          icon: ℬ <span class=\"comment\">// this is the header anchor \"unicode\" icon</span></span><br><span class=\"line\">        &#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"hexo-basics\">Hexo Basics</h2>\n<hr>\n<p>Some hexo command:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new post <span class=\"string\">\"&lt;post name&gt;\"</span> <span class=\"comment\"># you can change post to another layout if you want</span></span><br><span class=\"line\">hexo clean &amp;&amp; hexo generate <span class=\"comment\"># generate the static file</span></span><br><span class=\"line\">hexo server <span class=\"comment\"># run hexo in local environment</span></span><br><span class=\"line\">hexo deploy <span class=\"comment\"># hexo will push the static files automatically into the specific branch(gh-pages) of your repo!</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"have-fun-_\">Have fun ^_^</h1>\n<hr>\n<!-- Place this tag in your head or just before your close body tag. -->\n<script async defer src=\"https://buttons.github.io/buttons.js\"></script>\n<!-- Place this tag where you want the button to render. -->\n<p>Please <a class=\"github-button\" href=\"https://github.com/huweihuang/hexo-theme-huweihuang\" data-icon=\"octicon-star\" aria-label=\"Star huweihuang/hexo-theme-huweihuang on GitHub\" target=\"_blank\" rel=\"noopener\">Star</a> this Project if you like it! <a class=\"github-button\" href=\"https://github.com/huweihuang\" aria-label=\"Follow @huweihuang on GitHub\" target=\"_blank\" rel=\"noopener\">Follow</a> would also be appreciated!<br>\nPeace!</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>This HuWeihuang theme created by <a href=\"http://www.huweihuang.com/\" target=\"_blank\" rel=\"noopener\">HuWeihuang</a> modified from the original Porter <a href=\"https://github.com/YenYuHsuan/hexo-theme-beantech\" target=\"_blank\" rel=\"noopener\">YuHsuan</a></p>\n</blockquote>\n<h1>Live Demo</h1>\n<p>Hu Weihuang Blog : <a href=\"http://www.huweihuang.com/\" target=\"_blank\" rel=\"noopener\">www.huweihuang.com</a></p>\n<p><img src=\"http://img.huweihuang.com/blog.jpg\" alt=\"Theme HuWeihuang\"></p>\n<h1>Install Hexo</h1>\n<p>Install Node.js  and Git</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">For Mac</span></span><br><span class=\"line\">brew install node</span><br><span class=\"line\">brew install git</span><br></pre></td></tr></table></figure>\n<p>Install hexo</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">For more:https://hexo.io/zh-cn/index.html</span></span><br></pre></td></tr></table></figure>\n<h1>Theme Usage</h1>\n<h2>Init</h2>\n<hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/huweihuang/hexo-theme-huweihuang.git ./hexo-huweihuang</span><br><span class=\"line\"><span class=\"built_in\">cd</span> hexo-huweihuang</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h2>Modify</h2>\n<hr>\n<p>Modify <code>_config.yml</code> file with your own info.<br>\nEspecially the section:</p>\n<h3>Deployment</h3>\n<p>Replace to your own repo!</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span> <span class=\"attr\">https://github.com/&lt;yourAccount&gt;/&lt;repo&gt;</span></span><br><span class=\"line\"><span class=\"attr\">  branch:</span> <span class=\"string\">&lt;your-branch&gt;</span></span><br></pre></td></tr></table></figure>\n<h3>Sidebar settings</h3>\n<p>Copy your avatar image to <code>&lt;root&gt;/img/</code> and modify the <code>_config.yml</code>:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">sidebar:</span> <span class=\"literal\">true</span>    <span class=\"comment\"># whether or not using Sidebar.</span></span><br><span class=\"line\"><span class=\"attr\">sidebar-about-description:</span> <span class=\"string\">\"&lt;your description&gt;\"</span></span><br><span class=\"line\"><span class=\"attr\">sidebar-avatar:</span> <span class=\"string\">img/&lt;your</span> <span class=\"string\">avatar</span> <span class=\"string\">path&gt;</span></span><br></pre></td></tr></table></figure>\n<p>and activate your personal widget you like</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">widgets:</span>         <span class=\"comment\"># here are widget you can use, you can comment out</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">featured-tags</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">short-about</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">recent-posts</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">friends-blog</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">archive</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">category</span></span><br></pre></td></tr></table></figure>\n<p>if you want to add sidebar widget, please add at <code>layout/_widget</code>.</p>\n<h3>Signature Setup</h3>\n<p>Copy your signature image to <code>&lt;root&gt;/img/signature</code> and modify the <code>_config.yml</code>:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">signature:</span> <span class=\"literal\">true</span>   <span class=\"comment\"># show signature</span></span><br><span class=\"line\"><span class=\"attr\">signature-img:</span> <span class=\"string\">img/signature/&lt;your-signature-ID&gt;</span></span><br></pre></td></tr></table></figure>\n<h3>Go to top icon Setup</h3>\n<p>My icon is using iron man, you can change to your own icon at <code>css/image</code>.</p>\n<h3>Post tag</h3>\n<p>You can decide to show post tags or not.</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">home_posts_tag:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"/img/article/tag.png\" alt=\"home_posts_tag-true\"></p>\n<h3>Markdown render</h3>\n<p>My markdown render engine plugin is <a href=\"https://github.com/celsomiranda/hexo-renderer-markdown-it\" target=\"_blank\" rel=\"noopener\">hexo-renderer-markdown-it</a>.</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Markdown-it config</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki</span></span><br><span class=\"line\"><span class=\"attr\">markdown:</span></span><br><span class=\"line\"><span class=\"attr\">  render:</span></span><br><span class=\"line\"><span class=\"attr\">    html:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    xhtmlOut:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">    breaks:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    linkify:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    typographer:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    quotes:</span> <span class=\"string\">'“”‘’'</span></span><br></pre></td></tr></table></figure>\n<p>and if you want to change the header anchor ‘ℬ’, you can go to <code>layout/post.ejs</code> to change it.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span>(<span class=\"string\">\"https://cdn.bootcss.com/anchor-js/1.1.1/anchor.min.js\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        anchors.options = &#123;</span><br><span class=\"line\">          visible: <span class=\"string\">'hover'</span>,</span><br><span class=\"line\">          placement: <span class=\"string\">'left'</span>,</span><br><span class=\"line\">          icon: ℬ <span class=\"comment\">// this is the header anchor \"unicode\" icon</span></span><br><span class=\"line\">        &#125;;</span><br></pre></td></tr></table></figure>\n<h2>Hexo Basics</h2>\n<hr>\n<p>Some hexo command:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new post <span class=\"string\">\"&lt;post name&gt;\"</span> <span class=\"comment\"># you can change post to another layout if you want</span></span><br><span class=\"line\">hexo clean &amp;&amp; hexo generate <span class=\"comment\"># generate the static file</span></span><br><span class=\"line\">hexo server <span class=\"comment\"># run hexo in local environment</span></span><br><span class=\"line\">hexo deploy <span class=\"comment\"># hexo will push the static files automatically into the specific branch(gh-pages) of your repo!</span></span><br></pre></td></tr></table></figure>\n<h1>Have fun ^_^</h1>\n<hr>\n<!-- Place this tag in your head or just before your close body tag. -->\n<script async defer src=\"https://buttons.github.io/buttons.js\"></script>\n<!-- Place this tag where you want the button to render. -->\n<p>Please <a class=\"github-button\" href=\"https://github.com/huweihuang/hexo-theme-huweihuang\" data-icon=\"octicon-star\" aria-label=\"Star huweihuang/hexo-theme-huweihuang on GitHub\" target=\"_blank\" rel=\"noopener\">Star</a> this Project if you like it! <a class=\"github-button\" href=\"https://github.com/huweihuang\" aria-label=\"Follow @huweihuang on GitHub\" target=\"_blank\" rel=\"noopener\">Follow</a> would also be appreciated!<br>\nPeace!</p>\n"}],"PostAsset":[{"_id":"source/_drafts/test/Demo.png","slug":"Demo.png","post":"cjwzrk81g000u5gwvbta5ogfd","modified":0,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"cjwzrk80q00015gwv9aafl1ph","tag_id":"cjwzrk80w00055gwvi0kdc9cu","_id":"cjwzrk813000b5gwv0nghcya7"},{"post_id":"cjwzrk80u00035gwvcltewbnm","tag_id":"cjwzrk812000a5gwvyy4jyg0q","_id":"cjwzrk819000g5gwvxuanf9v8"},{"post_id":"cjwzrk80x00065gwvuma0wdrp","tag_id":"cjwzrk818000e5gwvtrcc6bee","_id":"cjwzrk81c000k5gwvc68maabl"},{"post_id":"cjwzrk80z00085gwv7dlx0zx8","tag_id":"cjwzrk81b000i5gwv49ky7lbb","_id":"cjwzrk81d000o5gwvs884pwwa"},{"post_id":"cjwzrk81200095gwvtyr5zcx1","tag_id":"cjwzrk81d000m5gwvp1li5ya4","_id":"cjwzrk81f000s5gwvkp43ej2l"},{"post_id":"cjwzrk814000c5gwvj72jqouf","tag_id":"cjwzrk81f000r5gwvc0tvzttt","_id":"cjwzrk81h000w5gwvoku3am5h"},{"post_id":"cjwzrk817000d5gwv9h4xxvom","tag_id":"cjwzrk81g000v5gwv8v7c1mtz","_id":"cjwzrk81h000y5gwvunci053i"},{"post_id":"cjwzrk819000f5gwvmz1jzxhr","tag_id":"cjwzrk81h000x5gwvwzhki8tr","_id":"cjwzrk81h00105gwv9h7mi3ce"},{"post_id":"cjwzrk81b000j5gwvrzzh4zqx","tag_id":"cjwzrk81h000z5gwva5ut57g5","_id":"cjwzrk81i00125gwvhzvk1iox"},{"post_id":"cjwzrk81c000l5gwvn1xo7zw8","tag_id":"cjwzrk81h00115gwvjdlddu94","_id":"cjwzrk81i00145gwvqnnrw1u5"},{"post_id":"cjwzrk81d000n5gwv80o6xe12","tag_id":"cjwzrk81i00135gwvlmqu0xlp","_id":"cjwzrk81i00165gwvupu4mxpn"},{"post_id":"cjwzrk81e000p5gwvml3iqw5j","tag_id":"cjwzrk81i00155gwvqwjv98ew","_id":"cjwzrk81k00185gwvqx42ddpb"},{"post_id":"cjwzrk81e000q5gwvubfaf6mh","tag_id":"cjwzrk81h00115gwvjdlddu94","_id":"cjwzrk81k001a5gwvdjjo6m3e"},{"post_id":"cjwzrk81f000t5gwv4h4vje46","tag_id":"cjwzrk81k00195gwv6cu648l7","_id":"cjwzrk81k001c5gwv82mjy51t"},{"post_id":"cjwzrk81g000u5gwvbta5ogfd","tag_id":"cjwzrk81k001b5gwvu4s6hfyt","_id":"cjwzrk81k001d5gwvg9s8t9sj"}],"Tag":[{"name":"jvm","_id":"cjwzrk80w00055gwvi0kdc9cu"},{"name":"Bookmark","_id":"cjwzrk812000a5gwvyy4jyg0q"},{"name":"linux","_id":"cjwzrk818000e5gwvtrcc6bee"},{"name":"maven","_id":"cjwzrk81b000i5gwv49ky7lbb"},{"name":"bug","_id":"cjwzrk81d000m5gwvp1li5ya4"},{"name":"Spring","_id":"cjwzrk81f000r5gwvc0tvzttt"},{"name":"mq","_id":"cjwzrk81g000v5gwv8v7c1mtz"},{"name":"Thread","_id":"cjwzrk81h000x5gwvwzhki8tr"},{"name":"Liunx","_id":"cjwzrk81h000z5gwva5ut57g5"},{"name":"spring","_id":"cjwzrk81h00115gwvjdlddu94"},{"name":"Mybatis","_id":"cjwzrk81i00135gwvlmqu0xlp"},{"name":"mongo","_id":"cjwzrk81i00155gwvqwjv98ew"},{"name":"java","_id":"cjwzrk81k00195gwv6cu648l7"},{"name":"Hexo","_id":"cjwzrk81k001b5gwvu4s6hfyt"}]}}